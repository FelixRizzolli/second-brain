<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       title="XML - DTD (Document Type Definition)" id="xml-dtd" help-id="xml-dtds">
    <show-structure for="chapter,procedure" depth="2"/>

    <chapter title="Grundlegendes zu DTD" id="grundlagen">
        <p>
            Document Type Definition ist die traditionelle Methode, um ein Standard für ein XML-Dokument zu definieren.
            Ein solcher Standard enthält Regeln, die bestimmen, welche Elemente und Attribute erforderlich oder zulässig
            sind und in welcher Reihenfolge sie stehen müssen oder dürfen. DTD wurde bereits für SGML entworfen und mit
            einigen notwendigen Änderungen und Ergänzungen für XML übernommen. Die Dateiendung für DTDs lautet
            <path>.dtd</path>. Um ein XML-Dokument an den Regeln einer DTD zu binden, muss vor dem Wurzelelement eine
            <code>&lt;!DOCTYPE&gt;</code>-Deklaration hingeschrieben werden, wo die URL bzw. die ID der DTD angegeben
            wird. Es kann sich dabei um eine SYSTEM-ID handeln, die stets eine URL benötigt oder um eine PUBLIC-ID, die
            sich auf eine öffentlich standardisierte DTD bezieht.
        </p>

        <table style="header-row">
            <tr>
                <td>Typ</td>
                <td>Beispiel</td>
                <td>Beschreibung</td>
            </tr>
            <tr>
                <td>SYSTEM-ID</td>
                <td>
                    <code-block lang="xml">
                        <![CDATA[
                        <!DOCTYPE comics SYSTEM "comics.dtd">
                        ]]>
                    </code-block>
                </td>
                <td>
                    In diesem Beispiel ist die DTD im selben Verzeichnis wie das XML-Dokument.
                </td>
            </tr>
            <tr>
                <td>SYSTEM-ID</td>
                <td>
                    <code-block lang="xml">
                        <![CDATA[
                        <!DOCTYPE comics SYSTEM "http://api.webpage.com/dtds/comics.dtd">
                        ]]>
                    </code-block>
                </td>
                <td>
                    In diesem Beispiel liegt die DTD auf einem Webserver. Wird die DTD von einer URL bezogen, so läuft
                    man immer mit der Gefahr, dass sie geändert oder entfernt werden könnte.
                </td>
            </tr>
            <tr>
                <td>PUBLIC-ID</td>
                <td>
                    <code-block lang="xml">
                        <![CDATA[
                        <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN">
                        ]]>
                    </code-block>
                </td>
                <td>
                    Hier wird eine PUBLIC-ID verwendet, um die DTD unabhängig von ihrer konkreten URL zu kennzeichnen.
                    Eine Anwendung, die ein Dokument auf der Grundlage dieser DTD validiert (ihre Gültigkeit überprüft),
                    muss allerdings eine eingebaute Version dieser DTD enthalten oder wissen, wie sie diese online
                    finden kann. Deshalb werden in der Praxis nur wenige öffentliche DTDs häufig verwendet.
                </td>
            </tr>
            <tr>
                <td>PUBLIC-ID</td>
                <td>
                    <code-block lang="xml">
                        <![CDATA[
                        <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
                        ]]>
                    </code-block>
                </td>
                <td>
                    Um sicherzustellen, dass die DTD auf jeden Fall gefunden wird, wird in diesem Beispiel zusätzlich
                    eine URL angegeben.
                </td>
            </tr>
        </table>

        <chapter title="Die DTD" id="grundlagen-dtd">
            <code-block lang="xml" collapsible="true" collapsed-title="note.xml">
                <![CDATA[
                <?xml version="1.0"?>

                <!DOCTYPE note
                [
                    <!ELEMENT note (to,from,heading,body)>
                    <!ELEMENT to (#PCDATA)>
                    <!ELEMENT from (#PCDATA)>
                    <!ELEMENT heading (#PCDATA)>
                    <!ELEMENT body (#PCDATA)>
                ]>

                <note>
                    <to>Tove</to>
                    <from>Jani</from>
                    <heading>Reminder</heading>
                    <body>Don't forget me this weekend</body>
                </note>
                ]]>
            </code-block>

            <code-block lang="xml" collapsible="true" collapsed-title="note.dtd">
                <![CDATA[
                <!ELEMENT note (to,from,heading,body)>
                <!ELEMENT to (#PCDATA)>
                <!ELEMENT from (#PCDATA)>
                <!ELEMENT heading (#PCDATA)>
                <!ELEMENT body (#PCDATA)>
                ]]>
            </code-block>

            <code-block lang="xml" collapsible="true" collapsed-title="note.xml">
                <![CDATA[
                <?xml version="1.0"?>
                <!DOCTYPE note SYSTEM "note.dtd">
                <note>
                    <to>Tove</to>
                    <from>Jani</from>
                    <heading>Reminder</heading>
                    <body>Don't forget me this weekend</body>
                </note>
                ]]>
            </code-block>

            <p>
                Eine DTD kann im XML-Dokument (nach der Steueranweisung und vor dem XML-Dokument) definiert (siehe
                links) werden oder auf eine externe Datei ausgelagert werden (siehe rechts) und folglich ins
                XML-Dokument eingebunden werden. Die DTD wird wie folgt interpretiert:
            </p>

            <table style="header-row">
                <tr>
                    <td>DTD-Statement</td>
                    <td>Beschreibung</td>
                </tr>
                <tr>
                    <td><code>!DOCTYPE note</code></td>
                    <td>
                        definiert <code>note</code> als das Wurzelelement (= root-Element) des Dokuments.
                    </td>
                </tr>
                <tr>
                    <td><code>!ELEMENT note</code></td>
                    <td>
                        definiert, dass das <code>note</code>-Element die Elemente <code>to</code>, <code>from</code>,
                        <code>heading</code> und <code>body</code> beinhalten muss.
                    </td>
                </tr>
                <tr>
                    <td><code>!ELEMENT to</code></td>
                    <td>
                        definiert, dass das <code>to</code>-Element einen Inhalt des Typs <code>#PCDATA</code>
                        beinhaltet.
                    </td>
                </tr>
                <tr>
                    <td><code>!ELEMENT from</code></td>
                    <td>
                        definiert, dass das <code>from</code>-Element einen Inhalt des Typs <code>#PCDATA</code>
                        beinhaltet.
                    </td>
                </tr>
                <tr>
                    <td><code>!ELEMENT heading</code></td>
                    <td>
                        definiert, dass das <code>heading</code>-Element einen Inhalt des Typs <code>#PCDATA</code>
                        beinhaltet.
                    </td>
                </tr>
                <tr>
                    <td><code>!ELEMENT body</code></td>
                    <td>
                        definiert, dass das <code>body</code>-Element einen Inhalt des Typs <code>#PCDATA</code>
                        beinhaltet.
                    </td>
                </tr>
            </table>
        </chapter>

        <chapter title="Die Bausteine von XML Dokumenten " id="grundlagen-bausteine">
            <table style="header-row">
                <tr>
                    <td>Baustein</td>
                    <td>Beschreibung</td>
                </tr>
                <tr>
                    <td>Elemente</td>
                    <td>
                        Elemente sind die Hauptbausteine von XML und HTML Dokumenten. In HTML sind beispielsweise
                        <code>body</code> und <code>table</code> Elemente. In XML können Elemente selbst definiert
                        werden wie beispielsweise <code>note</code> und <code>message</code>. Elemente können leer sein,
                        sowie Text oder andere Elemente beinhalten. Ein Beispiel von leeren in HTML wäre
                        <code>&lt;hr /&gt;</code>, <code>&lt;br /&gt;</code> und <code>&lt;img /&gt;</code>.
                    </td>
                </tr>
                <tr>
                    <td>Attribute</td>
                    <td>
                        Attribute können Extrainformationen über Elemente bereitstellen und bestehen immer aus
                        <code>name</code>/<code>value</code>-Paaren. Im HTML-Tag
                        <code>&lt;img src="computer.gif" /&gt;</code> beinhaltet beispielsweise das
                        <code>src</code>-Attribut die Information wo sich die Bilddatei befindet.
                    </td>
                </tr>
                <tr>
                    <td>Entities</td>
                    <td>
                        Einige Zeichen in XML werden speziell für die Syntax verwendet. Deshalb würde es zu Problemen
                        kommen wenn, wenn sie im Text vorkommen. Um dieses Problem zu entgehen werden die durch eine
                        Entität ersetzt: Das Zeichen <code>&lt;</code> wird durch <code>&amp;lt;</code> ersetzt.
                    </td>
                </tr>
                <tr>
                    <td>PCDATA</td>
                    <td>
                        PCDATA bedeutet parsed character data. PCDATA ist Text, der von einem Parser geparst wird. Der
                        Text wird vom Parser auf Entities und Markup untersucht. Tags innerhalb des Textes werden als
                        Markup behandelt und Entities werden umgewandelt.
                    </td>
                </tr>
                <tr>
                    <td>CDATA</td>
                    <td>
                        CDATA bedeutet character data und ist Text, der NICHT von einem Parser geparst wird. Tags
                        innerhalb des Textes werden NICHT als Markup behandelt und Entities werden nicht erweitert.
                    </td>
                </tr>
            </table>
        </chapter>
    </chapter>

    <chapter title="Elemente" id="elemente">
        <p>
            Ein Element wird mithilfe einer <code>&lt;!ELEMENT&gt;</code>-Deklaration angegeben. Der Elementinhalt kann
            aus einer Liste verschachtelter Elemente bestehen oder auf einfachen Textinhalten hinweisen. Enthält ein
            Element verschachtelte Tas, dann werden für diese wiederum <code>&lt;!ELEMENT&gt;</code>-Definitionen
            angegeben.
        </p>

        <chapter title="Vorgegebene Reihenfolge " id="elemente-reihenfolge">
            <p>
                Werden die Kind-Elemente in der DTD Kommasepariert angegeben, dann müssen sie in der vorgegebenen
                Reihenfolge vorkommen.
            </p>

            <code-block lang="xml">
                <![CDATA[
                <!ELEMENT comic (publisher, format, issue, title, authors, price)>
                ]]>
            </code-block>
        </chapter>

        <chapter title="Alternativen" id="elemente-alternativen">
            <p>
                Mit der Pipe können Alternativen für Elemente definiert werden:
                <code>&lt;!ELEMENT anschrift (postfach | strasse)&gt;</code> Alternativen können auch anstelle eines
                Elements innerhalb einer Klammer definiert werden. Mit der Angabe der Alternative <code>#PCDATA</code>
                wird ermöglicht, dass anstelle der möglichen Tags auch beliebiger Text zugelassen wird. Beispiel:
            </p>

            <code-block lang="xml">
                <![CDATA[
                <!-- DTD -->
                <!ELEMENT anschrift (name, (#PCDATA | postfach | (strasse, hausnr)), plz, ort)>

                <!-- XML -->
                <anschrift>
                  <name>Rheinwerk Verlag</name>
                  <strasse>Rheinwerkallee</strasse>
                  <hausnr>4</hausnr>
                  <plz>53227</plz>
                  <ort>Bonn</ort>
                </anschrift>
                <anschrift>
                  <name>MICROGRAFX (Deutschland) GmbH</name>
                  <postfach>14 18</postfach>
                  <plz>85704</plz>
                  <ort>Unterschleißheim</ort>
                </anschrift>
                ]]>
            </code-block>
        </chapter>

        <chapter title="Häufigkeitsmodifikatoren" id="elemente-haeufigkeitsmodifikatoren">
            <p>

            </p>

            <table style="header-row">
                <tr>
                    <td>Modifikator</td>
                    <td>Beschreibung</td>
                </tr>
                <tr>
                    <td><code>?</code></td>
                    <td>Der Inhalt darf einmal oder keinmal vorkommen.</td>
                </tr>
                <tr>
                    <td><code>+</code></td>
                    <td>Der Inhalt muss mindestens einmal vorkommen.</td>
                </tr>
                <tr>
                    <td><code>-</code></td>
                    <td>Der Inhalt darf beliebig oft vorkommen.</td>
                </tr>
            </table>

            <p>
                Beispielsweise können Personen nicht nur einen Vornamen haben, sondern auch mehrere:
            </p>


            <code-block lang="xml">
                <![CDATA[
                <!-- DTD -->
                <!ELEMENT author (lastname, firstname+)>

                <!-- XML -->
                <author>
                    <lastname>Bendis</lastname>
                    <firstname>Brian</firstname>
                    <firstname>Michael</firstname>
                </author>
                ]]>
            </code-block>
        </chapter>
    </chapter>

    <chapter title="Attribute" id="attribute">
        <p>
            Zulässige Attribute für ein Element werden in eine <code>&lt;!ATTLIST&gt;</code>-Angabe geschrieben. Es ist
            aber mit keiner Definitionsmethode möglich eine bestimmte Reihenfolge der Attribute eines Elements
            festzulegen.
        </p>

        <code-block lang="xml">
            <![CDATA[
            <!-- DTD SYNTAX -->
            <!ATTLIST element-name attribute-name attribute-type attribute-value>

            <!-- DTD EXAMPLE -->
            <!ATTLIST payment type CDATA "check">

            <!-- XML EXAMPLE -->
            <payment type="check" />
            ]]>
        </code-block>

        <chapter title="Atribut-Type" id="attribute-typ">
            <table style="header-row">
                <tr>
                    <td>Typ</td>
                    <td>Beschreibung</td>
                    <td>Beispiel</td>
                </tr>
                <tr>
                    <td><code>CDATA</code></td>
                    <td>
                        beliebiger Text
                    </td>
                    <td>
                        "Hallo" oder "25"
                    </td>
                </tr>
                <tr>
                    <td><code>(en1|en2|...)</code></td>
                    <td>
                        Liste möglicher Alternativen wie (rot | gruen | blau)
                    </td>
                    <td>
                        "kreuz" aus ("kreuz" | "pik" | "herz" | "karo")
                    </td>
                </tr>
                <tr>
                    <td><code>ID</code></td>
                    <td>
                        Bezug auf ein Attribut vom Typ ID eines anderen Elements. Dient der Definition von Bezügen wie
                        in relationalen Datenbanken.
                    </td>
                    <td>
                        "isbn3898421376", "B12345" (Leider ist eine reine Zahl verboten, weil sie kein gültiger XML-Name
                        ist.)
                    </td>
                </tr>
                <tr>
                    <td><code>IDREF</code></td>
                    <td>
                        Bezug auf ein Attribut vom Typ ID eines anderen Elements. Dient der Definition von Bezügen wie
                        in relationalen Datenbanken.
                    </td>
                    <td>
                        (siehe ID)
                    </td>
                </tr>
                <tr>
                    <td><code>IDREFS</code></td>
                    <td>
                        eine durch Leerzeichen getrennte Liste mehrerer IDs, auf die Bezug genommen wird
                    </td>
                    <td>
                        "isbn3898421376 isbn3898423557"
                    </td>
                </tr>
                <tr>
                    <td><code>NMTOKEN</code></td>
                    <td>
                        Darf nur die Zeichen enthalten, die in XML-Tag-Namen erlaubt sind. Ermöglicht eine stärkere
                        Inhaltskontrolle als CDATA.
                    </td>
                    <td>
                        "13.05.2011", "hallo", "funny-names"
                    </td>
                </tr>
                <tr>
                    <td><code>NMTOKENS</code></td>
                    <td>
                        Liste mehrerer NMTOKEN-Werte. XML-Parser behandeln Leerzeichen als Trennzeichen für mehrere
                        Einzelwerte.
                    </td>
                    <td>
                        "kueche diele bad" (Parser bildet die Einzelwerte kueche, diele und bad)
                    </td>
                </tr>
                <tr>
                    <td><code>ENTITY</code></td>
                    <td>
                        Verweist auf ein innerhalb der DTD definiertes Entity (Standard-Entitys wie <code>lt</code> oder
                        <code>quot</code> sind nicht zulässig).
                    </td>
                    <td>
                        (Entitys werden im Abschnitt »Entitys« noch genauer erläutert.)
                    </td>
                </tr>
                <tr>
                    <td><code>ENTITIES</code></td>
                    <td>
                        eine durch Leerzeichen getrennte Liste mehrerer ENTITY-Werte
                    </td>
                    <td>
                        (Entitys werden im Abschnitt »Entitys« noch genauer erläutert.)
                    </td>
                </tr>
                <tr>
                    <td><code>NOTATION</code></td>
                    <td>
                        der Wert eines speziellen DTD-Konstrukts vom Typ <code>&lt;!NOTATION&gt;</code>, das die
                        Abkürzung von SYSTEM- oder PUBLIC-IDs ermöglicht
                    </td>
                    <td>
                        <p>"gif", bezogen auf:</p>

                        <code-block lang="xml">
                            <![CDATA[
                            <!NOTATION gif SYSTEM "image/gif">
                            <!NOTATION jpg SYSTEM "image/jpeg">
                            <!NOTATION png SYSTEM "image/png">
                            <!ATTLIST bild typ NOTATION(gif | jpg | png)>
                            ]]>
                        </code-block>
                    </td>
                </tr>
                <tr>
                    <td><code>xml:</code></td>
                    <td>
                        Der Wert ist ein vordefinierter XML-Wert
                    </td>
                    <td></td>
                </tr>
            </table>
        </chapter>

        <chapter title="Attribut-Value" id="attribute-wert">
            <table style="header-row">
                <tr>
                    <td>Wert</td>
                    <td>Beschreibung</td>
                </tr>
                <tr>
                    <td><code>Literal</code></td>
                    <td>
                        Wird anstelle eines der drei Schlüsselwörter nur ein Standardwert in Anführungszeichen
                        angegeben, hat das Attribut diesen Standardwert, wird es weggelassen. Wird es dagegen explizit
                        angegeben, erhält es den entsprechenden Wert.
                    </td>
                </tr>
                <tr>
                    <td><code>#REQUIRED</code></td>
                    <td>
                        Das Attribut muss auf jeden Fall angegeben werden; es gibt keinen Standardwert.
                    </td>
                </tr>
                <tr>
                    <td><code>#IMPLIED</code></td>
                    <td>
                        Das Attribut kann weggelassen werden; einen Standardwert gibt es auch hier nicht.
                    </td>
                </tr>
                <tr>
                    <td><code>#FIXED Standardwert</code></td>
                    <td>
                        Das Attribut hat stets den hinter <code>#FIXED</code> angegebenen Standardwert. Wird es nicht
                        angegeben, dann wird es vom Parser trotzdem mit dem Standardwert ausgewertet. Falls es explizit
                        angegeben wird, muss es dagegen genau den Standardwert aufweisen.
                    </td>
                </tr>
            </table>
        </chapter>

        <chapter title="Bemerkung" id="attribute-bemerkung">
            <p>
                Trotz der vielen verschiedenen Attributtypen gibt es keine vernünftige Möglichkeit, die Intensität auf
                eine ganze Zahl zwischen 0 und 255 einzuschränken – es sei denn, man hat Lust, anstelle von CDATA die
                vollständige Liste (0 | 1 | 2 | ... | 254 | 255) einzugeben. Absolut unmöglich ist im Übrigen die
                Beschränkung auf einen bestimmten Datentyp wie ganze Zahl, Datum/Uhrzeit oder Ähnliches. Für solche
                Feinheiten ist das im weiteren Verlauf des Kapitels vorgestellte XML Schema geeigneter.
            </p>
        </chapter>
    </chapter>

    <chapter title="Entitys" id="entitys">
        <p>
            Entitys bieten vor allem die Möglichkeit, häufig vorkommende XML-Blöcke abzukürzen und Zeichen darzustellen,
            die im aktuellen Zeichensatz des XML-Dokuments nicht vorhanden sind. Im XML-Dokument werden die in der DTD
            definierten Entitys durch Entity-Referenzen angegeben.
        </p>
        <p>
            Eigene Entitys können wie folgt definiert werden:
        </p>

        <code-block lang="xml">
            <![CDATA[
            <!-- SYNTAX -->
            <!ENTITY entity-name "entity-value">

            <!-- BEISPIEL -->
            <!ENTITY copymsg "Copyright 2023 by Felix Rizzolli">
            ]]>
        </code-block>

        <p>
            Wird an irgendeiner Stelle eines XML-Dokuments, das von dieser DTD abhängt, die Entity-Referenz
            <code>&amp;copymsg;</code> verwendet, wird sie automatisch durch den String
            <code>"Copyright 2023 by Felix Rizzolli"</code> ersetzt. Entitys können aber nicht nur reinen Text
            enthalten, sondern auch XML-Auszeichnungen. Einfache Anführungszeichen ermöglichen es hierbei, dass die
            doppelten Anführungszeichen der enthaltenen Attributwerte einfach stehen gelassen werden können.
        </p>

        <code-block lang="xml">
            <![CDATA[
            <!ENTITY anschrift '<anschrift>
                                    <name>Rheinwerk Verlag</name>
                                    <strasse>Rheinwerkallee</strasse>
                                    <hausnr>4</hausnr>
                                    <plz>53227</plz>
                                    <ort>Bonn</ort>
                                </anschrift>'>
            ]]>
        </code-block>

        <p>
            Längere Entitys müssen nicht innerhalb der DTD selbst definiert werden, sondern können in eine externe
            XML-Datei geschrieben werden. Auf diese Datei wird dann in der Entity-Deklaration mithilfe einer SYSTEM-ID
            verwiesen:
        </p>

        <code-block lang="xml">
            <![CDATA[
            <!-- SYNTAX -->
            <!ENTITY entity-name SYSTEM "URI/URL">

            <!-- BEISPIEL -->
            <!ENTITY anschrift SYSTEM "anschrift.xml">
            ]]>
        </code-block>
    </chapter>

    <chapter title="Quellen" id="quellen">
        <tip>
            <b>(BUCH)</b>
            978-3836254663, IT Handbuch für Fachinformatiker, Sascha Kersken, Rheinwerk Verlag GmbH, 2017
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/xml/xml_dtd_attributes.asp" ignore-vars="true">
                https://www.w3schools.com/xml/xml_dtd_attributes.asp
            </a>, 2023-02-21 15:30
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/xml/xml_dtd.asp" ignore-vars="true">
                https://www.w3schools.com/xml/xml_dtd.asp
            </a>, 2023-02-25 05:00
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/xml/xml_dtd_intro.asp" ignore-vars="true">
                https://www.w3schools.com/xml/xml_dtd_intro.asp
            </a>, 2023-02-25 05:15
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/xml/xml_dtd_building.asp" ignore-vars="true">
                https://www.w3schools.com/xml/xml_dtd_building.asp
            </a>, 2023-02-25 05:30
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/xml/xml_dtd_elements.asp" ignore-vars="true">
                https://www.w3schools.com/xml/xml_dtd_elements.asp
            </a>, 2023-02-25 05:45
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/xml/xml_dtd_el_vs_attr.asp" ignore-vars="true">
                https://www.w3schools.com/xml/xml_dtd_el_vs_attr.asp
            </a>, 2023-02-25 05:45
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/xml/xml_dtd_entities.asp" ignore-vars="true">
                https://www.w3schools.com/xml/xml_dtd_entities.asp
            </a>, 2023-02-25 05:45
        </tip>
    </chapter>
</topic>