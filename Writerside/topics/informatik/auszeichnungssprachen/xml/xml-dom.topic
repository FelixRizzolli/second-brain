<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic id="xml-dom"
       title="XML - DOM (Document Object Model)"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd">
    <show-structure depth="2" for="chapter,procedure"/>

    <chapter id="grundlagen" title="Grundlegendes zum XML DOM">
        <p>
            Das Document Object Model (DOM) definiert einen Standard für den Zugriff auf und die Bearbeitung von
            Dokumenten:
        </p>

        <tip>
            <emphasis>
                "Das W3C Document Object Model (DOM) ist eine plattform- und sprachneutrale Schnittstelle, die es
                Programmen und Skripten ermöglicht, dynamisch auf Inhalt, Struktur und Stil eines Dokuments zuzugreifen
                und diese zu aktualisieren."
            </emphasis>
        </tip>

        <p>
            Das XML DOM definiert eine plattformübergreifende W3C Standardmethode für den Zugriff auf und die
            Bearbeitung von XML-Dokumenten. Es stellt ein XML-Dokument als Baumstruktur dar. Das DOM modelliert XML als
            eine Menge von Knotenobjekten. Auf diese Knoten kann mit JavaScript oder anderen Programmiersprachen
            zugegriffen werden. In den Beispielen wird JavaScript verwendet. Die Programmierschnittstelle zum DOM wird
            durch eine Reihe von Standardeigenschaften und -methoden definiert.
        </p>

        <chapter id="grundlagen-beispiel" title="Beispiel">
            <code-block lang="xml">
                <![CDATA[
                <?xml version="1.0" encoding="UTF-8"?>
                <bookstore>
                    <book category="cooking">
                        <title lang="en">Everyday Italian</title>
                        <author>Giada De Laurentiis</author>
                        <year>2005</year>
                        <price>30.00</price>
                    </book>
                    <book category="children">
                        <title lang="en">Harry Potter</title>
                        <author>J K. Rowling</author>
                        <year>2005</year>
                        <price>29.99</price>
                    </book>
                    <book category="web">
                        <title lang="en">XQuery Kick Start</title>
                        <author>James McGovern</author>
                        <author>Per Bothner</author>
                        <author>Kurt Cagle</author>
                        <author>James Linn</author>
                        <author>Vaidyanathan Nagarajan</author>
                        <year>2003</year>
                        <price>49.99</price>
                    </book>
                    <book category="web" cover="paperback">
                        <title lang="en">Learning XML</title>
                        <author>Erik T. Ray</author>
                        <year>2003</year>
                        <price>39.95</price>
                    </book>
                </bookstore>
                ]]>
            </code-block>
        </chapter>

        <chapter id="grundlagen-text" title="Text wird immer in Textknoten gespeichert.">
            <p>
                Ein häufiger Fehler bei der DOM-Verarbeitung ist die Erwartung, dass ein Elementknoten Text enthält. Der
                Text eines Elementknotens wird jedoch in einem Textknoten gespeichert. In diesem Beispiel:
                <code>&lt;year&gt;2005&lt;/year&gt;</code>, enthält der Elementknoten <code>&lt;year&gt;</code> einen
                Textknoten mit dem Wert <code>"2005"</code>. <code>"2005"</code> ist nicht der Wert des Elements
                <code>&lt;year&gt;</code> !
            </p>
        </chapter>

        <chapter id="grundlagen-knotenbaum" title="XML DOM Knotenbaum (node tree)">
            <p>
                Das XML-DOM betrachtet ein XML-Dokument als Baumstruktur. Die Baumstruktur wird als Knotenbaum (eng.
                node tree) bezeichnet. Auf alle Knoten kann über den Baum zugegriffen werden. Ihr Inhalt kann geändert
                oder gelöscht werden, und es können neue Elemente erstellt werden. Der Knotenbaum zeigt die Menge der
                Knoten und die Verbindungen zwischen ihnen. Der Baum beginnt mit dem Wurzelknoten und verzweigt sich bis
                zu den Textknoten auf der untersten Ebene des Baums:
            </p>

            <img alt="XML - Knotenbaum" src="xml-knotenbaum.png"/>
        </chapter>

        <chapter id="grundlagen-knoten" title="Eltern, Kinder und Geschwister von Knoten">
            <p>
                Die Knoten im Knotenbaum stehen in einer hierarchischen Beziehung zueinander. Die Begriffe Elternteil
                (eng. parent), Kind (eng. child) und Geschwister (eng. sibling) werden verwendet, um die Beziehungen zu
                beschreiben. Elternknoten haben Kinder. Kinder auf der gleichen Ebene werden als Geschwister (Brüder
                oder Schwestern) bezeichnet.
            </p>

            <list>
                <li>In einem Knotenbaum wird der oberste Knoten als Wurzel bezeichnet.</li>
                <li>Jeder Knoten, außer der Wurzel, hat genau einen Elternknoten.</li>
                <li>Ein Knoten kann eine beliebige Anzahl von Kindern haben.</li>
                <li>Ein Blatt ist ein Knoten, der keine Kinder hat.</li>
                <li>Geschwisterknoten sind Knoten mit demselben Elternteil</li>
            </list>

            <p>
                Die folgende Abbildung veranschaulicht einen Teil des Knotenbaums und die Beziehung zwischen den Knoten:
            </p>

            <img alt="XML - Knotenbaum (Beziehungen)" src="xml-knotenbaum-beziehungen.png"/>
        </chapter>

        <chapter id="grundlagen-zugriff" title="Zugriff auf Knoten">
            <p>
                Es gibt folgende drei Möglichkeiten, um auf Knoten zuzugreifen:
            </p>

            <list>
                <li>
                    Die Verwendung der Methode <code>getElementsByTagName()</code>, welche alle Knoten mit einem
                    bestimmten übergebenen Tag-Namen im XML-Dokument sucht.
                </li>
                <li>
                    Durchlaufen des Knotenbaums in einer Schleife.
                </li>
                <li>
                    Durch die Navigation im Knotenbaum, unter Verwendung der Knotenbeziehungen.
                </li>
            </list>
        </chapter>
    </chapter>

    <chapter id="eigenschaften" title="Eigenschaften (Properties)">
        <p>
            Eigenschaften werden oft als etwas bezeichnet, das ist (z. B. der Knotenname ist <code>"book"</code>).
            Typische Eigenschaften sind:
        </p>

        <table>
            <tr>
                <td>Eigenschaften</td>
                <td>Beschreibung</td>
            </tr>
            <tr>
                <td><code>documentElement</code></td>
                <td>
                    Diese Eigenschaft hat das XML-Dokument selbst und ist das Wurzelelement.
                </td>
            </tr>
            <tr>
                <td><code>x.nodeName</code></td>
                <td>
                    Der Name des Knotens <code>x</code> bei Elementknoten Tagname, bei Attributknoten Attributname, bei
                    einem Taxtknoten ist es immer <code>#text</code> und bei einem Dokumentknoten immer
                    <code>#document</code>. Diese Eigenschaft ist nicht manipulierbar (read only).

                </td>
            </tr>
            <tr>
                <td><code>x.nodeType</code></td>
                <td>
                    Der Typ des Knotens <code>x</code>. Es gibt folgende Knotentypen: Element, Attribute, Text,
                    Kommentar und Dokument. Diese Eigenschaft ist nicht manipulierbar (read only).
                </td>
            </tr>
            <tr>
                <td><code>x.nodeValue</code></td>
                <td>
                    Der Wert des Knotens <code>x</code>. Für ein Elementknoten ist der Wert nicht definiert
                    (= undefined), für ein Textknoten ist der Wert der Text selbst und für ein Attributknoten ist der
                    Wert des Attributs.
                </td>
            </tr>
            <tr>
                <td><code>x.parentNode</code></td>
                <td>
                    Diese Eigenschaft enthält ein Knotenlistenobjekt der Elternknoten des Knotens <code>x</code>.
                </td>
            </tr>
            <tr>
                <td><code>x.childNodes</code></td>
                <td>
                    Diese Eigenschaft enthält ein Knotenlistenobjekt der Kindknoten des Knotens <code>x</code>.
                </td>
            </tr>
            <tr>
                <td><code>x.firstChild</code></td>
                <td>
                    Diese Eigenschaft enthält den ersten Kindknoten des Knotens <code>x</code>.
                </td>
            </tr>
            <tr>
                <td><code>x.lastChild</code></td>
                <td>
                    Diese Eigenschaft enthält den letzten Kindknoten des Knotens <code>x</code>.
                </td>
            </tr>
            <tr>
                <td><code>x.nextSibling</code></td>
                <td>
                    Diese Eigenschaft enthält den nächsten Geschwisterknoten des Knotens <code>x</code>.
                </td>
            </tr>
            <tr>
                <td><code>x.previousSibling</code></td>
                <td>
                    Diese Eigenschaft enthält den vorherigen Geschwisterknoten des Knotens <code>x</code>.
                </td>
            </tr>
            <tr>
                <td><code>x.attributes</code></td>
                <td>
                    Die Attribute des Knotens <code>x</code>. Die Attributeigenschaft <code>attributes</code> eines
                    Elementknotens gibt eine Liste von Attributknoten zurück. Dies wird als <code>named node map</code>
                    bezeichnet und ähnelt einer Knotenliste, mit Ausnahme einiger Unterschiede bei den Methoden und
                    Eigenschaften. Eine Attributliste hält sich selbst auf dem neuesten Stand. Wenn ein Attribut
                    gelöscht oder hinzugefügt wird, wird die Liste automatisch aktualisiert.
                </td>
            </tr>
            <tr>
                <td><code>x.length</code></td>
                <td>
                    Die Länge eines Knotenlistenobjekts. Ein Knotenlistenobjekt hält sich selbst auf dem neuesten Stand.
                    Wenn ein Element gelöscht oder hinzugefügt wird, wird die Liste automatisch aktualisiert. Die
                    Längeneigenschaft <code>length</code> einer Knotenliste ist die Anzahl der Knoten in der Liste.
                </td>
            </tr>
        </table>
    </chapter>

    <chapter id="methoden" title="Methoden (Methods)">
        <p>
            Methoden werden oft als etwas bezeichnet, das getan wird (z.B. den Knoten <code>"book"</code> löschen).
            Typische Methoden sind:
        </p>

        <table>
            <tr>
                <td>Methode</td>
                <td>Beschreibung</td>
            </tr>
            <tr>
                <td><code>x.getElementsByTagName(name)</code></td>
                <td>
                    Holt alle Elemente aus dem Knoten <code>x</code>, mit einem speziellen Tagnamen.
                </td>
            </tr>
            <tr>
                <td><code>x.appendChild(node)</code></td>
                <td>
                    Fügt ein Kindknoten node zum bestehenden Knoten <code>x</code> hinzu. Der neue Knoten wird nach
                    allen vorhandenen Kindknoten hinzugefügt (angehängt).
                </td>
            </tr>
            <tr>
                <td><code>x.insertBefore(newNode, node)</code></td>
                <td>
                    Fügt ein Kindknoten newNode vor einem speziellen bestehenden Knoten node im Knoten <code>x</code>
                    hinzu. Diese Methode wird verwendet, wenn Position des Knotens wichtig ist.
                </td>
            </tr>
            <tr>
                <td><code>x.insertData(offset, string)</code></td>
                <td>
                    Fügt Text <code>string</code> beginnend an einer speziellen Stelle <code>offset</code> einem
                    existierenden Textknoten <code>x</code> hinzu.
                </td>
            </tr>
            <tr>
                <td><code>x.removeChild(node)</code></td>
                <td>
                    Entfernt ein Kindknoten <code>node</code> vom Knoten <code>x</code>. Wenn ein Knoten entfernt wird,
                    werden auch alle seine Kindknoten entfernt.
                </td>
            </tr>
            <tr>
                <td><code>x.removeAttribute(attribute)</code></td>
                <td>
                    Entfernt das Attribut <code>attribute</code> vom Elementknoten <code>x</code>.
                </td>
            </tr>
            <tr>
                <td><code>x.replaceChild(node)</code></td>
                <td>
                    Ersetzt den Knoten <code>x</code> mit dem übergebenen Knoten node.
                </td>
            </tr>
            <tr>
                <td><code>x.replaceData(offset, length, string)</code></td>
                <td>
                    Wird verwendet um den Text im Knoten <code>x</code> zu ersetzten. Dabei ist <code>offset</code> – wo
                    die Ersetzung der Zeichen beginnen soll, der Offset-Wert beginnt bei Null; <code>length</code> – wie
                    viele Zeichen ersetzt werden sollen und <code>string</code> – die einzufügende Zeichenfolge.
                </td>
            </tr>
            <tr>
                <td><code>x.getAttribute(attribute)</code></td>
                <td>
                    Gibt den Wert eines Attributs <code>attribute</code> vom Knoten <code>x</code> zurück.
                </td>
            </tr>
            <tr>
                <td><code>x.getAttributeNode(attribute)</code></td>
                <td>
                    Gibt den Attributknoten des Attributs <code>attribute</code> vom Knoten <code>x</code> zurück.
                </td>
            </tr>
            <tr>
                <td><code>x.setAttribute(attribute, attributeValue)</code></td>
                <td>
                    Setzt den Wert <code>attributeValue</code> eines Attributs <code>attribute</code> vom Knoten
                    <code>x</code>. Ist das Attribut nicht vorhanden wird es neu gesetzt, ist es bereits vorhanden, wird
                    es überschrieben.
                </td>
            </tr>
            <tr>
                <td><code>xmlDoc.createElement(element)</code></td>
                <td>
                    Erstellt einen neuen Elementknoten <code>element</code>, welcher später als Argument z.B. in der
                    <code>appendChild()</code>-Methode auf ein Elementknoten übergeben werden kann.
                </td>
            </tr>
            <tr>
                <td><code>xmlDoc.createAttribute(attribute)</code></td>
                <td>
                    Erstellt einen neuen Attributknoten <code>attribute</code>, welcher später als Argument z.B. in der
                    <code>setAttributeNode()</code>-Methode auf einen Elementknoten übergeben werden kann. Existiert das
                    Attribut bereits, dann wird es ersetzt.
                </td>
            </tr>
            <tr>
                <td><code>xmlDoc.createTextNode(string)</code></td>
                <td>
                    Erstellt einen neuen Textknoten <code>string</code>, welcher später als Argument z.B. in der
                    <code>appendChild()</code>-Methode auf ein Elementknoten übergeben werden kann.
                </td>
            </tr>
            <tr>
                <td><code>xmlDoc.createCDATASection(string)</code></td>
                <td>
                    Erstellt ein neuen CDATA-Sectionknoten string, welcher später als Argument z.B. in der
                    <code>appendChild()</code>-Methode auf ein Elementknoten übergeben werden kann.
                </td>
            </tr>
            <tr>
                <td><code>x.createComment(string)</code></td>
                <td>
                    Erstellt einen neuen Kommentarknoten string, welcher später als Argument z.B. in der
                    <code>appendChild()</code>-Methode auf ein Elementknoten übergeben werden kann.
                </td>
            </tr>
            <tr>
                <td><code>x.cloneNode(boolean)</code></td>
                <td>
                    Die <code>cloneNode()</code>-Methode erstellt eine Kopie eines angegebenen Knotens, in diesem Fall
                    <code>x</code>. Sie hat einen Parameter (<code>true</code> oder <code>false</code>) welcher angibt,
                    ob der geklonte Knoten alle Attribute und Kindknoten des Originalknotens enthalten soll.
                </td>
            </tr>
        </table>
    </chapter>

    <chapter id="quellen" title="Quellen">
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/xml/xml_dom.asp" ignore-vars="true">
                https://www.w3schools.com/xml/xml_dom.asp
            </a>, 2023-02-22 20:00
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/xml/dom_intro.asp" ignore-vars="true">
                https://www.w3schools.com/xml/dom_intro.asp
            </a>, 2023-02-26 06:00
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/xml/dom_nodes.asp" ignore-vars="true">
                https://www.w3schools.com/xml/dom_nodes.asp
            </a>, 2023-02-26 06:30
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/xml/dom_nodes_access.asp" ignore-vars="true">
                https://www.w3schools.com/xml/dom_nodes_access.asp
            </a>, 2023-02-26 06:30
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/xml/dom_nodes_info.asp" ignore-vars="true">
                https://www.w3schools.com/xml/dom_nodes_info.asp
            </a>, 2023-02-26 07:00
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/xml/dom_nodes_nodelist.asp" ignore-vars="true">
                https://www.w3schools.com/xml/dom_nodes_nodelist.asp
            </a>, 2023-02-26 07:30
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/xml/dom_nodes_navigate.asp" ignore-vars="true">
                https://www.w3schools.com/xml/dom_nodes_navigate.asp
            </a>, 2023-02-26 07:45
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/xml/dom_nodes_get.asp" ignore-vars="true">
                https://www.w3schools.com/xml/dom_nodes_get.asp
            </a>, 2023-02-26 08:00
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/xml/dom_nodes_set.asp" ignore-vars="true">
                https://www.w3schools.com/xml/dom_nodes_set.asp
            </a>, 2023-02-26 08:00
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/xml/dom_nodes_remove.asp" ignore-vars="true">
                https://www.w3schools.com/xml/dom_nodes_remove.asp
            </a>, 2023-02-26 08:15
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/xml/dom_nodes_replace.asp" ignore-vars="true">
                https://www.w3schools.com/xml/dom_nodes_replace.asp
            </a>, 2023-02-26 08:15
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/xml/dom_nodes_create.asp" ignore-vars="true">
                https://www.w3schools.com/xml/dom_nodes_create.asp
            </a>, 2023-02-26 08:30
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/xml/dom_nodes_add.asp" ignore-vars="true">
                https://www.w3schools.com/xml/dom_nodes_add.asp
            </a>, 2023-02-26 08:30
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/xml/dom_nodes_clone.asp" ignore-vars="true">
                https://www.w3schools.com/xml/dom_nodes_clone.asp
            </a>, 2023-02-26 08:45
        </tip>
    </chapter>
</topic>