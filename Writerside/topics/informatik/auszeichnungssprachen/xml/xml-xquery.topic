<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       title="XML - XQuery" id="xml-xquery">
    <show-structure for="chapter,procedure" depth="2"/>

    <chapter title="Grundlegendes zu XQuery" id="grundlagen">
        <img src="xml_tools_overview.png" alt="XML - Tools"/>

        <p>
            XQuery ist DIE Sprache für Abfragen auf XML-Dokumenten und baut dabei auf
            <a href="xml-xpath.topic">XPath</a>-Ausdrücke. XQuery wird von allen größeren Datenbanken unterstützt und
            ist eine W3C Empfehlung. XQuery kann verwendet werden, um Informationen zu extrahieren, um zusammengefasste
            Berichte zu generieren, um XML in XHTML zu transformieren, um Web-Dokumente auf relevante Informationen zu
            durchsuchen. In XQuery verwendet auch jene Funktionen wie in <a href="xml-xslt.topic">XSLT</a> und
            <a href="xml-xpath.topic">XPath verwendet</a> werden können. Eine Liste der Funktionen ist hier:
            <a href="https://www.w3schools.com/xml/xsl_functions.asp">
                XPath, XQuery, and XSLT Function Reference (w3schools.com)
            </a>
        </p>
    </chapter>

    <chapter title="Beispiel" id="beispiel">
        <code-block lang="xml">
            <![CDATA[
            <?xml version="1.0" encoding="UTF-8"?>

            <bookstore>
                <book category="COOKING">
                    <title lang="en">Everyday Italian</title>
                    <author>Giada De Laurentiis</author>
                    <year>2005</year>
                    <price>30.00</price>
                </book>

                <book category="CHILDREN">
                    <title lang="en">Harry Potter</title>
                    <author>J K. Rowling</author>
                    <year>2005</year>
                    <price>29.99</price>
                </book>

                <book category="WEB">
                    <title lang="en">XQuery Kick Start</title>
                    <author>James McGovern</author>
                    <author>Per Bothner</author>
                    <author>Kurt Cagle</author>
                    <author>James Linn</author>
                    <author>Vaidyanathan Nagarajan</author>
                    <year>2003</year>
                    <price>49.99</price>
                </book>

                <book category="WEB">
                    <title lang="en">Learning XML</title>
                    <author>Erik T. Ray</author>
                    <year>2003</year>
                    <price>39.95</price>
                </book>
            </bookstore>
            ]]>
        </code-block>
    </chapter>

    <chapter title="Aufbau von XQuery" id="aufbau">
        <table>
            <tr>
                <td>Element</td>
                <td>Beispiel</td>
                <td>Beschreibung</td>
            </tr>
            <tr>
                <td>Funktion</td>
                <td><code><format color="Red">doc("books.xml")</format></code></td>
                <td>
                    XQuery verwendet Funktionen, um Daten aus einem XML-Dokument zu extrahieren. Die
                    <code>doc()</code>-Funktion wird verwendet, um Informationen aus einer XML-Datei zu extrahieren.
                </td>
            </tr>
            <tr>
                <td>Pfadausdruck</td>
                <td><code>doc("books.xml")<format color="Red">/bookstore/book/title</format></code></td>
                <td>
                    <p>
                        XQuery verwendet Pfadausdrücke, um durch die Elemente in einem XML-Dokument zu navigieren. Das
                        Beispiel extrahiert Folgendes:
                    </p>

                    <code-block lang="xml">
                        <![CDATA[
                        <title lang="en">Everyday Italian</title>
                        <title lang="en">Harry Potter</title>
                        <title lang="en">XQuery Kick Start</title>
                        <title lang="en">Learning XML</title>
                        ]]>
                    </code-block>
                </td>
            </tr>
            <tr>
                <td>Prädikate</td>
                <td><code>doc("books.xml")/bookstore/book<format color="Red">[price&lt;30]</format></code></td>
                <td>
                    <p>
                        XQuery verwendet Prädikate, um die aus XML-Dokumenten extrahierten Daten einzuschränken.
                        Das Beispiel extrahiert Folgendes:
                    </p>

                    <code-block lang="xml">
                        <![CDATA[
                        <book category="CHILDREN">
                            <title lang="en">Harry Potter</title>
                            <author>J K. Rowling</author>
                            <year>2005</year>
                            <price>29.99</price>
                        </book>
                        ]]>
                    </code-block>
                </td>
            </tr>
        </table>
    </chapter>

    <chapter title="FLWOR Ausdrücke" id="flwor">
        <chapter title="Grundlagen" id="flwor-grundlagen">
            <p>
                FLWOR ist ein Akronym für "For, Let, Where, Order by, Return".
            </p>

            <code-block lang="xml">
                <![CDATA[
                <book category="CHILDREN">
                    <title lang="en">Harry Potter</title>
                    <author>J K. Rowling</author>
                    <year>2005</year>
                    <price>29.99</price>
                </book>
                ]]>
            </code-block>

            <table>
                <tr>
                    <td>Klausel</td>
                    <td>Definition</td>
                    <td>Beschreibung</td>
                </tr>
                <tr>
                    <td><code>for</code></td>
                    <td><emphasis>OPTIONAL</emphasis> wählt eine Folge von Knoten aus</td>
                    <td>
                        Die <code>for</code>-Klausel wählt alle Buchelemente unter dem Element <code>bookstore</code> in
                        einer Variablen namens <code>$x</code> aus.
                    </td>
                </tr>
                <tr>
                    <td><code>let</code></td>
                    <td><emphasis>OPTIONAL</emphasis> bindet eine Sequenz an eine Variable</td>
                    <td>
                        <emphasis>(im Beispiel nicht vorhanden)</emphasis>
                    </td>
                </tr>
                <tr>
                    <td><code>where</code></td>
                    <td><emphasis>OPTIONAL</emphasis> filtert die Knotenpunkte</td>
                    <td>
                        Die <code>where</code>-Klausel wählt nur <code>book</code>-Elemente aus, deren
                        <code>price</code>-Element einen Wert von mehr als <code>30</code> hat.
                    </td>
                </tr>
                <tr>
                    <td><code>order by</code></td>
                    <td><emphasis>OPTIONAL</emphasis> sortiert die Knotenpunkte</td>
                    <td>
                        Die <code>order by</code>-Klausel definiert die Sortierreihenfolge. Es wird nach dem Element
                        <code>title</code> sortiert.
                    </td>
                </tr>
                <tr>
                    <td><code>return</code></td>
                    <td>definiert was zurückgegeben werden soll (wird einmal für jeden Knoten ausgewertet)</td>
                    <td>
                        Die <code>return</code>-Klausel gibt an, was zurückgegeben werden soll. Hier werden die
                        <code>title</code>-Elemente zurückgegeben.
                    </td>
                </tr>
            </table>
        </chapter>

        <chapter title="Die for Klausel" id="flwor-for">
            <p>
                Die <code>for</code>-Klausel bindet eine Variable an jedes Element, das durch den
                <code>in</code>-Ausdruck zurückgegeben wird. Die <code>for</code>-Klausel führt zu einer Iteration. Es
                können mehrere <code>for</code>-Klauseln im selben FLWOR-Ausdruck vorkommen.
            </p>

            <p>
                Um eine bestimmte Anzahl von Schleifen in einer <code>for</code> Klausel zu bilden, kann das
                Schlüsselwort <code>to</code> verwendet werden:
            </p>

            <code-block lang="xml" collapsible="true" collapsed-title="XQuery">
                <![CDATA[
                for $x in (1 to 5)
                return <test>{$x}</test>
                ]]>
            </code-block>

            <code-block lang="xml" collapsible="true" collapsed-title="Ergebnis">
                <![CDATA[
                <test>1</test>
                <test>2</test>
                <test>3</test>
                <test>4</test>
                <test>5</test>
                ]]>
            </code-block>

            <p>
                Das Schlüsselwort <code>at</code> kann zum Zählen der Iterationen verwendet werden:
            </p>

            <code-block lang="xml" collapsible="true" collapsed-title="XQuery">
                <![CDATA[
                for $x at $i in doc("books.xml")/bookstore/book/title
                return <book>{$i}. {data($x)}</book>
                ]]>
            </code-block>

            <code-block lang="xml" collapsible="true" collapsed-title="Ergebnis">
                <![CDATA[
                <book>1. Everyday Italian</book>
                <book>2. Harry Potter</book>
                <book>3. XQuery Kick Start</book>
                <book>4. Learning XML</book>
                ]]>
            </code-block>

            <p>
                Es ist auch mehr als ein <code>in</code>-Ausdruck in der <code>for</code>-Klausel zulässig. Mehrere
                <code>in</code>-Ausdrücke müssen Kommasepariert angegeben werden:
            </p>

            <code-block lang="xml" collapsible="true" collapsed-title="XQuery">
                <![CDATA[
                for $x in (10,20), $y in (100,200)
                return <test>x={$x} and y={$y}</test>
                ]]>
            </code-block>

            <code-block lang="xml" collapsible="true" collapsed-title="Ergebnis">
                <![CDATA[
                <test>x=10 and y=100</test>
                <test>x=10 and y=200</test>
                <test>x=20 and y=100</test>
                <test>x=20 and y=200</test>
                ]]>
            </code-block>

        </chapter>

        <chapter title="Die let Klausel" id="flwor-let">
            <p>
                Die <code>let</code>-Klausel ermöglicht die Zuweisung von Variablen, um die mehrfache Wiederholung
                desselben Ausdrucks zu vermeiden. Die <code>let</code>-Klausel führt nicht zu einer Iteration.
            </p>

            <code-block lang="xml" collapsible="true" collapsed-title="XQuery">
                <![CDATA[
                let $x := (1 to 5)
                return <test>{$x}</test>
                ]]>
            </code-block>

            <code-block lang="xml" collapsible="true" collapsed-title="Ergebnis">
                <![CDATA[
                <test>1 2 3 4 5</test>
                ]]>
            </code-block>
        </chapter>

        <chapter title="Die where Klausel" id="flwor-where">
            <p>
                Die <code>where</code>-Klausel wird verwendet, um ein oder mehrere Kriterien für das Ergebnis anzugeben:
            </p>

            <code-block lang="xml" collapsible="true" collapsed-title="XQuery">
                <![CDATA[
                where $x/price>30 and $x/price<100
                ]]>
            </code-block>
        </chapter>

        <chapter title="Die order by Klausel" id="flwor-order">
            <p>
                Die <code>order by</code>-Klausel wird verwendet, um die Sortierreihenfolge des Ergebnisses anzugeben.
                Im folgenden Beispiel wird das Ergebnis nach <code>category</code> und <code>title</code> sortieren:
            </p>

            <code-block lang="xml" collapsible="true" collapsed-title="XQuery">
                <![CDATA[
                for $x in doc("books.xml")/bookstore/book
                order by $x/@category, $x/title
                return $x/title
                ]]>
            </code-block>

            <code-block lang="xml" collapsible="true" collapsed-title="Ergebnis">
                <![CDATA[
                <title lang="en">Harry Potter</title>
                <title lang="en">Everyday Italian</title>
                <title lang="en">Learning XML</title>
                <title lang="en">XQuery Kick Start</title>
                ]]>
            </code-block>
        </chapter>

        <chapter title="Die return Klausel" id="flwor-return">
        </chapter>

        <chapter title="Das Ergebnis in einer HTML-Liste ausgeben" id="flwor-ergebnis-html">
        </chapter>
    </chapter>

    <chapter title="Syntax" id="syntax">

        <chapter title="Grundlegende Regeln" id="syntax-regeln">
        </chapter>

        <chapter title="Bedingungen" id="syntax-bedingungen">
        </chapter>
    </chapter>

    <chapter title="Benutzerdefinierte XQuery Funktionen" id="benutzerdefiniert">

        <chapter title="Syntax" id="benutzerdefiniert-syntax">
        </chapter>

        <chapter title="Beispiel" id="benutzerdefiniert-beispiel">
        </chapter>
    </chapter>

    <chapter title="Quellen" id="quellen">
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/xml/xml_xquery.asp" ignore-vars="true">
                https://www.w3schools.com/xml/xml_xquery.asp
            </a>, 2023-02-25 06:00
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/xml/xquery_intro.asp" ignore-vars="true">
                https://www.w3schools.com/xml/xquery_intro.asp
            </a>, 2023-02-25 06:00
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/xml/xquery_example.asp" ignore-vars="true">
                https://www.w3schools.com/xml/xquery_example.asp
            </a>, 2023-02-25 06:00
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/xml/xquery_flwor.asp" ignore-vars="true">
                https://www.w3schools.com/xml/xquery_flwor.asp
            </a>, 2023-02-25 06:30
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/xml/xquery_flwor_html.asp" ignore-vars="true">
                https://www.w3schools.com/xml/xquery_flwor_html.asp
            </a>, 2023-02-25 07:15
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/xml/xquery_add.asp" ignore-vars="true">
                https://www.w3schools.com/xml/xquery_add.asp
            </a>, 2023-02-25 07:30
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/xml/xquery_syntax.asp" ignore-vars="true">
                https://www.w3schools.com/xml/xquery_syntax.asp
            </a>, 2023-02-25 07:40
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/xml/xquery_select.asp" ignore-vars="true">
                https://www.w3schools.com/xml/xquery_select.asp
            </a>, 2023-02-25 08:00
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/xml/xquery_functions.asp" ignore-vars="true">
                https://www.w3schools.com/xml/xquery_functions.asp
            </a>, 2023-02-25 08:00
        </tip>
    </chapter>
</topic>