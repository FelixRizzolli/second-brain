<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       title="SVG (Scalable Vector Graphics)" id="svg">
    <show-structure for="chapter,procedure" depth="2"/>

    <chapter title="Was ist SVG?" id="was-ist-svg">
        Bei SVG handelt es sich um eine XML-basierte Auszeichnungssprache, um zweidimensionale Vektorgrafiken zu
        beschreiben. Dazu definiert die entsprechende Spezifikation
        (<a href="https://www.w3.org/TR/SVG2/">www.w3.org/TR/SVG2/</a>) verschiedene Elemente.
    </chapter>

    <chapter title="SVG Elemente" id="svg-elemente">
        <table style="header-column">
            <tr>
                <td>Element</td>
                <td>Bedeutung</td>
                <td>Attribute</td>
            </tr>
            <tr>
                <td><code>&lt;rect&gt;</code></td>
                <td>Rechteck</td>
                <td>
                    <list>
                        <li><code>x</code> x-Koordinate</li>
                        <li><code>y</code> y-Koordinate</li>
                        <li><code>width</code> Breite des Rechtecks</li>
                        <li><code>height</code> Höhe des Rechtecks</li>
                        <li><code>rx</code> horizontaler Radius für abgerundete Ecken</li>
                        <li><code>ry</code> vertikaler Radius für abgerundete Ecken</li>
                    </list>
                </td>
            </tr>
            <tr>
                <td><code>&lt;circle&gt;</code></td>
                <td>Kreis</td>
                <td>
                    <list>
                        <li><code>cx</code> x-Koordinate</li>
                        <li><code>cy</code> y-Koordinate</li>
                        <li><code>r</code> Radius</li>
                    </list>
                </td>
            </tr>
            <tr>
                <td><code>&lt;ellipse&gt;</code></td>
                <td>Ellipse</td>
                <td>
                    <list>
                        <li><code>cx</code> x-Koordinate des Mittelpunkts</li>
                        <li><code>cy</code> y-Koordinate des Mittelpunkts</li>
                        <li><code>rx</code> Radius der Halbachse in x-Richtung</li>
                        <li><code>ry</code> Radius der Halbachse in y-Richtung</li>
                    </list>
                </td>
            </tr>
            <tr>
                <td><code>&lt;line&gt;</code></td>
                <td>Linie mit zwei Punkten</td>
                <td>
                    <list>
                        <li><code>x1</code> x-Koordinate des erste Punkts</li>
                        <li><code>y1</code> y-Koordinate des erste Punkts</li>
                        <li><code>x2</code> x-Koordinate des zweiten Punkts</li>
                        <li><code>y2</code> y-Koordinate des zweiten Punkts</li>
                    </list>
                </td>
            </tr>
            <tr>
                <td><code>&lt;polyline&gt;</code></td>
                <td>Linie mit mehreren Zwischenpunkten</td>
                <td>
                    <list>
                        <li>
                            <code>points</code> Liste der x- und y-Koordinaten der einzelnen durch die Linien zu
                            verbindenden Punkte, wobei die x-y-Paare durch Kommas oder Leerzeichen getrennt angegeben
                            werden
                        </li>
                    </list>
                </td>
            </tr>
            <tr>
                <td><code>&lt;polygon&gt;</code></td>
                <td>Polygon</td>
                <td>
                    <list>
                        <li>
                            <code>points</code> Liste der x- und y-Koordinaten der einzelnen durch die Linien zu
                            verbindenden Punkte, wobei die x-y-Paare durch Kommas oder Leerzeichen getrennt angegeben
                            werden
                        </li>
                    </list>
                </td>
            </tr>
            <tr>
                <td><code>&lt;path&gt;</code></td>
                <td>Pfad</td>
                <td></td>
            </tr>
            <tr>
                <td><code>&lt;g&gt;</code></td>
                <td>Gruppe von Grafikelementen</td>
                <td></td>
            </tr>
            <tr>
                <td><code>&lt;text&gt;</code></td>
                <td>Textinhalte</td>
                <td>
                    <list>
                        <li><code>x</code> x-Koordinate der Grundlinie</li>
                        <li><code>y</code> y-Koordinate der Grundlinie</li>
                        <li><code></code></li>
                    </list>
                </td>
            </tr>
            <tr>
                <td><code>&lt;image&gt;</code></td>
                <td>externe Bilder</td>
                <td>
                    <list>
                        <li><code>x</code> x-Koordinate</li>
                        <li><code>y</code> y-Koordinate</li>
                        <li><code>width</code> Breite des Rechtecks</li>
                        <li><code>height</code> Höhe des Rechtecks</li>
                    </list>
                </td>
            </tr>
            <tr>
                <td><code>&lt;linearGradient&gt;</code></td>
                <td>linearer Farbverlauf</td>
                <td></td>
            </tr>
            <tr>
                <td><code>&lt;radialGradient&gt;</code></td>
                <td>radialer Farbverlauf</td>
                <td></td>
            </tr>
        </table>

        <code-block lang="xml">
            &lt;svg xmlns="http://www.w3.org/2000/svg"&gt;
                &lt;rect width="100%" height="100%" fill="#000000" /&gt;
                &lt;circle id="circle" cx="100" cy="100" r="80" fill="#ffffff" /&gt;
            &lt;/svg&gt;
        </code-block>

        <p>
            Prinzipiell können SVG-Grafiken manuell erstellt werden, was aber oftmals recht mühsam ist, sobald es um das
            Erstellen komplizierterer Grafiken geht. Einfacher ist es, entsprechende Grafiken in einem der zahlreichen
            Vektorprogramme zu erstellen, in das SVG-Format zu exportieren (Programme wie Adobe Illustrator, Inkscape
            oder Ähnliche bieten eine solche Option in der Regel an) und anschließend in der entsprechenden Webseite zu
            verwenden.
        </p>
        <p>
            Das Beispiel zeigt einen weißen Kreis auf schwarzem Untergrund.
        </p>
    </chapter>

    <chapter title="SVG in HTML einbinden" id="svg-html">
        <table style="both">
            <tr>
                <td>Option</td>
                <td>Beschreibung</td>
                <td>Beispiel (Code)</td>
            </tr>
            <tr>
                <td>Einbinden über das <code>&lt;img&gt;</code>-Element</td>
                <td>
                    <p>
                        Hierbei wird die entsprechende SVG-Datei einfach über das src-Attribut des
                        <code>&lt;img&gt;</code>-Elements verlinkt. Browser, die mit SVG umgehen können, stellen
                        anschließend das verlinkte SVG-Dokument an entsprechender Stelle im HTML dar.
                    </p>
                    <p>
                        Links, die innerhalb des SVG-Inhalts definiert sind, werden bei dieser Art des Einbindens
                        allerdings nicht unterstützt. Das Gleiche gilt für JavaScript-Code, der innerhalb des
                        SVG-Dokuments auftaucht. Auch dieser wird nicht interpretiert bzw. ausgeführt.
                    </p>
                </td>
                <td>
                    <code-block lang="html">
                        &lt;body&gt;
                            &lt;img src="example.svg" alt="SVG-Grafik" width="500" height="500" /&gt;
                        &lt;/body&gt;
                    </code-block>
                </td>
            </tr>
            <tr>
                <td>Einbinden über das <code>&lt;iframe&gt;</code>-Element</td>
                <td>
                    <p>
                        SVG-Dateien können auch als Quelle für den Inhalt von <code>&lt;iframe&gt;</code>-Elementen
                        definiert werden. Innerhalb des Iframes wird dann die SVG-Datei dargestellt. Im Gegensatz zum
                        Einbinden über das <code>&lt;img&gt;</code>-Element werden bei dieser Art des Einbindens Links
                        innerhalb des SVG-Inhalts interpretiert, und auch eventuell vorhandenes JavaScript wird
                        ausgeführt.
                    </p>
                </td>
                <td>
                    <code-block lang="html">
                        &lt;body&gt;
                            &lt;iframe src="example.svg" width="500" height="500" scrolling="no"&gt;
                                &lt;!-- Für ältere Browser, die SVG nicht unterstützen --&gt;
                                &lt;img src="example.png" width="500" height="500" alt="Alternatives PNG-Bild" /&gt;
                            &lt;/iframe&gt;
                        &lt;/body&gt;
                    </code-block>
                </td>
            </tr>
            <tr>
                <td>Einbinden über das <code>&lt;object&gt;</code>-Element</td>
                <td>
                    <p>
                        Es ist auch möglich, SVG-Dateien als Multimediaobjekt über das
                        <code>&lt;object&gt;</code>-Element einzubinden. Für ältere Browser, die kein SVG darstellen
                        können, ist es hierbei zudem möglich, zwischen dem öffnenden und dem schließenden
                        <code>&lt;object&gt;</code>-Tag alternativen Inhalt, beispielsweise ein alternatives Bild,
                        anzugeben.
                    </p>
                    <p>
                        Wie beim Einbinden über das <code>&lt;iframe&gt;</code>-Element werden bei dieser Art der
                        Einbindung Links innerhalb des SVG-Inhalts interpretiert, und auch JavaScript wird unterstützt.
                    </p>
                </td>
                <td>
                    <code-block lang="html">
                        &lt;body&gt;
                            &lt;object data="example.svg" width="500" height="500"&gt;
                                &lt;!-- Für ältere Browser, die SVG nicht unterstützen --&gt;
                                &lt;img src="example.png" width="500" height="500" alt="Alternatives PNG-Bild" /&gt;
                            &lt;/object&gt;
                        &lt;/body&gt;
                    </code-block>
                </td>
            </tr>
            <tr>
                <td>Einbinden als Hintergrundbild über CSS</td>
                <td>
                    <p>
                        SVG-Dateien können auch (umgebend von <code>url()</code>) als Wert für die
                        background-CSS-Eigenschaft verwendet werden. Im Beispiel wird der Inhalt der SVG-Datei als
                        Hintergrundbild für das entsprechend durch die jeweilige CSS-Regel selektierte Element (bzw.
                        Elemente) verwendet. Links innerhalb des SVG-Inhalts sowie dortiger JavaScript-Code werden
                        allerdings nicht interpretiert.
                    </p>
                </td>
                <td>
                    <code-block lang="html">
                        &lt;body&gt;
                            &lt;div style="background: url(example.svg); width: 500px; height: 500px"&gt;&lt;/div&gt;
                        &lt;/body&gt;
                    </code-block>
                </td>
            </tr>
            <tr>
                <td>Inline-Definition im HTML</td>
                <td>
                    <p>
                        Besonders bequem ist die Tatsache, dass SVG auch direkt »inline« innerhalb des HTML-Codes
                        definiert werden kann. Der Browser interpretiert das SVG dann an Ort und Stelle, sodass auch
                        Links und JavaScript interpretiert werden.
                    </p>
                </td>
                <td>
                    <code-block lang="html">
                        &lt;body&gt;
                            &lt;svg id="svg" version="1.1" baseProfile="full" width="500" height="500"
                                    xmlns="http://www.w3.org/2000/svg"&gt;
                                &lt;rect width="100%" height="100%" /&gt;
                                &lt;circle id="circle" cx="100" cy="100" r="80" /&gt;
                            &lt;/svg&gt;
                        &lt;/body&gt;
                    </code-block>
                </td>
            </tr>
        </table>
    </chapter>

    <chapter title="Das Aussehen von SVG-Elementen mit CSS beeinflussen" id="svg-css">
        <p>
            Die einzelnen Elemente innerhalb eines SVG-Dokuments lassen sich über CSS stylen, wobei die Eigenschaften
            nicht denen entsprechen, die beim Stylen von HTML-Elementen verwendet werden. Eine Auswahl erlaubter
            Elemente ist in der folgenden Tabelle zu sehen, eine vollständige Auflistung in der SVG-Spezifikation unter
            <a href="https://www.w3.org/TR/SVG2/styling.html">www.w3.org/TR/SVG2/styling.html</a>. 
        </p>
        <chapter title="Eine Auswahl von CSS-Eigenschaften" id="svg-css-eigenschaftentabelle">
            <table style="header-column">
                <tr>
                    <td>Eigenschaft</td>
                    <td>Beschreibung</td>
                </tr>
                <tr>
                    <td><code>cursor</code></td>
                    <td>Mauszeiger</td>
                </tr>
                <tr>
                    <td><code>fill</code></td>
                    <td>Füllfarbe</td>
                </tr>
                <tr>
                    <td><code>fill-opacity</code></td>
                    <td>Füllfarbe</td>
                </tr>
                <tr>
                    <td><code>font-family</code></td>
                    <td>Schriftart</td>
                </tr>
                <tr>
                    <td><code>font-size</code></td>
                    <td>Schriftgröße</td>
                </tr>
                <tr>
                    <td><code>font-style</code></td>
                    <td>Schriftstil</td>
                </tr>
                <tr>
                    <td><code>stroke</code></td>
                    <td>Rahmenfarbe</td>
                </tr>
                <tr>
                    <td><code>stroke-opacity</code></td>
                    <td>Rahmenfarbe Deckkraft</td>
                </tr>
                <tr>
                    <td><code>stroke-width</code></td>
                    <td>Rahmenbreite</td>
                </tr>
            </table>
        </chapter>
        <chapter title="Beispiel" id="svg-css-beispiel">
            <code-block lang="css">
                rect {
                    stroke-width: 4;
                    fill: #FFFFFF;
                    stroke: #3080D0;
                }
                #circle:hover {
                    cursor: pointer;
                }
                #circle {
                    fill-opacity: 0.5;
                    stroke-width: 4;
                    fill: #3080D0;
                    stroke: #3080D0;
                }
                #circle.active {
                    fill: #000000;
                }
                text {
                    fill: #FFFFFF;
                    font-family: sans-serif;
                }
            </code-block>
        </chapter>
    </chapter>

    <chapter title="Das Verhalten von SVG-Elementen mit JavaScript beeinflussen" id="svg-js">
    </chapter>
</topic>