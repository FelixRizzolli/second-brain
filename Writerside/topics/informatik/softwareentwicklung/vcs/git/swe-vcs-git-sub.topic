<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       title="Submodule und Subtrees" id="swe-vcs-git-sub">
    <show-structure for="chapter,procedure" depth="2"/>

    <chapter title="Einleitung" id="einleitung">
        <p>
            Sowohl Submodules als auch Subtrees helfen bei der Integration fremder Git-Projekte ins eigene Projekt.
            Generell gibt es mehrere Möglichkeiten, fremden Code in das eigene Projekt einzubauen:
        </p>

        <list>
            <li>
                <b>Kopieren</b>: Der unkomplizierteste Weg ist es, den Quellcode, beziehungsweise die Teile des
                Quellcodes, die Sie benötigen, in ein Unterverzeichnis zu kopieren und ab dem Zeitpunkt im eigenen
                Repository zu verwalten. Der große Nachteil: Bugfixes, die in dem fremden Projekt durchgeführt werden,
                werden nicht automatisch auch im eigenen Projekt übernommen.
            </li>
            <li>
                <b>Externer Paketmanager</b>: Viele moderne Programmiersprachen verwenden heute ihren eigenen
                Paketmanager, um Bibliotheken in der korrekten Version für das Projekt zu verwalten. Bekannte Vertreter
                sind etwa npm für Node.js, cargo für Rust, gem für Ruby, pip für Python oder NuGet für C#.
            </li>
            <li>
                <b>Submodules oder Subtrees</b>: Mit diesen beiden Techniken kann der Quellcode des fremden Repositorys
                mit dem eigenen Repository in unterschiedlicher Weise verbunden werden.
            </li>
        </list>
    </chapter>

    <chapter title="Submodule" id="submodule">

        <chapter title="Submodule aktualisieren" id="submodule-aktualisieren">
        </chapter>
    </chapter>

    <chapter title="Subtrees" id="subtree">
    </chapter>

    <chapter title="Mehr zu Submodules und Subtrees" id="mehr">
    </chapter>

    <chapter title="Monorepos" id="monorepos">

        <chapter title="Vorteile" id="monorepos-vorteile">
        </chapter>

        <chapter title="Nachteile" id="monorepos-nachteile">
        </chapter>

        <chapter title="Googles Monorepository" id="monorepos-google">
        </chapter>
    </chapter>

    <chapter title="Quellen" id="quellen">
        <tip>
            <b>(BUCH)</b>
            978-3836271868, "Git - Projektverwaltung für Entwickler und DevOps-Teams", Bernd Öggl &amp; Michael Kofler, 2020
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://github.blog/2016-02-01-working-with-submodules/" ignore-vars="true">
                https://github.blog/2016-02-01-working-with-submodules/
            </a>, 2020-11-14 04:45
        </tip>
        <tip>
            <b>(VIDEO)</b>
            <a href="https://www.youtube.com/watch?v=8Z4Cmhji_FQ" ignore-vars="true">
                https://www.youtube.com/watch?v=8Z4Cmhji_FQ
            </a>, "Git Tutorial: All About Submodules", 2020-11-14 05:10
        </tip>
        <tip>
            <b>(VIDEO)</b>
            <a href="https://www.youtube.com/watch?v=8Z4Cmhji_FQ" ignore-vars="true">
                https://www.youtube.com/watch?v=8Z4Cmhji_FQ
            </a>, "Why Google Stores Billions of Lines of Code in a Single Repository", 2020-11-14 06:00
        </tip>
        <tip>
            <b>(VIDEO)</b>
            <a href="https://www.youtube.com/watch?v=8Z4Cmhji_FQ" ignore-vars="true">
                https://www.youtube.com/watch?v=8Z4Cmhji_FQ
            </a>, "How to git submodule tutorial", 2020-11-14 10:00
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://git-scm.com/docs/git-submodule" ignore-vars="true">
                https://git-scm.com/docs/git-submodule
            </a>, 2020-11-14 10:50
        </tip>
    </chapter>
</topic>