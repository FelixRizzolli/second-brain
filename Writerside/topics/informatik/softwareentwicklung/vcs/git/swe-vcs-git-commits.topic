<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       title="Commits" id="swe-vcs-git-commits">
    <show-structure for="chapter,procedure" depth="2"/>

    <chapter title="Grundlagen" id="grundlagen">
        <chapter title="Der aktuelle Zustandsspeicher: Staging Area" id="grundlagen-stage">
            <p>
                Bevor Änderungen dauerhaft ins Repository gespeichert werden, muss ausgewählt werden welche Änderungen
                berücksichtigt werden.
            </p>

            <note>
                <p><b>Beispiel</b></p>

                <p>
                    Es wurden drei neue Dateien erstellt. Zwei Dateien enthalten Code und sollen Teil des Projekts sein.
                    Die dritte Datei enthält aber persönliche Anmerkungen und soll nicht in das Repository übernommen
                    werden.
                </p>
            </note>

            <p>
                Für diese Differenzierung (siehe Beispiel) sieht Git die <b>Staging Area</b> vor (oft kurz <b>Stage</b>,
                <b>Index</b> oder <b>Cache</b> genannt). Der Stage-Bereich umfasst den gesamten aktiven Zweig inklusive
                aller Änderungen, die beim nächsten Commit dauerhaft gespeichert werden sollen. Um eine Datei im
                gegenwärtigen Zustand in den Stage-Bereich zu befördern, wird der Befehl
                <code>git add &lt;file&gt;</code> oder das gleichwertige Kommando <code>git stage &lt;file&gt;</code>
                ausgeführt.
            </p>
        </chapter>

        <chapter title="Der letzte Commit: HEAD" id="grundlagen-letzter-commit">
        </chapter>

        <chapter title="Sauber einen Zweig wechseln: Checkout" id="grundlagen-checkout">
        </chapter>

        <chapter title="Commit Intern" id="grundlagen-intern">
        </chapter>
    </chapter>

    <chapter title="Referenzen auf Commits" id="referenzen">

        <chapter title="Referenznamen (Refernames)" id="referenzen-refnames">
        </chapter>

        <chapter title="refname@{date}" id="referenzen-datum">
        </chapter>

        <chapter title="refname@{n}" id="referenzen-n">
        </chapter>

        <chapter title="Zugriff auf Vorgängerversionen" id="referenzen-last">

            <chapter title="Die Tildensyntax" id="referenzen-last-tilde">
            </chapter>

            <chapter title="Die Zirkumflexsyntax" id="referenzen-last-zirkumflex">
            </chapter>
        </chapter>

        <chapter title="Beispiele" id="referenzen-beispiele">
        </chapter>

        <chapter title="Referenzen auf Dateien" id="referenzen-dateien">
        </chapter>
    </chapter>

    <chapter title="Alte Version einer Datei anzeigen (git show)" id="gitshow">
    </chapter>

    <chapter title="Änderungen vergleichen (git diff)" id="gitdiff">
    </chapter>

    <chapter title="Änderungen rückgängig machen (git reset, restore)" id="rueckgaengig">

        <chapter title="Datei aus dem Stage-Bereich entfernen (git reset)" id="rueckgaengig-gitreset">
        </chapter>

        <chapter title="Den zuletzt durchgeführten Commit widerrufen (git restore)" id="rueckgaengig-gitrestore">
        </chapter>
    </chapter>

    <chapter title="Die letzten Commits widerrufen (git revert)" id="gitrevert">

        <chapter title="Einen Commit widerrufen" id="gitrevert-commit">
        </chapter>

        <chapter title="Mehrere Commits widerrufen" id="gitrevert-commits">
        </chapter>

        <chapter title="Commit-Message für Revert-Vorgänge zusammenfassen" id="gitrevert-zusammenfassen">
        </chapter>
    </chapter>

    <chapter title="Die letzten Commits aus dem Repository löschen (git reset)" id="gitreset">
    </chapter>

    <chapter title="Vorübergehend zu einem älteren Commit wechseln (git checkout)" id="gitckeckout">
    </chapter>

    <chapter title="Commit-Message ändern" id="commit-message-aendern">

        <chapter title="Commit-Massage des letzten Commits ändern" id="commit-message-aendern-letzter">
        </chapter>

        <chapter title="Commit-Message des letzten Commits in einem externen Repository ändern"
                 id="commit-message-aendern-extern">
        </chapter>
    </chapter>

    <chapter title="Quellen" id="quellen">
        <tip>
            <b>(BUCH)</b>
            978-3836271868, "Git - Projektverwaltung für Entwickler und DevOps-Teams", Bernd Öggl &amp; Michael Kofler, 2020
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://git-scm.com/docs/git-show" ignore-vars="true">
                https://git-scm.com/docs/git-show
            </a>, 2020-11-06 09:17
        </tip>
    </chapter>
</topic>