<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       title="Datenstrukturen" id="swe-pk-datenstrukturen">
    <show-structure for="chapter,procedure" depth="2"/>

    <chapter title="Allgemeines über Datenstrukturen" id="allgemeines">
        <p>
            Datenstruktur dient der Speicherung und Organisation von Daten. Dabei handelt sich um eine Struktur, denn
            die Daten werden in einer bestimmten Art und Weise angeordnet. Ziel ist es, die Daten in einem
            Computerprogramm so zu strukturieren, dass zum einen der Entwickler damit leicht arbeiten kann und die
            Verwendung der Daten im Programmcode möglichst intuitiv ist, und dass zum anderen der Computer effektiv auf
            die Daten zugreifen kann.
        </p>
        <p>
            Moderne Programmiersprachen stellen dem Entwickler eine Vielzahl von Datenstrukturen zur Verfügung. Es ist
            aber auch möglich, sich seine eigenen Datenstrukturen zu definieren, um die Zusammenhänge eines spezifischen
            Anwendungsfalls in der Praxis möglichst gut nachzubilden.
        </p>
    </chapter>

    <chapter title="Datenobjekte" id="datenobjekte">
        <chapter title="Einleitung" id="datenobjekte-einleitung">
            <p>
                Ein Datenobjekt dient der Speicherung einer Information in einer bestimmten Struktur. Es zeichnet sich
                durch folgende Eigenschaften aus:
            </p>
            
            <img src="swe-pk-datenstrukturen-datenobjekte-uebersicht.jpg" alt="Datenobjekte - Übersicht"/>
        </chapter>

        <chapter title="Datentyp" id="datenobjekte-datentyp">
            <p>
                Der Datentyp legt fest, welche Arten von Daten (z.B. Zahlen, Texte) darin gespeichert werden können und
                welche Operationen mit dem Datenobjekt erlaubt sind.
            </p>
        </chapter>

        <chapter title="Wert" id="datenobjekte-wert">
            <p>
                In vielen Programmiersprachen muss zunächst das Datenobjekt deklariert werden, damit dafür Speicherplatz
                reserviert wird. Die folglich erstmalige Zuweisung eines Wertes wird Definition genannt. Deklaration und
                Definition kann oftmals auch kombiniert werden.
            </p>
            <p>
                Eine Besonderheit in vielen Programmiersprachen ist der Wert Null. Dieser Wert ist vom Zahlenwert 0
                verschieden. Der Wert Null ist vielmehr mit den Worten »nichts« oder »leer« zu interpretieren. Ein
                solcher Wert für ein Datenobjekt spielt immer dann eine Rolle, wenn auf ein komplexes Objekt im Speicher
                verwiesen wird. Null zeigt dann an, dass der Wert nicht definiert bzw. das Objekt noch nicht erstellt
                wurde. Objekte sind in diesem Verständnis Datentypen einer bestimmten Klasse.
            </p>
        </chapter>

        <chapter title="Adresse" id="datenobjekte-adresse">
            <p>
                Jedes Datenobjekt hat eine Adresse. Diese Adresse gibt genau an, an welcher Stelle im Speicher
                (Hauptspeicher des Computers) sich das Datenobjekt befindet. Manipulationen auf Speicherebene sind
                komplex und fehlerbehaftet. Operationen auf Adressebene sind bei einem Datenobjekt also nur bei sehr
                systemnaher Programmierung von zum Beispiel Hardwaretreibern notwendig.
            </p>
        </chapter>

        <chapter title="Bezeichner" id="datenobjekte-bezeichner">
            <p>
                Der Bezeichner eines Datenobjekts gibt an, mit welchem Namen das Datenobjekt angesprochen wird. Dabei
                muss beachtet werden, dass der Name grundsätzlich eindeutig sein muss, damit Verwechslungen zwischen
                Datenobjekten ausgeschlossen sind. Diese Regel gilt immer in Bezug auf den sog. Gültigkeitsbereich. Der
                Gültigkeitsbereich ist ein abgegrenzter Bereich unterschiedlichen Ausmaßes innerhalb des Quellcodes.
                Dies kann zum Beispiel eine Methode, eine Klasse oder eine Bibliothek sein.
            </p>
        </chapter>

        <chapter title="Lebensdauer" id="datenobjekte-lebensdauer">
            <p>
                Die Lebensdauer eines Datenobjekts meint die Zeitspann von dessen Erzeugung bis zum Löschen. Bei vielen
                Programmiersprachen sorgt das System selbst für ein automatisiertes Löschen des Datenobjekts, wenn es
                nicht mehr benötigt wird.
            </p>
        </chapter>

        <chapter title="Bindungszeitpunkt" id="datenobjekte-bindungszeitpunkt">
            <p>
                Mit Bindungszeitpunkt ist jener Zeitpunkt gemeint, wann das Datenobjekt wirklich erzeugt wird, d.h.,
                wann der Speicherbereich dem Namen zugeordnet (gebunden) wird.
            </p>

            <list>
                <li>
                    Bei sog. <emphasis>stark typisierten Sprachen</emphasis> erfolgt die Bindung zur Entwurfszeit. Der
                    Programmierer muss üblicherweise den Datentyp für ein Datenobjekt angeben.
                </li>
                <li>
                    Bei nicht <emphasis>stark typisierten Sprachen</emphasis> passiert die Bindung erst zur Laufzeit.
                    Erst dann versucht das Programm, einen sinnvollen Datentyp auszuwählen und darin die Informationen
                    zu speichern.
                </li>
            </list>

            <p>
                Beide Varianten haben Vor- und Nachteile. Die frühe Datenbindung zur Entwurfszeit vermeidet Fehler; die
                Datenbindung zur Laufzeit gibt dem System mehr Flexibilität.
            </p>
        </chapter>

        <chapter title="Speicherklasse" id="datenobjekte-speicherklasse">
            <p>
                Diese Eigenschaft bestimmt, in welchem Teil des Hauptspeichers das Datenobjekt angelegt wird.
                Üblicherweise wird das durch das System festgelegt.
            </p>
        </chapter>

        <chapter title="Eigentümer" id="datenobjekte-eigentuemer">
            <p>
                Dabei ist gemeint welcher Systemteil des Programms welche »Rechte« über das Datenobjekt hat. Mit Rechten
                sind das Erzeugen, das Lesen, das Schreiben und das Löschen eines Datenobjekts gemeint.
            </p>
        </chapter>
    </chapter>

    <chapter title="Systematik" id="systematik">

    </chapter>

    <chapter title="Datentypen" id="datentypen">
        <p>
            Man unterscheidet zwischen Grunddatentypen und anwendungsorientierten Datentypen.
        </p>

        <img src="swe-pk-datenstrukturen-datentypen-uebersicht.jpg" alt="Datentypen - Übersicht"/>

        <list>
            <li>
                <b>Grunddatentypen</b> werden durch die Programmiersprache direkt bereitgestellt. Sie decken die
                wesentlichen Aspekte der Datenspeicherung in einem Computerprogramm ab, und sie stellen die Basis für
                Erweiterungen jeder Art dar.
            </li>
            <li>
                <b>Anwendungsorientierte Datentypen</b> lassen sich bei Zerlegung wieder auf Grunddatentypen
                zurückführen. Hier werden mehrere Datenobjekte zu einem Gesamtkonstrukt zusammengefasst.
            </li>
            <li>
                <b>Abgeleitete Datentypen</b> gehen in fast die gleiche Richtung. Hier geht es zum Beispiel darum, dass
                Datenobjekte der gleichen Art zu einem Mengentyp wie einer Liste oder ein Array zusammengefasst werden.
                Auf einzelnen Elemente einer solchen Liste kann dann üblicherweise mit einem Index zugegriffen werden.
            </li>
        </list>

        <chapter title="Grunddatentypen" id="datentypen-grund">
            <chapter title="Bit und Byte" id="datentypen-grund-bitbyte">
                <p>
                    Die Grundlage jeder Speicherung von Informationen in einem Rechner ist das Bit. Hier wird nur 
                    zwischen den beiden Zuständen 0 und 1 unterschieden. Die kleinste adressierbare Einheit ist das 
                    Byte. Es umfasst jeweils 8 Bit. Da jedes Bit die besagten zwei Werte annehmen kann, ergibt das 
                    insgesamt 256 Kombinationen, denn 28 = 256. Neben der Darstellung in Binärform spielen noch 
                    sedezimale (hexadezimale) und dezimale Darstellung eine wichtige Rolle.
                </p>

                <chapter title="Tabelle (Binär, Hexadezimal, Dezimal)" id="datentypen-grund-bitbyte-tabelle">
                    <table style="header-row">
                        <tr>
                            <td>Binärdarstellung (Basis 2)</td>
                            <td>Sedezimaldarstellung (Basis 16)</td>
                            <td>Dezimaldarstellung (Basis 10)</td>
                        </tr>
                        <tr><td><code>0000 0000</code></td><td><code>00</code></td><td><code>0</code></td></tr>
                        <tr><td><code>0000 0001</code></td><td><code>01</code></td><td><code>1</code></td></tr>
                        <tr><td><code>0000 0010</code></td><td><code>02</code></td><td><code>2</code></td></tr>
                        <tr><td><code>0000 0011</code></td><td><code>03</code></td><td><code>3</code></td></tr>
                        <tr><td><code>0000 0100</code></td><td><code>04</code></td><td><code>4</code></td></tr>
                        <tr><td><code>0000 0101</code></td><td><code>05</code></td><td><code>5</code></td></tr>
                        <tr><td><code>0000 0110</code></td><td><code>06</code></td><td><code>6</code></td></tr>
                        <tr><td><code>0000 0111</code></td><td><code>07</code></td><td><code>7</code></td></tr>
                        <tr><td><code>0000 1000</code></td><td><code>08</code></td><td><code>8</code></td></tr>
                        <tr><td><code>0000 1001</code></td><td><code>09</code></td><td><code>9</code></td></tr>
                        <tr><td><code>0000 1010</code></td><td><code>0A</code></td><td><code>10</code></td></tr>
                        <tr><td><code>0000 1011</code></td><td><code>0B</code></td><td><code>11</code></td></tr>
                        <tr><td><code>0000 1100</code></td><td><code>0C</code></td><td><code>12</code></td></tr>
                        <tr><td><code>0000 1101</code></td><td><code>0D</code></td><td><code>13</code></td></tr>
                        <tr><td><code>0000 1110</code></td><td><code>0E</code></td><td><code>14</code></td></tr>
                        <tr><td><code>0000 1111</code></td><td><code>0F</code></td><td><code>15</code></td></tr>
                        <tr><td><code>0001 0000</code></td><td><code>10</code></td><td><code>16</code></td></tr>
                        <tr><td><code>0001 0001</code></td><td><code>11</code></td><td><code>17</code></td></tr>
                        <tr><td>...</td><td>...</td><td>...</td></tr>
                        <tr><td><code>0001 1111</code></td><td><code>1F</code></td><td><code>31</code></td></tr>
                        <tr><td><code>0010 0000</code></td><td><code>20</code></td><td><code>32</code></td></tr>
                        <tr><td><code>0010 0001</code></td><td><code>21</code></td><td><code>33</code></td></tr>
                        <tr><td>...</td><td>...</td><td>...</td></tr>
                        <tr><td><code>0010 1111</code></td><td><code>2F</code></td><td><code>47</code></td></tr>
                        <tr><td><code>0011 0000</code></td><td><code>30</code></td><td><code>48</code></td></tr>
                        <tr><td><code>0011 0001</code></td><td><code>31</code></td><td><code>49</code></td></tr>
                        <tr><td>...</td><td>...</td><td>...</td></tr>
                        <tr><td><code>0011 1111</code></td><td><code>3F</code></td><td><code>63</code></td></tr>
                        <tr><td>...</td><td>...</td><td>...</td></tr>
                        <tr><td><code>1111 0000</code></td><td><code>F0</code></td><td><code>240</code></td></tr>
                        <tr><td><code>1111 0001</code></td><td><code>F1</code></td><td><code>241</code></td></tr>
                        <tr><td>...</td><td>...</td><td>...</td></tr>
                        <tr><td><code>1111 1110</code></td><td><code>FE</code></td><td><code>254</code></td></tr>
                        <tr><td><code>1111 1111</code></td><td><code>FF</code></td><td><code>255</code></td></tr>
                    </table>
                </chapter>
            </chapter>

            <chapter title="Datentyp Binärwert" id="datentypen-grund-binaerwert">
                <p>
                    Beim Binärwert handelt es sich üblicherweise um den einfachsten Datentyp, den eine
                    Programmiersprache zu bieten hat. Man unterscheidet lediglich die Zustände true und false. Die
                    typischen Bezeichnungen für diesen Datentyp sind bool oder boolean. Ergebnisse von Prüfungen aller
                    Art werden üblicherweise mit einer Variable vom Typ bool zurückgegeben.
                </p>
            </chapter>

            <chapter title="Datentyp Zahl" id="datentypen-grund-zahl">
                <p>
                    Mit einem Datenobjekt vom Typ Zahl kann gerechnet werden. Die Programmiersprachen unterscheiden
                    meist mehrere Zahlentypen, zum Beispiel ganze Zahlen, Festkommazahlen oder Gleitkommazahlen. Bei der
                    Darstellung von ganzen Zahlen kann man entscheiden, ob man negative Zahlen zulässt oder nicht. Die
                    Größe des Wertebereichs hängt davon ab, wie viele Byte für den konkreten Zahlentyp zur Verfügung
                    stehen.
                </p>
                <p>
                    Für einige Aufgaben genügen ganze Zahlen, etwa für die Speicherung der Information, wie viele Kunden
                    ein Unternehmen hat. Auch programmintern – zum Beispiel als Zählvariable für eine Schleife – werden
                    ganzzahlige Datentypen verwendet. Für die Speicherung von Bruchzahlen stehen meist mehrere
                    Datentypen zur Auswahl. Dabei kann man zwischen zwei grundsätzlichen Möglichkeiten unterscheiden,
                    und zwar zwischen Festkommazahlen und Gleitkommazahlen.
                </p>
                <p>
                    Bei <b>Festkommazahlen</b> ist die Anzahl der Nachkommastellen bereits bei der Definition des
                    Datenobjekts festgelegt. Für Geldbeträge ist dies sinnvoll und ausreichend, zum Beispiel: Gehalt =
                    3.500,89 Euro. Der restliche Speicherbereich ist für die Vorkommastellen reserviert.
                </p>
                <p>
                    Bei <b>Gleitkommazahlen</b> ist die Position des Kommas nicht statisch festgelegt. Gleitkommazahlen
                    sind Bruchzahlen und haben daher Stellen vor und nach dem Komma. Gleitkommazahlen greifen auf die
                    Darstellung in Exponentialschreibweise zurück. Damit schafft man einen großen Wertebereich, d.h.,
                    man kann durchaus sehr große bzw. sehr kleine Zahlen darstellen, und alternativ kann man bei Bedarf
                    eine sehr hohe Genauigkeit erreichen.
                </p>

                <code-block lang="tex">
                    18,4 = 1,84 * 10^{1}
                </code-block>
                <code-block lang="tex">
                    Vorzeichen (V) ⋅ Mantisse (M) ⋅ Basis (B)^{hoch Exponent (E)}
                </code-block>

                <p>
                    Die Mantisse bestimmt die Genauigkeit. Je größer die Mantisse, desto genauer ist die Zahl hinter dem
                    Komma. Der Exponent bestimmt die Größe des Wertebereichs der Zahl.
                </p>
                <p>
                    Eins darf man nicht vergessen: Die Darstellung von Gleitkommazahlen im Computer basiert stets nur
                    auf Näherungswerten, d. h., exakte Werte von rationalen Zahlen sind nicht immer genau darzustellen.
                    Dies muss man beim Rechnen mit Gleitkommazahlen beachten. Rundungsfehler können sich bei der
                    weiteren Verarbeitung dann explosionsartig vergrößern. Ein Beispiel: Den exakten Wert der Zahl
                    a = ⅓ kann man nur mit einer bestimmten Genauigkeit in Form einer Gleitkommazahl abbilden. Diese
                    Genauigkeit genügt aber für die meisten Anforderungen.
                </p>
            </chapter>

            <chapter title="Datentyp Zeichenkette" id="datentypen-grund-zeichenkette">
                <p>
                    Der Datentyp Zeichenkette, üblicherweise String genannt, umfasst eine Aneinanderreihung von mehreren
                    Bytes beliebigen Inhalts. Ein Bytewert entspricht dabei einem bestimmten druckbaren Zeichen. Zur
                    Codierung greift man üblicherweise auf den sogenannten ASCII-Code (American Standard Code for
                    Information Interchange). Dieser Code ist ein 7-Bit-Code, man kann damit also 27 = 128 verschiedene
                    Zeichen codieren. Das achte Bit kann beispielsweise für notwendige landesspezifische Erweiterungen
                    genutzt werden. Werte vom Typ Zeichenkette werden – je nach Programmiersprache – üblicherweise in
                    doppelte ("…") oder einfache ('…') Anführungszeichen eingeschlossen.
                </p>

                <chapter title="ASCII Tabelle" id="datentypen-grund-zeichenkette-ascii">
                    <table>
                        <tr>
                            <td><code>0</code></td>
                            <td><code>00</code></td>
                            <td><code>NUL</code></td>
                            <td>(Füllzeichen, Null)</td>
                        </tr>
                        <tr>
                            <td><code>1</code></td>
                            <td><code>01</code></td>
                            <td><code>SOH</code></td>
                            <td>Anfang des Kopfs (Start of Heading)</td>
                        </tr>
                        <tr>
                            <td><code>2</code></td>
                            <td><code>02</code></td>
                            <td><code>STX</code></td>
                            <td>Anfang des Texts (Start of Text)</td>
                        </tr>
                        <tr>
                            <td><code>3</code></td>
                            <td><code>03</code></td>
                            <td><code>ETX</code></td>
                            <td>Ende des Texts (End of Text)</td>
                        </tr>
                        <tr>
                            <td><code>4</code></td>
                            <td><code>04</code></td>
                            <td><code>EOT</code></td>
                            <td>Ende der Übertragung (End of Transmission)</td>
                        </tr>
                        <tr>
                            <td><code>5</code></td>
                            <td><code>05</code></td>
                            <td><code>ENQ</code></td>
                            <td>Stationsaufforderung (Enquiry)</td>
                        </tr>
                        <tr>
                            <td><code>6</code></td>
                            <td><code>06</code></td>
                            <td><code>ACK</code></td>
                            <td>Positive Rückmeldung (Acknowledge)</td>
                        </tr>
                        <tr>
                            <td><code>7</code></td>
                            <td><code>07</code></td>
                            <td><code>BEL</code></td>
                            <td>Klingel (Bell)</td>
                        </tr>
                        <tr>
                            <td><code>8</code></td>
                            <td><code>08</code></td>
                            <td><code>BS</code></td>
                            <td>Rückwärtsschritt (Backspace)</td>
                        </tr>
                        <tr>
                            <td><code>9</code></td>
                            <td><code>09</code></td>
                            <td><code>TAB</code></td>
                            <td>Horizontal-Tabulator (Horizontal Tabulation)</td>
                        </tr>
                        <tr>
                            <td><code>10</code></td>
                            <td><code>0A</code></td>
                            <td><code>LF</code></td>
                            <td>Zeilenvorschub (Line Feed)</td>
                        </tr>
                        <tr>
                            <td><code>11</code></td>
                            <td><code>0B</code></td>
                            <td><code>VT</code></td>
                            <td>Vertikal-Tabulator (Vertical Tabulation)</td>
                        </tr>
                        <tr>
                            <td><code>12</code></td>
                            <td><code>0C</code></td>
                            <td><code>FF</code></td>
                            <td>Formularvorschub (Form Feed)</td>
                        </tr>
                        <tr>
                            <td><code>13</code></td>
                            <td><code>0D</code></td>
                            <td><code>CR</code></td>
                            <td>Wagenrücklauf (Carriage Return)</td>
                        </tr>
                        <tr>
                            <td><code>14</code></td>
                            <td><code>0E</code></td>
                            <td><code>SO</code></td>
                            <td>Dauerumschaltung (Shift-out)</td>
                        </tr>
                        <tr>
                            <td><code>15</code></td>
                            <td><code>0F</code></td>
                            <td><code>SI</code></td>
                            <td>Rückschaltung (Shift-in)</td>
                        </tr>
                        <tr>
                            <td><code>16</code></td>
                            <td><code>10</code></td>
                            <td><code>DLE</code></td>
                            <td>Datenübertragungsumschaltung (Data Link Escape)</td>
                        </tr>
                        <tr>
                            <td><code>17</code></td>
                            <td><code>11</code></td>
                            <td><code>DC1</code></td>
                            <td>Gerätesteuerung (Device Control)</td>
                        </tr>
                        <tr>
                            <td><code>18</code></td>
                            <td><code>12</code></td>
                            <td><code>DC2</code></td>
                            <td>Gerätesteuerung (Device Control)</td>
                        </tr>
                        <tr>
                            <td><code>19</code></td>
                            <td><code>13</code></td>
                            <td><code>DC3</code></td>
                            <td>Gerätesteuerung (Device Control)</td>
                        </tr>
                        <tr>
                            <td><code>20</code></td>
                            <td><code>14</code></td>
                            <td><code>DC4</code></td>
                            <td>Gerätesteuerung (Device Control)</td>
                        </tr>
                        <tr>
                            <td><code>21</code></td>
                            <td><code>15</code></td>
                            <td><code>NAK</code></td>
                            <td>Negative Rückmeldung (Negative acknowledge)</td>
                        </tr>
                        <tr>
                            <td><code>22</code></td>
                            <td><code>16</code></td>
                            <td><code>SYN</code></td>
                            <td>Synchronisation (Synchronous Idle)</td>
                        </tr>
                        <tr>
                            <td><code>23</code></td>
                            <td><code>17</code></td>
                            <td><code>ETB</code></td>
                            <td>Ende des Datenübertragungsblocks (End of Transmission Block)</td>
                        </tr>
                        <tr>
                            <td><code>24</code></td>
                            <td><code>18</code></td>
                            <td><code>CAN</code></td>
                            <td>Ungültig (Cancel)</td>
                        </tr>
                        <tr>
                            <td><code>25</code></td>
                            <td><code>19</code></td>
                            <td><code>EM</code></td>
                            <td>Ende der Aufzeichnung (End of Medium)</td>
                        </tr>
                        <tr>
                            <td><code>26</code></td>
                            <td><code>1A</code></td>
                            <td><code>SUB</code></td>
                            <td>Substitution (Substitute Character)</td>
                        </tr>
                        <tr>
                            <td><code>27</code></td>
                            <td><code>1B</code></td>
                            <td><code>ESC</code></td>
                            <td>Umschaltung (Escape)</td>
                        </tr>
                        <tr>
                            <td><code>28</code></td>
                            <td><code>1C</code></td>
                            <td><code>FS</code></td>
                            <td>Hauptgruppen-Trennung (File Separator)</td>
                        </tr>
                        <tr>
                            <td><code>29</code></td>
                            <td><code>1D</code></td>
                            <td><code>GS</code></td>
                            <td>Gruppentrennung (Group Separator)</td>
                        </tr>
                        <tr>
                            <td><code>30</code></td>
                            <td><code>1E</code></td>
                            <td><code>RS</code></td>
                            <td>Untergruppentrennung (Record Separator)</td>
                        </tr>
                        <tr>
                            <td><code>31</code></td>
                            <td><code>1F</code></td>
                            <td><code>US</code></td>
                            <td>Teilgruppentrennung (Unit Separator)</td>
                        </tr>
                        <tr>
                            <td><code>32</code></td>
                            <td><code>20</code></td>
                            <td>(space)</td>
                            <td>Leerzeichen</td>
                        </tr>
                        <tr>
                            <td><code>33</code></td>
                            <td><code>21</code></td>
                            <td><code>!</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>34</code></td>
                            <td><code>22</code></td>
                            <td><code>"</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>35</code></td>
                            <td><code>23</code></td>
                            <td><code>#</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>36</code></td>
                            <td><code>24</code></td>
                            <td><code>$</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>37</code></td>
                            <td><code>25</code></td>
                            <td><code>%</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>38</code></td>
                            <td><code>26</code></td>
                            <td><code>&amp;</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>39</code></td>
                            <td><code>27</code></td>
                            <td><code>'</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>40</code></td>
                            <td><code>28</code></td>
                            <td><code>(</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>41</code></td>
                            <td><code>29</code></td>
                            <td><code>)</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>42</code></td>
                            <td><code>2A</code></td>
                            <td><code>*</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>43</code></td>
                            <td><code>2B</code></td>
                            <td><code>+</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>44</code></td>
                            <td><code>2C</code></td>
                            <td><code>,</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>45</code></td>
                            <td><code>2D</code></td>
                            <td><code>-</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>46</code></td>
                            <td><code>2E</code></td>
                            <td><code>.</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>47</code></td>
                            <td><code>2F</code></td>
                            <td><code>/</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>48</code></td>
                            <td><code>30</code></td>
                            <td><code>0</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>49</code></td>
                            <td><code>31</code></td>
                            <td><code>1</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>50</code></td>
                            <td><code>32</code></td>
                            <td><code>2</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>51</code></td>
                            <td><code>33</code></td>
                            <td><code>3</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>52</code></td>
                            <td><code>34</code></td>
                            <td><code>4</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>53</code></td>
                            <td><code>35</code></td>
                            <td><code>5</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>54</code></td>
                            <td><code>36</code></td>
                            <td><code>6</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>55</code></td>
                            <td><code>37</code></td>
                            <td><code>7</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>56</code></td>
                            <td><code>38</code></td>
                            <td><code>8</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>57</code></td>
                            <td><code>39</code></td>
                            <td><code>9</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>58</code></td>
                            <td><code>3A</code></td>
                            <td><code>:</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>59</code></td>
                            <td><code>3B</code></td>
                            <td><code>;</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>60</code></td>
                            <td><code>3C</code></td>
                            <td><code>&lt;</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>61</code></td>
                            <td><code>3D</code></td>
                            <td><code>=</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>62</code></td>
                            <td><code>3E</code></td>
                            <td><code>&gt;</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>63</code></td>
                            <td><code>3F</code></td>
                            <td><code>?</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>64</code></td>
                            <td><code>40</code></td>
                            <td><code>@</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>65</code></td>
                            <td><code>41</code></td>
                            <td><code>A</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>66</code></td>
                            <td><code>42</code></td>
                            <td><code>B</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>67</code></td>
                            <td><code>43</code></td>
                            <td><code>C</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>68</code></td>
                            <td><code>44</code></td>
                            <td><code>D</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>69</code></td>
                            <td><code>45</code></td>
                            <td><code>E</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>70</code></td>
                            <td><code>46</code></td>
                            <td><code>F</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>71</code></td>
                            <td><code>47</code></td>
                            <td><code>H</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>72</code></td>
                            <td><code>48</code></td>
                            <td><code>H</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>73</code></td>
                            <td><code>49</code></td>
                            <td><code>I</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>74</code></td>
                            <td><code>4A</code></td>
                            <td><code>J</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>75</code></td>
                            <td><code>4B</code></td>
                            <td><code>K</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>76</code></td>
                            <td><code>4C</code></td>
                            <td><code>L</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>77</code></td>
                            <td><code>4D</code></td>
                            <td><code>M</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>78</code></td>
                            <td><code>4E</code></td>
                            <td><code>N</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>79</code></td>
                            <td><code>4F</code></td>
                            <td><code>O</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>80</code></td>
                            <td><code>50</code></td>
                            <td><code>P</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>81</code></td>
                            <td><code>51</code></td>
                            <td><code>Q</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>82</code></td>
                            <td><code>52</code></td>
                            <td><code>R</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>83</code></td>
                            <td><code>53</code></td>
                            <td><code>S</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>84</code></td>
                            <td><code>54</code></td>
                            <td><code>T</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>85</code></td>
                            <td><code>55</code></td>
                            <td><code>U</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>86</code></td>
                            <td><code>56</code></td>
                            <td><code>V</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>87</code></td>
                            <td><code>57</code></td>
                            <td><code>W</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>88</code></td>
                            <td><code>58</code></td>
                            <td><code>X</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>89</code></td>
                            <td><code>59</code></td>
                            <td><code>Y</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>90</code></td>
                            <td><code>5A</code></td>
                            <td><code>Z</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>91</code></td>
                            <td><code>5B</code></td>
                            <td><code>[</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>92</code></td>
                            <td><code>5C</code></td>
                            <td><code>\</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>93</code></td>
                            <td><code>5D</code></td>
                            <td><code>]</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>94</code></td>
                            <td><code>5E</code></td>
                            <td><code>^</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>95</code></td>
                            <td><code>5F</code></td>
                            <td><code>_</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>96</code></td>
                            <td><code>60</code></td>
                            <td><code>`</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>97</code></td>
                            <td><code>61</code></td>
                            <td><code>a</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>98</code></td>
                            <td><code>62</code></td>
                            <td><code>b</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>99</code></td>
                            <td><code>63</code></td>
                            <td><code>c</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>100</code></td>
                            <td><code>64</code></td>
                            <td><code>d</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>101</code></td>
                            <td><code>65</code></td>
                            <td><code>e</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>102</code></td>
                            <td><code>66</code></td>
                            <td><code>f</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>103</code></td>
                            <td><code>67</code></td>
                            <td><code>g</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>104</code></td>
                            <td><code>68</code></td>
                            <td><code>h</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>105</code></td>
                            <td><code>69</code></td>
                            <td><code>i</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>106</code></td>
                            <td><code>6A</code></td>
                            <td><code>j</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>107</code></td>
                            <td><code>6B</code></td>
                            <td><code>k</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>108</code></td>
                            <td><code>6C</code></td>
                            <td><code>l</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>109</code></td>
                            <td><code>6D</code></td>
                            <td><code>m</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>110</code></td>
                            <td><code>6E</code></td>
                            <td><code>n</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>111</code></td>
                            <td><code>6F</code></td>
                            <td><code>o</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>112</code></td>
                            <td><code>70</code></td>
                            <td><code>p</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>113</code></td>
                            <td><code>71</code></td>
                            <td><code>q</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>114</code></td>
                            <td><code>72</code></td>
                            <td><code>r</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>115</code></td>
                            <td><code>73</code></td>
                            <td><code>s</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>116</code></td>
                            <td><code>74</code></td>
                            <td><code>t</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>117</code></td>
                            <td><code>75</code></td>
                            <td><code>u</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>118</code></td>
                            <td><code>76</code></td>
                            <td><code>v</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>119</code></td>
                            <td><code>77</code></td>
                            <td><code>w</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>120</code></td>
                            <td><code>78</code></td>
                            <td><code>x</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>121</code></td>
                            <td><code>79</code></td>
                            <td><code>y</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>122</code></td>
                            <td><code>7A</code></td>
                            <td><code>z</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>123</code></td>
                            <td><code>7B</code></td>
                            <td><code>{</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>124</code></td>
                            <td><code>7C</code></td>
                            <td><code>|</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>125</code></td>
                            <td><code>7D</code></td>
                            <td><code>}</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>126</code></td>
                            <td><code>7E</code></td>
                            <td><code>~</code></td>
                            <td> </td>
                        </tr>
                        <tr>
                            <td><code>127</code></td>
                            <td><code>7F</code></td>
                            <td><code>DEL</code></td>
                            <td>Löschen (Delete)</td>
                        </tr>
                    </table>
                </chapter>
            </chapter>

            <chapter title="Datentyp Adresse" id="datentypen-grund-adresse">
                <p>
                    Der Datentyp Adresse dient der Darstellung bzw. Speicherung von Adressen von Datenobjekten. Die
                    genaue Konstruktion dieses Datentyps ist von mehreren Faktoren abhängig, unter anderem von der Art
                    des Rechnersystems, vom eingesetzten Betriebssystem und natürlich von der verwendeten
                    Programmiersprache. Außer bei der systemnahen Programmierung ist es in der Regel heute nur äußert
                    selten notwendig, auf die Adresse eines Datenobjekts zuzugreifen. Die Wahl des Orts, an dem ein
                    Datenobjekt im Speicher abgelegt wird, überlässt man vollständig dem System. Beim Erstellen eines
                    neuen Datenobjekts, zum Beispiel einer konkreten Instanz einer Klasse, reserviert das System den
                    dazu notwendigen Speicherplatz. Wird dieser knapp, weil gegebenenfalls das Datenobjekt dynamisch mit
                    der Laufzeit des Programms mehr Speicher benötigt, so sorgt das System von selbst dafür, dass mehr
                    Speicherplatz zur Verfügung gestellt wird.
                </p>
                <p>
                    Moderne Programmiersprachen, zum Beispiel Java oder C#, sorgen auch automatisiert dafür, dass nicht
                    mehr benötigte Datenobjekte im Speicher wieder freigeben werden. Dazu wird der Speicher regelmäßig
                    auf nicht mehr benutzte Datenobjekte untersucht. Der Vorteil besteht darin, dass der Programmierer
                    nicht eigenständig für eine Freigabe sorgen muss. Das Vorgehen wird als Garbage Collection bzw.
                    automatische Speicherbereinigung bezeichnet. Je nach Ansatz werden darüber hinaus zusätzlich noch
                    die verwendeten Speicherbereiche zusammengefasst (Defragmentierung).
                </p>
                <p>
                    Der wesentliche Vorteil der automatischen Speicherbereinigung gegenüber der manuellen
                    Speicherverwaltung ist die Vermeidung von Speicherproblemen. Bei der Programmierung ist man sich oft
                    nicht vollständig sicher, zu welcher Zeit bestimmte Objekte nicht mehr benutzt werden und daher
                    wieder gelöscht werden können. Ein Löschen bedeutet eine Freigabe des Speichers. Auch bei späteren
                    Programmänderungen kann es passieren, dass ein Objekt noch benötigt wird, dessen Speicher bereits
                    freigegeben wurde. Erfolgt dann dennoch ein Zugriff auf ein nicht mehr existierendes Objekt, kommt
                    es zu Fehlermeldungen, unvorhersehbaren Programmaktionen und üblicherweise zu sogenannten
                    Schutzverletzungen, d. h., das Programm versucht einen Zugriff auf einen nicht reservieren
                    Speicherbereich.
                </p>
                <p>
                    Den Vorteil der Garbage Collection erkauft man sich mit einem erhöhten Ressourcenverbrauch, da die
                    Freigabe nicht mehr benötigten Speichers stets zeitlich verzögert geschieht. Dies ist auch der
                    Grund, weshalb es bei sehr speicherintensiven Programmen, zum Beispiel bei Bildbearbeitungssoftware,
                    dennoch angezeigt sein kann, das System der automatischen Speicherbereinigung durch eine manuelle
                    Speicherverwaltung zu ergänzen. In diesem Fall werden nicht mehr benötigte Objekte manuell im
                    Programmcode freigeben. Bei Programmiersprachen, die nicht über eine Garbage Collection verfügen,
                    muss die Freigabe stets per Hand erfolgen.
                </p>

                <img src="swe-pk-datenstrukturen-datentyp-adresse.png" alt="Datentyp Adresse"/>
            </chapter>
        </chapter>

        <chapter title="Spezifische Datentypen" id="datentypen-spezifisch">
            <p>
                Die Basis für diese Datentypen bilden die zuvor beschriebenen Grunddatentypen, d. h. die Datentypen für
                Zahlen, Zeichenketten usw. Typische Varianten dieser Datentypen sind Felder, Listen oder Aufzählungen in
                jeglicher Form. Bei ihnen geht es darum, dass man Datenobjekte eines Typs zu einer Struktur
                zusammenfasst und beispielsweise über einen Index darauf zugreifen kann. Für diese Art von Datentypen
                hält jede Programmiersprache üblicherweise einen bestimmten Satz an Möglichkeiten bereit.
            </p>
            <p>
                Für jedes Programm kann der Entwickler in den meisten Programmiersprachen individuell eigene Datentypen
                definieren. Beispielsweise kann man einen Datentyp Kunde definieren, der die wesentlichen Merkmale eines
                Kunden wie Name, Adresse usw. enthält. Es handelt sich um einen komplexen Datentyp, der dann aus
                einzelnen Grunddatentypen zusammengesetzt ist.
            </p>
            <p>
                Wie bereits erwähnt spielen Felder und Auflistungen bei nahezu allen Programmieraufgaben eine größere
                Rolle. Datentypen in Form eines Felds werden auch als Array bezeichnet. Es gibt viele
                Konstruktionsvarianten dieses Datentyps, das Prinzip bleibt jedoch immer gleich.
            </p>

            <chapter title="Arrays" id="datentypen-spezifisch-arrays">

            </chapter>
        </chapter>
    </chapter>

    <chapter title="Quellen" id="quellen">
        <tip>
            <b>(BUCH)</b>
            978-3836244763, "Handbuch für Softwareentwickler", Veikko Krypczyk &amp; Elena Bochkor, 2018
        </tip>
    </chapter>
</topic>