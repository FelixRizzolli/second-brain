<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       title="Datenstrukturen" id="swe-pk-datenstrukturen">
    <show-structure for="chapter,procedure" depth="2"/>

    <chapter title="Allgemeines über Datenstrukturen" id="allgemeines">
        <p>
            Datenstruktur dient der Speicherung und Organisation von Daten. Dabei handelt sich um eine Struktur, denn
            die Daten werden in einer bestimmten Art und Weise angeordnet. Ziel ist es, die Daten in einem
            Computerprogramm so zu strukturieren, dass zum einen der Entwickler damit leicht arbeiten kann und die
            Verwendung der Daten im Programmcode möglichst intuitiv ist, und dass zum anderen der Computer effektiv auf
            die Daten zugreifen kann.
        </p>
        <p>
            Moderne Programmiersprachen stellen dem Entwickler eine Vielzahl von Datenstrukturen zur Verfügung. Es ist
            aber auch möglich, sich seine eigenen Datenstrukturen zu definieren, um die Zusammenhänge eines spezifischen
            Anwendungsfalls in der Praxis möglichst gut nachzubilden.
        </p>
    </chapter>

    <chapter title="Datenobjekte" id="datenobjekte">
        <chapter title="Einleitung" id="datenobjekte-einleitung">
            <p>
                Ein Datenobjekt dient der Speicherung einer Information in einer bestimmten Struktur. Es zeichnet sich
                durch folgende Eigenschaften aus:
            </p>
            
            <img src="swe_pk_datenstrukturen_uebersicht.jpg" alt="Datenstrukturen - Übersicht"/>
        </chapter>

        <chapter title="Datentyp" id="datenobjekte-datentyp">
            <p>
                Der Datentyp legt fest, welche Arten von Daten (z.B. Zahlen, Texte) darin gespeichert werden können und
                welche Operationen mit dem Datenobjekt erlaubt sind.
            </p>
        </chapter>

        <chapter title="Wert" id="datenobjekte-wert">
            <p>
                In vielen Programmiersprachen muss zunächst das Datenobjekt deklariert werden, damit dafür Speicherplatz
                reserviert wird. Die folglich erstmalige Zuweisung eines Wertes wird Definition genannt. Deklaration und
                Definition kann oftmals auch kombiniert werden.
            </p>
            <p>
                Eine Besonderheit in vielen Programmiersprachen ist der Wert Null. Dieser Wert ist vom Zahlenwert 0
                verschieden. Der Wert Null ist vielmehr mit den Worten »nichts« oder »leer« zu interpretieren. Ein
                solcher Wert für ein Datenobjekt spielt immer dann eine Rolle, wenn auf ein komplexes Objekt im Speicher
                verwiesen wird. Null zeigt dann an, dass der Wert nicht definiert bzw. das Objekt noch nicht erstellt
                wurde. Objekte sind in diesem Verständnis Datentypen einer bestimmten Klasse.
            </p>
        </chapter>

        <chapter title="Adresse" id="datenobjekte-adresse">
            <p>
                Jedes Datenobjekt hat eine Adresse. Diese Adresse gibt genau an, an welcher Stelle im Speicher
                (Hauptspeicher des Computers) sich das Datenobjekt befindet. Manipulationen auf Speicherebene sind
                komplex und fehlerbehaftet. Operationen auf Adressebene sind bei einem Datenobjekt also nur bei sehr
                systemnaher Programmierung von zum Beispiel Hardwaretreibern notwendig.
            </p>
        </chapter>

        <chapter title="Bezeichner" id="datenobjekte-bezeichner">

        </chapter>

        <chapter title="Lebensdauer" id="datenobjekte-lebensdauer">

        </chapter>

        <chapter title="Bindungszeitpunkt" id="datenobjekte-bindungszeitpunkt">

        </chapter>

        <chapter title="Speicherklasse" id="datenobjekte-speicherklasse">

        </chapter>

        <chapter title="Eigentümer" id="datenobjekte-eigentuemer">

        </chapter>
    </chapter>

    <chapter title="Systematik" id="systematik">

    </chapter>

    <chapter title="Datentypen" id="datentypen">

        <chapter title="Grunddatentypen" id="datentypen-grund">

            <chapter title="Bit und Byte" id="datentypen-grund-bitbyte">

            </chapter>

            <chapter title="Datentyp Binärwert" id="datentypen-grund-binaerwert">

            </chapter>

            <chapter title="Datentyp Zahl" id="datentypen-grund-zahl">

            </chapter>

            <chapter title="Datentyp Zeichenkette" id="datentypen-grund-zeichenkette">

            </chapter>

            <chapter title="Datentyp Adresse" id="datentypen-grund-adresse">

            </chapter>
        </chapter>

        <chapter title="Spezifische Datentypen" id="datentypen-spezifisch">

            <chapter title="Arrays" id="datentypen-spezifisch-arrays">

            </chapter>
        </chapter>
    </chapter>

    <chapter title="Quellen" id="quellen">
        <tip>
            <b>(BUCH)</b>
            978-3836244763, "Handbuch für Softwareentwickler", Veikko Krypczyk &amp; Elena Bochkor, 2018
        </tip>
    </chapter>
</topic>