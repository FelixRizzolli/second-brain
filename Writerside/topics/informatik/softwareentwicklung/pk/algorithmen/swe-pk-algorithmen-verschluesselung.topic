<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       title="Verschlüsselungsalgorithmen" id="swe-pk-algorithmen-verschluesselung"
       help-id="swe-pk-algorithmen-verschluesselung">
    <show-structure for="chapter,procedure" depth="2"/>

    <chapter title="AES Verschlüsselung" id="aes">
        <chapter title="Grundlagen" id="aes-grundlagen">
            <p>
                Die AES (Advanced Encryption Standard) Verschlüsselung wurde von Vincent Rijmen und Joan Daemen
                entwickelt. Es wird auch als Rijndael-Algorithmus bezeichnet. AES ist der Nachfolger des DES
                (Data Encryption Standards) und basiert auf der Blockverschlüsselung. Heutzutage wird es in vielen
                Bereichen der Datenübertragung angewendet wie beispielsweise IPsec oder SSH.
            </p>
            <p>
                AES ist ein symmetrisches Verschlüsselungsverfahren. Dies bedeutet, dass es im Gegensatz zur
                asymmetrischen Verschlüsselung nur einen Schlüssel zum Verschlüsseln und zum Entschlüsseln gibt. Bei der
                digitalen Datenübertragung wird der AES sehr oft im Bereich der Kommunikation und der
                Dokumentenübermittlung eingesetzt. Der AES löste im Jahr 2000 den Vorgänger DES (Data Encryption
                Standard) aufgrund seiner geringen Schlüssellänge von 56 Bit ab, als das NIST (National Institute of
                Standard and Technoloy) ihn als neuen Standard festlegte. Der Grund für die Einführung der AES
                Encryption war die Tatsache, dass die Rechenleistungen von Computern immer besser wurde und so die
                Sicherheit gegen Brute-Force-Angriffe nicht mehr aufrechterhalten werden konnte. Beim AES sind mögliche
                Schlüssellängen gegeben durch 128, 192 oder 256 Bit, weshalb man diese AES Varianten dann mit AES-128,
                AES-192 und AES-256 bezeichnet.
            </p>

            <chapter title="AES Schlüssel: AES-128, AES-192 und AES-256" id="aes-grundlagen-schluessel">
                <p>
                    Die Varianten der AES Verschlüsselung, AES-128, AES-192 und AES-256 beinhalten in ihrer Bezeichnung
                    die Länge des Schlüssels in Bit. Durch die größeren Schlüssellängen des AES von 128, 192 oder 256
                    konnte die Sicherheit, im Vergleich zum DES mit einer Schlüssellänge von 56 Bit, stark gesteigert
                    werden. Die sicherste AES Variante ist damit AES-256. Möchte man mit dem Computer einen Schlüssel
                    herausfinden, dann bräuchte dieser heutzutage (Stand 2019) schon bei einer Schlüssellänge von 128
                    Bit länger, als das Universum alt ist.
                </p>
            </chapter>

            <chapter title="Erklärung" id="aes-grundlagen-erklaerung">
                <p>
                    Da es sich bei der AES Verschlüsselung um ein symmetrisches Verfahren handelt, wird ein- und
                    derselbe Schlüssel zum Verschlüsseln als auch zum Entschlüsseln verwendet. Das AES
                    Verschlüsselungsverfahren ist eine Blockchiffre, deren Blockgröße von der AES Encryption Variante
                    abhängt. Zunächst schreibt man jeden Block in eine Tabelle mit vier Zeilen. Die Anzahl der Spalten
                    hängt dabei von der gewählten AES Variante ab und reicht von 4 (128 Bit) bis 8 (256 Bit). Des
                    Weiteren hat jede Zelle in der Tabelle eine Größe von einem Byte. Auf jeden Block werden nun
                    nacheinander verschiedene Transformationen angewendet. Das Besondere beim AES Verfahren ist, dass
                    ein Block nicht nur einmal verschlüsselt wird. Stattdessen werden verschiedene Teile des Schlüssels
                    nacheinander angewendet. Die Anzahl dieser <b>Runden(r)</b> ist dabei von der
                    <b>Schlüssellänge(k)</b> und der <b>Blockgröße(b)</b> abhängig. Im Folgenden wird nun der AES
                    Algorithmus schematisch vorgestellt.
                </p>
            </chapter>
        </chapter>

        <chapter title="Verfahren" id="verfahren">
            <p>
                Als erstes erzeugt man unter Verwendung des Eingabeschlüssels die Rundenschlüssel. Für die erste Runde
                verwendet man dabei den Eingabeschlüssel. Die anderen Schlüssel für die restlichen Runden erhält man
                hingegen durch Substitution und XOR Verknüpfungen. Insgesamt besteht eine Runde aus vier verschiedenen
                Schritten, auf die wir nun genauer eingehen werden:
            </p>

            <list style="decimal">
                <li>
                    <b>Substitution</b>: In diesem Schritt wird jedes Byte mit einer Substitutionsbox (S-Box)
                    verschlüsselt. Die S-Box gibt dabei eine Regel an, wie ein Byte eines Blockes durch einen anderen
                    Wert zu ersetzen ist. Dadurch werden die Bytes vermischt.
                </li>
                <li>
                    <b>Shift Row</b>: Nach der Substitution werden nun die Zeilen in der Tabelle um eine bestimmte
                    Anzahl an Spalten nach links verschoben. Die überlaufenden Zellen werden rechts an die jeweilige
                    Zeile wieder angehängt.
                </li>
                <li>
                    <b>Mix Column</b>: In diesem Schritt geht es nun darum, die Spalten zu vermischen. Hierfür wird jede
                    Spalte mit einer bestimmten Matrix multipliziert. Die Bytes werden dabei nicht als Zahlen gesehen,
                    sondern als Polynome. Dies bedeutet, dass die Multiplikation über einem Galois Feld (28)
                    durchgeführt wird.
                </li>
                <li>
                    <b>Key Addition</b>: Hier wird nun jeder Block mit dem aktuellen Rundenschlüssel XOR verknüpft.
                    Diese XOR Verknüpfung läuft dabei bitweise ab.
                </li>
            </list>
        </chapter>

        <chapter title="Beispiel" id="beispiel">
            <p>
                Im letzten Abschnitt wurde ganz allgemein beschrieben, wie man mit dem AES Verfahren Daten verschlüsseln
                kann. Nun wird ein allgemeines Beispiel vorgeführt, um die Vorgehensweise zu verdeutlichen.
            </p>
            <p>
                Dabei gehen wir von einer Blockgröße von 128 Bit aus. Dies bedeutet, dass unsere Tabelle aus 4 Spalten
                besteht. Die Anzahl der Zeilen ist immer konstant vier. Da jede Zelle der Tabelle eine Größe von einem
                Byte hat, kann man leicht nachrechnen, dass die Tabelle insgesamt 128 Bit enthält.
            </p>

            <code-block lang="tex">
                \underset{Spalten}{\underbrace{4}} * \underset{Spalten}{\underbrace{4}} * \underset{1Byte=8Bit}{\underbrace{8Bit}} = 128Bit
            </code-block>
            
            <p>
                Als <b>Ausgangspunkt</b> gehen wir dabei von folgender <b>Tabelle</b> aus:
            </p>

            <table style="none">
                <tr>
                    <td><code>a(0,0)</code></td>
                    <td><code>a(0,1)</code></td>
                    <td><code>a(0,2)</code></td>
                    <td><code>a(0,3)</code></td>
                </tr>
                <tr>
                    <td><code>a(1,0)</code></td>
                    <td><code>a(1,1)</code></td>
                    <td><code>a(1,2)</code></td>
                    <td><code>a(1,3)</code></td>
                </tr>
                <tr>
                    <td><code>a(2,0)</code></td>
                    <td><code>a(2,1)</code></td>
                    <td><code>a(2,2)</code></td>
                    <td><code>a(2,3)</code></td>
                </tr>
                <tr>
                    <td><code>a(3,0)</code></td>
                    <td><code>a(3,1)</code></td>
                    <td><code>a(3,2)</code></td>
                    <td><code>a(3,3)</code></td>
                </tr>
            </table>

            <p>
                Im ersten Schritt, der <b>Substitution</b> wird nun <b>jedes Byte <code>a(i,j)</code></b> unter
                Verwendung einer <b>S-Box</b> durch ein anderes <b>Byte <code>b(i,j)</code></b> ersetzt, sodass dies zu
                folgender Tabelle führt
            </p>

            <table style="none">
                <tr>
                    <td><code>b(0,0)</code></td>
                    <td><code>b(0,1)</code></td>
                    <td><code>b(0,2)</code></td>
                    <td><code>b(0,3)</code></td>
                </tr>
                <tr>
                    <td><code>b(1,0)</code></td>
                    <td><code>b(1,1)</code></td>
                    <td><code>b(1,2)</code></td>
                    <td><code>b(1,3)</code></td>
                </tr>
                <tr>
                    <td><code>b(2,0)</code></td>
                    <td><code>b(2,1)</code></td>
                    <td><code>b(2,2)</code></td>
                    <td><code>b(2,3)</code></td>
                </tr>
                <tr>
                    <td><code>b(3,0)</code></td>
                    <td><code>b(3,1)</code></td>
                    <td><code>b(3,2)</code></td>
                    <td><code>b(3,3)</code></td>
                </tr>
            </table>

            <p>
                Anschließend wird mit der Shift Row Transformation jede Zeile im Kreis verschoben. Danach werden im
                dritten Schritt, der Mix Column Transformation, die Spalten der Matrix vertauscht. Dabei wird jede
                Spalte als vier-elementiger Vektor betrachtet und mit einer <b>4 * 4</b> Matrix <b>c(x)</b>
                multipliziert. Dies ergibt dann den neuen Vektor. Bei dem letzten Schritt, der Key Addition, wird mit
                dem Schlüssel ein Rundenschlüssel berechnet, welcher auch in Matrixform gegeben ist. Auf den Bytes
                <code>a(i,j)</code> und dem Rundenschlüssel <code>k(i,j)</code> wird die Exklusiv-Oder Funktion
                angewendet diese vier Schritte werden während der Verschlüsselung mehrfach durchlaufen.
            </p>
        </chapter>

        <chapter title="Sicherheit, Verwendung und Alternativen" id="aes-weiteres">
            <chapter title="AES Verschlüsslung knacken" id="aes-weiteres-knacken">
                <p>
                    Um nun die, mit dem AES Verfahren verschlüsselten, Daten wieder zu entschlüsseln, werden die Daten
                    zuerst wieder in eine Tabelle gelesen. Anschließend wendet man die gerade beschriebenen
                    Transformationen genau in umgekehrter Reihenfolge an. Damit kann man die AES Verschlüsselung
                    knacken.
                </p>
            </chapter>

            <chapter title="Verwendung" id="aes-weiteres-verwendung">
                <p>
                    Die AES Verschlüsselung findet in den verschiedensten Bereichen Anwendung, wie zum Beispiel bei
                    <b>WLAN</b> oder <b>WAP2</b>, sowie <b>SSH</b> und <b>IPsec</b>. Des Weiteren wird das AES Verfahren
                    auch bei der <b>Verschlüsselung von Dateien</b> oder <b>Skype</b> benutzt. Die AES Verschlüsselung
                    findet noch in vielen anderen Bereichen Anwendung, die hier nicht aufgezählt sind.
                </p>
            </chapter>

            <chapter title="Sicherheit" id="aes-weiteres-sicherheit">
                <p>
                    Die Sicherheit der mit AES verschlüsselten Informationen wird heute als <b>relativ hoch</b>
                    eingestuft, da <b>kein Algorithmus</b> bekannt ist, der den AES <b>knacken</b> könnte. Auch in den
                    nächsten Jahren kann davon ausgegangen werden, dass es keine mathematische Lösung des Problems gibt,
                    auf dem AES basiert. Zusätzlich ist die AES Verschlüsselung auch gegen <b>Brute-Force-Angriffe</b>
                    in nächster Zeit sicher. Erst wenn die Rechenleistung der Computer noch viel größer wird, stellt das
                    AES Verfahren keine sichere Verschlüsselungsmethode mehr dar. Das ist spätestens dann der Fall, wenn
                    es einen effizient funktionierenden Quantencomputer gibt. Nach heutiger Einschätzung wird dies
                    jedoch noch ein paar Jahre dauern, sodass die AES Verschlüsselung voraussichtlich <b>noch eine Weile
                    als sicher eingestuft</b> werden kann.
                </p>
            </chapter>

            <chapter title="Alternativen" id="aes-weiteres-alternativen">
                <p>
                    Angenommen, es wird in naher Zukunft doch eine Lücke in der AES Verschlüsslung gefunden, oder eine
                    mathematische Lösung entwickelt, die den AES Algorithmus löst, so gibt es auch heute schon
                    gleichwertige Alternativen. Hierunter fallen zum Beispiel die Verschlüsselungen <b>Twofish</b>,
                    <b>Serpent</b>, <b>RC6</b> oder <b>MARS</b>.
                </p>
            </chapter>
        </chapter>
    </chapter>

    <chapter title="Asymmetrische Verschlüsselung" id="asymmetrisch">

    </chapter>

    <chapter title="Caesar Verschlüsselung" id="caesar">

    </chapter>

    <chapter title="Chinesischer Restsatz (Verschlüsselungsalgorihtmus)" id="chinesischerrestsatz">

    </chapter>

    <chapter title="RSA Verschlüsselung" id="rsa">

    </chapter>

    <chapter title="Symmetrische Verschlüsselung" id="symmetrisch">

    </chapter>

    <chapter title="Vigenere Verschlüsselung" id="vigenere">

    </chapter>

    <chapter title="Quellen" id="quellen">
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://studyflix.de/informatik/aes-verschlusselung-1611" ignore-vars="true">
                https://studyflix.de/informatik/aes-verschlusselung-1611
            </a>, 2020-12-21 08:50
        </tip>
    </chapter>
</topic>