<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic id="js-ecmascript"
       title="EcmaScript"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd">
    <show-structure depth="2" for="chapter,procedure"/>

    <chapter id="was-ist-ecmascript" title="Was ist EcmaScript?">
        <p>
            EcmaScript ist bekannt als Standard für JavaScript, der die Interoperabilität von Webseiten zwischen
            verschiedenen Webbrowsern gewährleisten soll. Der ECMAScript-Standard hat seit Version ES2015 eine Reihe von
            Neuerungen gebracht, die die Programmierung mit JavaScript an vielen Stellen erheblich erleichtern.
        </p>
    </chapter>

    <chapter id="ueberblick" title="Überblick">
        <table>
            <tr>
                <td>
                    Feature
                </td>
                <td>
                    Beschreibung
                </td>
                <td>
                    Mehr
                </td>
            </tr>
            <tr>
                <td>
                    Schlüsselwort <code>let</code>
                </td>
                <td>
                    Deklaration von Variablen im Gültigkeitsbereich des jeweils lokalen Blocks.
                </td>
                <td>
                    <a href="js-sprachkern.topic#variablen">
                        Variablen, Konstanten und Typisierung
                    </a>
                </td>
            </tr>
            <tr>
                <td>
                    Schlüsselwort <code>const</code>
                </td>
                <td>
                    Deklaration von Konstanten
                </td>
                <td>
                    <a href="js-sprachkern.topic#variablen">
                        Variablen, Konstanten und Typisierung
                    </a>
                </td>
            </tr>
            <tr>
                <td>
                    Standardwerte für Parameter
                </td>
                <td>
                    Angabe von Standardwerten für Parameter
                </td>
                <td>
                    <a href="js-sprachkern.topic#funktionen-parameter-standardwerte">
                        Standardwerte für Parameter
                    </a>
                </td>
            </tr>
            <tr>
                <td>
                    Rest-Parameter
                </td>
                <td>
                    Zusammenfassen der optionalen Parameter einer Funktion
                </td>
                <td>
                    <a href="js-sprachkern.topic#funktionen-parameter-variable-anzahl-an-argumenten">
                        Funktionen mit einer variablen Anzahl an Argumenten: variadische Funktionen
                    </a>
                </td>
            </tr>
            <tr>
                <td>
                    Spread-Operator
                </td>
                <td>
                    Verteilen der Werte eines Arrays auf die Parameter einer Funktion
                </td>
                <td>
                    <a href="js-sprachkern.topic#funktionen-parameter-spread-operator">
                        Der Spread-Operator: Elemente aus einem Array als Argumente verwenden
                    </a>
                </td>
            </tr>
            <tr>
                <td>
                    Klassensyntax
                </td>
                <td>
                    Definition von »Klassen« zur Vereinfachung der pseudoklassischen Objektorientierung
                </td>
                <td>
                    <a href="js-oop.topic#grundlagen-objekte-erstellen-klassensyntax">
                        Objektorientierung mit Klassensyntax
                    </a>
                </td>
            </tr>
            <tr>
                <td>
                    Destructuring
                </td>
                <td>
                    Mehrfachzuweisungen von Objekteigenschaften zu Variablen oder von Arrays zu Variablen
                </td>
                <td>
                    <a href="#destructing">
                        Destructuring
                    </a>
                </td>
            </tr>
            <tr>
                <td>
                    <code>for-of</code>-Schleife
                </td>
                <td>
                    Iteration über iterierbare Objekte
                </td>
                <td>
                    <a href="#iteratoren-for-of">
                        Über Maps iterieren: for-of-Schleifen
                    </a>
                </td>
            </tr>
            <tr>
                <td>
                    Arrow Functions
                </td>
                <td>
                    Deklaration von Funktionen, die sich im Gegensatz zu »normal« definierten Funktionen auf den Kontext
                    beziehen, in dem sie definiert wurden, nicht zwangsweise auf den Kontext, in dem sie ausgeführt
                    werden
                </td>
                <td>
                    <a href="js-sprachkern.topic#funktionen-arrow-functions">
                        Arrow Functions
                    </a>
                </td>
            </tr>
            <tr>
                <td>
                    Datenstrukturen <code>Set</code> und <code>WeakSet</code>
                </td>
                <td>
                    Datenstruktur, in der Elemente nur einmal vorkommen dürfen
                </td>
                <td>
                    <a href="#sets">
                        ES2015 Sets
                    </a>
                </td>
            </tr>
            <tr>
                <td>
                    Datenstrukturen <code>Map</code> und <code>WeakMap</code>
                </td>
                <td>
                    Datenstruktur, um Schlüssel-Wert-Paare zu speichern
                </td>
                <td>
                    <a href="#maps">
                        ES2015 Maps
                    </a>
                </td>
            </tr>
            <tr>
                <td>
                    Typisierte Arrays
                </td>
                <td>
                    array-ähnliche Objekte, die den Zugriff auf binäre Rohdaten abstrahieren
                </td>
                <td></td>
            </tr>
            <tr>
                <td>
                    Iteratoren
                </td>
                <td>
                    Vereinfacht das Iterieren über Datenstrukturen wie Arrays, Sets und Maps.
                </td>
                <td>
                    <a href="#iteratoren">
                        ES2015 Iteratoren
                    </a>
                </td>
            </tr>
            <tr>
                <td>
                    Generatoren
                </td>
                <td>
                    Ermöglichen es, Funktionen an bestimmten Stellen anzuhalten und zu einem späteren Zeitpunkt wieder
                    fortzuführen.
                </td>
                <td>
                    <a href="#generatoren">
                        ES2015 Generatoren: Funktionen anhalten und fortsetzen
                    </a>
                </td>
            </tr>
            <tr>
                <td>
                    Proxies
                </td>
                <td>
                    Erlauben es, Zugriffe auf Objekte abzufangen.
                </td>
                <td>
                    <a href="#proxies">
                        ES2015 Proxies: Zugriff auf Objekte abfangen
                    </a>
                </td>
            </tr>
            <tr>
                <td>
                    Symbole
                </td>
                <td>
                    neuer primitiver Datentyp, der hauptsächlich als eindeutige Kennzeichnung von Objekteigenschaften
                    zum Einsatz kommt
                </td>
                <td>
                    <a href="#symbol">
                        ES2015 Symbole
                    </a>
                </td>
            </tr>
            <tr>
                <td>
                    Template-Strings
                </td>
                <td>
                    Erlauben u.a. eingebettete Ausdrücke innerhalb von Zeichenketten.
                </td>
                <td>
                    <a href="#template-string">
                        ES2015 Vorlagen für Zeichenketten
                    </a>
                </td>
            </tr>
            <tr>
                <td>
                    Module
                </td>
                <td>
                    Definition von Modulen
                </td>
                <td>
                    <a href="js-entwurfsmuster.topic#modules-native">
                        Entwurfsmuster: Native Module
                    </a>
                </td>
            </tr>
            <tr>
                <td>
                    Erweiterungen der API
                </td>
                <td>
                    Neue Methoden in <code>Array</code>, <code>Date</code>, <code>Math</code>, <code>Number</code>,
                    <code>Object</code>, <code>RegExp</code>, <code>String</code>
                </td>
                <td>
                    <a href="js-oop.topic#globale-objekte">
                        Globale Objekte
                    </a>
                </td>
            </tr>
            <tr>
                <td>
                    Exponentialoperator
                </td>
                <td>
                    Operator, über den sich Potenzen berechnen lassen
                </td>
                <td>
                    <a href="js-sprachkern.topic#operatoren">
                        Operatoren
                    </a>
                </td>
            </tr>
            <tr>
                <td>
                    String Padding
                </td>
                <td>
                    Auffüllen von Zeichenketten
                </td>
                <td>
                    <a href="js-oop.topic#globale-objekte-primitiver-datentypen-pad-start-und-end">
                        Die Methoden padStart() und padEnd()
                    </a>
                </td>
            </tr>
            <tr>
                <td>
                    Async Functions
                </td>
                <td>
                    Vereinfachung asynchroner Programmierung
                </td>
                <td>
                    <a href="#async">
                        ES2016 Async Functions
                    </a>
                </td>
            </tr>
        </table>
    </chapter>

    <chapter id="maps" title="ES2015 – Maps">

        <chapter id="maps-methoden-und-eigenschaften" title="Methoden und Eigenschaften">

        </chapter>

        <chapter id="maps-weak" title="Weak Maps">

        </chapter>
    </chapter>

    <chapter id="sets" title="ES2015 – Sets">

        <chapter id="sets-methoden-und-eigenschaften" title="Methoden und Eigenschaften">

        </chapter>

        <chapter id="sets-weak" title="Weak Sets">

        </chapter>
    </chapter>

    <chapter id="iteratoren" title="ES2015 – Iteratoren">

        <chapter id="iteratoren-erstellen" title="Einen Iterator erstellen">

        </chapter>

        <chapter id="iteratoren-objekt" title="Ein iterierbares Objekt erstellen">

        </chapter>

        <chapter id="iteratoren-for-of" title="Über iterierbaren Objekten iterieren: »for-of«-Schleifen">

        </chapter>
    </chapter>

    <chapter id="generatoren" title="ES2015 – Generatoren: Funktionen anhalten und fortsetzen">

    </chapter>

    <chapter id="proxies" title="ES2015 – Proxies: Zugriff auf Objekte abfangen">

    </chapter>

    <chapter id="async" title="Asynchrone Programmierung: Promises und Async Functions">

        <chapter id="asynchone-programmierung" title="Asynchrone Programmierung">

            <chapter id="callback-design-pattern" title="Das Callback-Entwurfsmuster">

            </chapter>

            <chapter id="async-return" title="Rückgabewerte von asynchronen Funktionen">

            </chapter>

            <chapter id="async-fehler-werfen" title="Fehler werfen in asynchronen Funktionen">

            </chapter>

            <chapter id="callback-ergebnisse-und-fehler-uebergeben" title="Ergebnisse und Fehler an Callback übergeben">

            </chapter>

            <chapter id="callback-probleme" title="Das Problem asynchroner Programmierung mit Callbacks">

            </chapter>
        </chapter>

        <chapter id="promises" title="ES2015 – Promises">

            <chapter id="promises-aufrufe-verketten" title="Promise-Aufrufe verketten">

            </chapter>

            <chapter id="promises-zustaende" title="Die Zustände von Promises">

            </chapter>
        </chapter>

        <chapter id="es2016-async" title="ES2016 – Async Functions">

        </chapter>
    </chapter>

    <chapter id="template-string" title="ES2015 – Vorlagen für Zeichenketten">

    </chapter>

    <chapter id="symbol" title="ES2015 – Symbole">

        <chapter id="symbol-registry" title="Die Symbol-Registry">

        </chapter>

        <chapter id="symbol-objekteigenschaften"
                 title="Symbole zur Definition eindeutiger Objekteigenschaften verwenden">

        </chapter>

        <chapter id="symbol-konstanten" title="Symbole zur Definition von Konstanten verwenden">

        </chapter>
    </chapter>


    <chapter id="destructing" title="Destructuring – Werte aus Arrays und Objekten extrahieren">

        <chapter id="destructing-array" title="Array-Destructuring">

        </chapter>

        <chapter id="destructing-object" title="Objekt-Destructuring">

        </chapter>

        <chapter id="rest-spread-properties" title="ES2018 – Rest- und Spread-Properties">

        </chapter>
    </chapter>

    <chapter id="optional-chaining-operator" title="ES2020 – Optional Chaining Operator">

    </chapter>

    <chapter id="nullish-coalescing-operator" title="ES2020 – Nullish Coalescing Operator">

    </chapter>

    <chapter id="es2020-zuweisungsoperatoren" title="ES2020 – Neue Zuweisungsoperatoren: &amp;&amp;=, ||= und ??=">

    </chapter>

    <chapter id="numeric-seperators" title="ES2021 – Numeric Seperators">

    </chapter>

    <chapter id="quellen" title="Quellen">
        <tip>
            <b>(BUCH)</b>
            978-3836256971, "JavaScript", Philip Ackermann, 2019
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://en.wikipedia.org/wiki/ECMAScript"/>, 2023-08-17, 18:30
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/js/js_2020.asp"/>, 2023-08-20, 08:00
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/js/js_2021.asp"/>, 2023-08-20, 08:30
        </tip>
    </chapter>
</topic>