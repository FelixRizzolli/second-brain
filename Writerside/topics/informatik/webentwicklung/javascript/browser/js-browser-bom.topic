<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic id="js-browser-bom"
       title="Browser und BOM (Browser Object Model)"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd">
    <show-structure depth="2" for="chapter,procedure"/>

    <chapter id="bom" title="Das BOM (Browser Object Model)">
        <p>
            Neben dem DOM steht in Browserlaufzeitumgebungen das sogenannte Browser Object Model (BOM oder BOM API) zur
            Verfügung. Über dieses Objektmodell ist es möglich, bestimmte Aspekte des Browsers zu steuern
            (beispielsweise das Vor- und Zurückgehen im Browserverlauf) und bestimmte Informationen des Browsers
            auszulesen (wie beispielsweise Informationen zu Größe und Position des aktuellen Browserfensters).
        </p>

        <img alt="Das window-Object" src="js-browser-bom-window-object.png"/>

        <p>
            Das <code>window</code>-Objekt repräsentiert ein einzelnes Browserfenster (bzw. genauer: ein einzelnes
            Browsertab, denn jedes Browsertab enthält eine eigene Objektinstanz). Das <code>window</code>-Objekt enthält
            zudem auch das <code>document</code>-Objekt als Eigenschaft welches aber durch die Browser implizit auch als
            globales Objekt bereitgestellt wird (somit wäre mit <code>window.document</code> auch der Zugriff auf das
            <code>document</code>-Objekt möglich).
        </p>

        <p>
            Auch die Standard-JavaScript-Objekte wie <code>Object</code>, <code>Array</code> und <code>Function</code>
            sind Eigenschaften des <code>window</code>-Objekts, stehen aber zusätzlich als globale Variablen zur
            Verfügung.
        </p>

        <p>
            Darüber hinaus bildet das <code>window</code>-Objekt auch den Einstiegspunkt in verschiedene HTML5-Web-APIs,
            beispielsweise die Application Cache API, die Storage API und viele mehr.
        </p>

        <p>
            In der BOM API spielen vor allem folgende Objekte eine Rolle:
        </p>

        <list>
            <li>
                Die Eigenschaft <code>location</code> enthält Informationen zur aktuellen URL des Browserfensters. Über
                diese Eigenschaft können Sie auf die verschiedenen Bestandteile der jeweils aktuellen URL zugreifen.
            </li>
            <li>
                Die Eigenschaft <code>history</code> enthält eine Referenz auf ein Objekt vom Typ History. Hierüber
                können Sie auf den Browserverlauf zugreifen und diesen auch verändern.
            </li>
            <li>
                Die Eigenschaft <code>navigator</code> enthält eine Referenz auf ein Objekt vom Typ Navigator. Dieses
                Objekt stellt verschiedene allgemeine Informationen des Browsers zur Verfügung, beispielsweise dessen
                Namen, Angaben zum Hersteller etc.
            </li>
            <li>
                Die Eigenschaft <code>screen</code> enthält eine Referenz auf ein Objekt vom Typ Screen, über das
                verschiedene Informationen des Bildschirms ermittelt werden können, beispielsweise dessen Höhe und
                Breite, die Farbtiefe, die Pixeltiefe etc.
            </li>
        </list>
    </chapter>

    <chapter id="browserinformationen" title="Browserfensterinformationen">
        <chapter id="browserinformationen-gruesse-und-position-eines-browserfensters"
                 title="Größe und Position eines Browserfensters">
            <img alt="Größe und Position eines Browserfensters" src="js-browser-bom-browser-fenster.png"/>

            <table style="header-row">
                <tr>
                    <td>
                        Eigenschaft
                    </td>
                    <td>
                        Beschreibung
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            innerHeight
                        </code>
                    </td>
                    <td>
                        Enthält die Höhe des Fensterinhalts inklusive (falls dargestellt) der horizontalen Scrollbar,
                        aber ohne sonstige Browserleisten.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            innerWidth
                        </code>
                    </td>
                    <td>
                        Enthält die Breite des Fensterinhalts inklusive (falls dargestellt) der vertikalen Scrollbar,
                        aber ohne sonstige Browserleisten.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            outerHeight
                        </code>
                    </td>
                    <td>
                        Enthält die Höhe des Browserfensters inklusive aller Browserleisten.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            outerWidth
                        </code>
                    </td>
                    <td>
                        Enthält die Breite des Browserfensters inklusive aller Browserleisten.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            pageXOffset
                        </code>
                    </td>
                    <td>
                        ein Alias für <code>window.scrollX</code>
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            pageYOffset
                        </code>
                    </td>
                    <td>
                        ein Alias für <code>window.scrollY</code>
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            screenX
                        </code>
                    </td>
                    <td>
                        Enthält die Position des Browserfensters auf der x-Achse, mit anderen Worten: den Abstand des
                        Browserfensters zum linken Bildschirmrand.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            screenY
                        </code>
                    </td>
                    <td>
                        Enthält die Position des Browserfensters auf der y-Achse, mit anderen Worten: den Abstand des
                        Browserfensters zum oberen Bildschirmrand.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            scrollX
                        </code>
                    </td>
                    <td>
                        Enthält die Anzahl an Pixeln, die die Webseite bereits horizontal gescrollt wurde.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            scrollY
                        </code>
                    </td>
                    <td>
                        Enthält die Anzahl an Pixeln, die die Webseite bereits vertikal gescrollt wurde.
                    </td>
                </tr>
            </table>

            <p>
                Zum Verändern der Browserinformationen bietet das <code>window</code>-Objekt folgende Methoden:
            </p>

            <table style="header-row">
                <tr>
                    <td>
                        Methode
                    </td>
                    <td>
                        Beschreibung
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            moveBy()
                        </code>
                    </td>
                    <td>
                        Verschiebt das aktuelle Browserfenster horizontal und vertikal um eine bestimmte Pixelanzahl.
                        Der erste Parameter bestimmt dabei die horizontale Verschiebung in Pixeln, der zweite Parameter
                        die vertikale Verschiebung.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            moveTo()
                        </code>
                    </td>
                    <td>
                        Verschiebt das aktuelle Browserfenster horizontal und vertikal zu einer bestimmten Position. Der
                        erste Parameter bestimmt dabei die horizontale Position in Pixeln, der zweite Parameter die
                        vertikale Position.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            resizeBy()
                        </code>
                    </td>
                    <td>
                        Skaliert das aktuelle Browserfenster horizontal und vertikal um eine bestimmte Anzahl an Pixeln.
                        Der erste Parameter bestimmt dabei den horizontalen Skalierungswert, der zweite Parameter den
                        vertikalen Skalierungswert.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            resizeTo()
                        </code>
                    </td>
                    <td>
                        Skaliert das aktuelle Browserfenster horizontal und vertikal zu einer bestimmten Größe. Der
                        erste Parameter bestimmt dabei die Breite, der zweite Parameter die Höhe.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            scroll()
                        </code>
                    </td>
                    <td>
                        Scrollt den Fensterinhalt zu einer bestimmten Position. Der erste Parameter gibt dabei die
                        horizontale Position an, der zweite Parameter die vertikale Position.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            scrollBy()
                        </code>
                    </td>
                    <td>
                        Scrollt den Fensterinhalt um einen bestimmten Faktor. Der erste Parameter gibt den horizontalen
                        Scrollfaktor an, der zweite Parameter den vertikalen Scrollfaktor.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            scrollTo()
                        </code>
                    </td>
                    <td>
                        Scrollt den Fensterinhalt zu einer bestimmten Position. Der erste Parameter gibt dabei die
                        horizontale Position an, der zweite Parameter die vertikale Position.
                    </td>
                </tr>
            </table>
        </chapter>

        <chapter id="browserinformationen-anzeigeinformationen-der-browserleisten"
                 title="Anzeigeinformationen der Browserleisten">
            <img alt="Anzeigeinformationen der Browserleisten" src="js-browser-bom-browserleisten.png"/>

            <table style="header-row">
                <tr>
                    <td>
                        Eigenschaft
                    </td>
                    <td>
                        Beschreibung
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            locationbar
                        </code>
                    </td>
                    <td>
                        Enthält eine Referenz auf ein Objekt, welches Informationen darüber gibt, ob die Adressleiste
                        eingeblendet ist oder nicht.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            menubar
                        </code>
                    </td>
                    <td>
                        Enthält eine Referenz auf ein Objekt, welches Informationen darüber gibt, ob die Menüleiste
                        eingeblendet ist oder nicht.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            personalbar
                        </code>
                    </td>
                    <td>
                        Enthält eine Referenz auf ein Objekt, welches Informationen darüber gibt, ob die »persönliche«
                        Leiste (z. B. die Bookmark-Leiste) eingeblendet ist oder nicht.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            scrollbars
                        </code>
                    </td>
                    <td>
                        Enthält eine Referenz auf ein Objekt, welches Informationen darüber gibt, ob die Scrollleisten
                        eingeblendet sind oder nicht.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            statusbar
                        </code>
                    </td>
                    <td>
                        Enthält eine Referenz auf ein Objekt, welches Informationen darüber gibt, ob die Statusleiste
                        eingeblendet ist oder nicht.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            toolbar
                        </code>
                    </td>
                    <td>
                        Enthält eine Referenz auf ein Objekt, welches Informationen darüber gibt, ob die Werkzeugleiste
                        eingeblendet ist oder nicht.
                    </td>
                </tr>
            </table>
        </chapter>

        <chapter id="browserinformationen-allgemein" title="Allgemeine Eigenschaften">

            <table style="header-row">
                <tr>
                    <td>
                        Eigenschaft
                    </td>
                    <td>
                        Beschreibung
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            name
                        </code>
                    </td>
                    <td>
                        Enthält den Namen des Fensters.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            opener
                        </code>
                    </td>
                    <td>
                        Öffnet man per JavaScript aus einem Browserfenster heraus ein anderes Browserfenster, enthält
                        diese Eigenschaft eine Referenz auf das Ursprungsfenster.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            self
                        </code>
                    </td>
                    <td>
                        Enthält eine Referenz auf ein Objekt (<code>window</code>-Objekt), welches das aktuelle
                        Browserfenster repräsentiert. Dies ist vor allem dann interessant, um Konflikte mit dem
                        <code>this</code>-Schlüsselwort zu vermeiden, wenn man innerhalb von Event-Listenern auf das
                        aktuelle <code>window</code>-Objekt zugreifen möchte.
                    </td>
                </tr>
            </table>
        </chapter>

        <chapter id="browserinformationen-browserfenster-oeffnen-und-schliessen"
                 title="Browserfenster öffnen &amp; schließen">
            <code-block lang="javascript">
                <![CDATA[
                    window.open(
                      url,                  // zu öffnende URL
                      'Fenstertitel',       // Name des Fensters
                      ( 'width=500,' +      // Breite des Fensters
                        'height=500,' +     // Höhe des Fensters
                        'resizable=yes,' +  // Größenänderungen möglich
                        'scrollbars=1,' +   // Scrollbar aktiviert
                        'status' )          // Statusbar aktiviert
                    );
                ]]>
            </code-block>

            <table style="header-row">
                <tr>
                    <td>
                        Eigenschaft
                    </td>
                    <td>
                        Beschreibung
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            height
                        </code>
                    </td>
                    <td>
                        die Höhe des neuen Browserfensters in Pixeln
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            innerHeight
                        </code>
                    </td>
                    <td>
                        die Höhe des Anzeigebereichs des neuen Browserfensters in Pixeln
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            innerWidth
                        </code>
                    </td>
                    <td>
                        die Breite des Anzeigebereichs des neuen Browserfensters in Pixeln
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            left
                        </code>
                    </td>
                    <td>
                        Abstand der linken oberen Ecke des neuen Browserfensters zum linken Bildschirmrand in Pixeln
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            location
                        </code>
                    </td>
                    <td>
                        Angabe darüber, ob das neue Browserfenster über eine Adresszeile verfügen soll oder nicht
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            menubar
                        </code>
                    </td>
                    <td>
                        Angabe darüber, ob das neue Browserfenster über eine Menüleiste verfügen soll oder nicht
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            resizable
                        </code>
                    </td>
                    <td>
                        Angabe darüber, ob das neue Browserfenster größenveränderbar ist oder nicht
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            screenX
                        </code>
                    </td>
                    <td>
                        Abstand der linken oberen Ecke des neuen Browserfensters zum linken Bildschirmrand in Pixeln
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            screenY
                        </code>
                    </td>
                    <td>
                        Abstand der linken oberen Ecke des neuen Browserfensters zum oberen Bildschirmrand in Pixeln
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            scrollbars
                        </code>
                    </td>
                    <td>
                        Angabe darüber, ob das neue Browserfenster über eine Scrollbar verfügen soll oder nicht
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            status
                        </code>
                    </td>
                    <td>
                        Angabe darüber, ob das neue Browserfenster über eine Statusleiste verfügen soll oder nicht
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            toolbar
                        </code>
                    </td>
                    <td>
                        Angabe darüber, ob das neue Browserfenster über eine Toolbar (sprich Werkzeugleiste) verfügen
                        soll oder nicht
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            top
                        </code>
                    </td>
                    <td>
                        Abstand der linken oberen Ecke des neuen Browserfensters zum oberen Bildschirmrand in Pixeln
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            width
                        </code>
                    </td>
                    <td>
                        die Breite des neuen Browserfensters in Pixeln
                    </td>
                </tr>
            </table>

            <p>
                Mit der <code>close()</code>-Methode kann das Browserfenster geschlossen werden.
            </p>

            <code-block lang="javascript">
                <![CDATA[
                    window.close();
                ]]>
            </code-block>
        </chapter>

        <chapter id="browserinformationen-dialoge" title="Dialoge">
            <table style="header-row">
                <tr>
                    <td>
                        Methode
                    </td>
                    <td>
                        Beschreibung
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            alert()
                        </code>
                    </td>
                    <td>
                        Öffnet einen Dialog mit einer Meldung.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            close()
                        </code>
                    </td>
                    <td>
                        Schließt das Browserfenster.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            confirm()
                        </code>
                    </td>
                    <td>
                        Öffnet einen Dialog mit einer Meldung.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            find()
                        </code>
                    </td>
                    <td>
                        Sucht nach einer Zeichenkette im Browserfenster.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            open()
                        </code>
                    </td>
                    <td>
                        Erzeugt ein neues Browserfenster.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            print()
                        </code>
                    </td>
                    <td>
                        Öffnet einen Dialog zum Drucken des Fensterinhalts.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            prompt()
                        </code>
                    </td>
                    <td>
                        Öffnet einen Dialog, über den Nutzer Text eingeben können.
                    </td>
                </tr>
            </table>
        </chapter>

        <chapter id="browserinformationen-funktionen-zeitgesteuert-ausfuehren"
                 title="Funktionen zeitgesteuert ausführen">
            <table style="header-row">
                <tr>
                    <td>
                        Methode
                    </td>
                    <td>
                        Beschreibung
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            setInterval()
                        </code>
                    </td>
                    <td>
                        Führt eine Funktion in bestimmten Zeitabständen aus. Gibt eine <code>ID</code> zurück, die der
                        Methode <code>clearInterval()</code> als Parameter übergeben werden kann, um so das Ausführen
                        der Funktion abzubrechen.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            clearInterval()
                        </code>
                    </td>
                    <td>
                        Bricht das Ausführen der Funktion ab, die über <code>setInterval()</code> angestoßen wurde.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            setTimeout()
                        </code>
                    </td>
                    <td>
                        Führt eine Funktion nach einem bestimmten Zeitraum aus. Gibt eine <code>ID</code> zurück, die
                        der Methode <code>clearTimeout()</code> als Parameter übergeben werden kann, um so das Ausführen
                        der Funktion zu verhindern.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            clearTimeout()
                        </code>
                    </td>
                    <td>
                        Bricht das Ausführen der Funktion ab, die über <code>setTimeout()</code> angestoßen wurde.
                    </td>
                </tr>
            </table>

            <p>
                Über die Methode <code>setTimeout()</code> lässt sich definieren, nach welchem Zeitraum eine bestimmte
                Funktion ausgeführt werden soll. Als Argument übergibt man eine anonyme Funktion oder den Namen der
                entsprechenden Funktion sowie als zweites Argument den Zeitraum in Millisekunden, nach dem die Funktion
                ausgeführt werden soll.
            </p>

            <code-block lang="javascript">
                <![CDATA[
                    window.setTimeout(() => {
                      console.log('Hallo Welt');
                    }, 5000);
                ]]>
            </code-block>
        </chapter>
    </chapter>

    <chapter id="navigationsinformationen" title="Navigationsinformationen der aktuellen Webseite">
        <p>
            Über das Objekt, welches der Eigenschaft <code>location</code> hinterlegt ist (und welches vom Typ
            <code>Location</code> ist), kann auf Informationen bezüglich der URL der aktuell im Browserfenster bzw.
            Browsertab geladenen Webseite zugegriffen werden.
        </p>

        <img alt="Navigationsinformationen der aktuellen Webseite" src="js-browser-bom-navigationsinformationen.png"/>

        <table style="header-row">
            <tr>
                <td>
                    Eigenschaft
                </td>
                <td>
                    Beschreibung
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        href
                    </code>
                </td>
                <td>
                    Enthält die gesamte URL.
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        protocol
                    </code>
                </td>
                <td>
                    Enthält das Protokoll der URL inklusive des Doppelpunkts, also beispielsweise <code>https:</code>.
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        host
                    </code>
                </td>
                <td>
                    Enthält den Hostnamen einer URL, beispielsweise javascripthandbuch.de. Ist eine Portangabe
                    vorhanden, wird diese ebenfalls mit aufgeführt, also beispielsweise
                    <code>philipackermann.de:8080</code>.
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        hostname
                    </code>
                </td>
                <td>
                    Enthält die Domain einer URL, beispielsweise <code>javascripthandbuch.de</code>. Im Gegensatz zu der
                    Eigenschaft <code>host</code> ist bei <code>hostname</code> keine Portangabe enthalten.
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        port
                    </code>
                </td>
                <td>
                    Enthält den Port einer URL, beispielsweise <code>8080</code>.
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        pathname
                    </code>
                </td>
                <td>
                    Enthält den Pfad einer URL, beginnend mit einem <code>/</code>.
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        search
                    </code>
                </td>
                <td>
                    <p>
                        Enthält die Parameter einer URL, mit anderen Worten den Querystring (auch: Suchstring) inklusive
                        eines vorangestellten Fragezeichens, also beispielsweise <code>?firstName=Max</code>. Mehrere
                        Parameter-Wert-Paare werden durch ein kaufmännisches Und-Symbol getrennt, also beispielsweise
                        <code>?firstName=Max&amp;lastName=Mustermann</code>.
                    </p>

                    <code-block collapsed-title="Helferfunktion für das Extrahieren einzelner Querystring-Parameter"
                                collapsible="true"
                                lang="javascript">
                        <![CDATA[
                            function getParameterByName(name) {
                              name = name.replace(/[\[]/, '\\[').replace(/[\]]/, '\\]');
                              let regex = new RegExp('[\\?&]' + name + '=([^&#]*)');
                              let results = regex.exec(location.search);
                              return results === null ? '' : decodeURIComponent(results[1].replace(/\+/g, ' '));
                            }
                            console.log(getParameterByName('tests'));
                        ]]>
                    </code-block>
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        hash
                    </code>
                </td>
                <td>
                    Enthält den sogenannten Fragment Identifier inklusive eines vorangestellten <code>#</code>, im Falle
                    der URL <code>http://www.javascripthandbuch.de#services</code> beispielsweise <code>#services</code>.
                    Ruft man eine URL mit Fragment Identifier auf und gibt es auf der dazugehörigen Webseite ein Element
                    mit entsprechender ID, wird der Anzeigebereich zu diesem Element gescrollt.
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        username
                    </code>
                </td>
                <td>
                    Enthält den in der URL angegebenen Nutzernamen, also beispielsweise für die URL
                    <code>https://max:secret@javascripthandbuch.de</code> den Wert <code>max</code>. Wird nicht von
                    allen Browsern unterstützt.
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        password
                    </code>
                </td>
                <td>
                    Enthält das in der URL angegebene Passwort, also beispielsweise für die URL
                    <code>https://max:secret@javascripthandbuch.de</code> den Wert <code>secret</code>. Wird nicht von
                    allen Browsern unterstützt.
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        origin
                    </code>
                </td>
                <td>
                    Enthält die kanonische Form der URL, bestehend aus Protokoll, gefolgt von <code>://</code> und der
                    Domain sowie – falls die URL eine Portangabe enthält – weiterhin einem Doppelpunkt und der
                    Portangabe.
                </td>
            </tr>
            <tr>
                <td>
                    <code>

                    </code>
                </td>
                <td>

                </td>
            </tr>
        </table>

        <table style="header-row">
            <tr>
                <td>
                    Methode
                </td>
                <td>
                    Beschreibung
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        assign()
                    </code>
                </td>
                <td>
                    <p>
                        Die Methode <code>assign()</code> erwartet als Argument eine URL und öffnet die entsprechende
                        Webseite. Dabei wird gleichzeitig auch ein neuer Eintrag im Browserverlauf erzeugt.
                    </p>

                    <code-block lang="javascript">
                        <![CDATA[
                            let url = document.getElementById('url').value;
                            window.location.assign(url);
                        ]]>
                    </code-block>
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        replace()
                    </code>
                </td>
                <td>
                    <p>
                        Die Methode <code>replace()</code> erwartet als Argument eine URL und öffnet die entsprechende
                        Webseite. Anders als bei der Methode <code>assign()</code> erzeugt sie keinen Eintrag im
                        Browserverlauf. Somit kann man in diesem Fall auch nicht mehr zu der vorher besuchten Webseite
                        zurücknavigieren.
                    </p>

                    <code-block lang="javascript">
                        <![CDATA[
                            let url = document.getElementById('url').value;
                            window.location.replace(url);
                        ]]>
                    </code-block>
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        reload()
                    </code>
                </td>
                <td>
                    <p>
                        Mit der Methode <code>reload()</code> kann die Seite neu geladen werden. Optional kann der
                        Methode ein boolescher Wert übergeben werden, über den sich bestimmen lässt, ob die Webseite vom
                        Server neu geladen werden soll (in diesem Fall übergibt man den Wert <code>true</code>) oder ob
                        der Browser die Webseite auch von seinem internen Cache neu laden kann (in diesem Fall übergibt
                        man den Wert <code>false</code>).
                    </p>

                    <code-block lang="javascript">
                        <![CDATA[
                            window.location.reload(true);
                        ]]>
                    </code-block>
                </td>
            </tr>
        </table>
    </chapter>

    <chapter id="browserverlauf" title="Der Browserverlauf">
        <p>
            Die Eigenschaft <code>history</code> des <code>window</code>-Obrjekts repräsentiert den Browserverlauf.
            Jedes Mal, wenn der Browser eine neue Webseite lädt oder auch, wenn innerhalb einer Webseite zu einer
            Sprungmarke (einem Anker) gesprungen wird, erzeugt der Browser standardmäßig einen neuen Eintrag im
            Browserverlauf (Ausnahme bildet hier die <code>replace()</code>-Methode).
        </p>

        <table style="header-row">
            <tr>
                <td>
                    Eigenschaft/Methode
                </td>
                <td>
                    Beschreibung
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        length
                    </code>
                </td>
                <td>
                    Enthält die Anzahl an Einträgen in der Historie inklusive der aktuell geladenen Webseite.
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        back()
                    </code>
                </td>
                <td>
                    Geht zu der vorherigen Webseite in der Historie. Bewirkt das Gleiche, wie wenn der Nutzer die
                    Zurück-Schaltfläche des Browsers betätigt.
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        forward()
                    </code>
                </td>
                <td>
                    Geht zu der nachfolgenden Webseite in der Historie. Bewirkt das Gleiche, wie wenn der Nutzer die
                    Weiter-Schaltfläche des Browsers betätigt.
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        go()
                    </code>
                </td>
                <td>
                    Geht zu einer bestimmten Webseite in der Historie. Übergeben wird der Methode die Schrittweite
                    ausgehend von der aktuellen Webseite. Beispielsweise sorgt der Wert -1 dafür, dass zu der vorherigen
                    Webseite gegangen wird, und der Wert 1, dass zu der nachfolgenden Webseite gegangen wird. Wird ein
                    Wert übergeben, für den es keine entsprechende Webseite in der Historie gibt, macht diese Methode
                    nichts. Wird die Methode dagegen ohne Wert oder mit dem Wert 0 aufgerufen, wird die aktuelle
                    Webseite erneut geladen.
                </td>
            </tr>
        </table>

        <chapter id="browserverlauf-single-page-applications" title="Single Page Applications">
            <p>
                Mit dem Erfolg von Single Page Applications, in denen nur Teile einer Webseite/Anwendung neu geladen
                werden, musste jedoch eine neue bzw. zusätzliche Funktionalität her, um einzelne Einträge im
                Browserverlauf zu beschreiben. Der Grund: Werden nur Teile einer Webseite neu geladen, ändert sich
                standardmäßig dadurch erst mal nicht die URL, wodurch es folglich auch keinen neuen Eintrag im
                Browserverlauf gibt. Auch das Setzen von Lesezeichen ist dann nicht möglich, weil verschiedene
                »Webseiten« (genauer: Zustände der Webseite) keine eigene URL haben.
            </p>

            <p>
                Zu Hilfe nahm man sich daher lange Zeit den Fragment Identifier der URL. Wurden Teile einer Webseite neu
                geladen, änderte man einfach diesen Fragment Identifier und sorgte somit dafür, dass ein neuer Eintrag
                im Browserverlauf erzeugt wurde.
            </p>

            <p>
                Dazu ein kurzes Beispiel: Angenommen, man befindet sich auf einer Webseite mit URL in
                <code>www.javascripthandbuch.de</code>, welche fünf verschiedene Navigationseinträge hat: Startseite,
                Services, Skills, Über Uns und Kontakt. Dann würden die einzelnen URLs
                <code>www.javascripthandbuch.de#home</code>, <code>www.javascripthandbuch.de#services</code>,
                <code>www.javascripthandbuch.de#skills</code>, <code>www.javascripthandbuch.de#aboutus</code> und
                <code>www.javascripthandbuch.de#contact</code> lauten. Solche URLs nennt man wegen des enthaltenen
                <code>#</code>-Zeichens auch Hash-Bang-URLs.
            </p>

            <code-block lang="javascript">
                <![CDATA[
                    <li><a href="/home">Startseite</a></li>
                    <li><a href="/services">Services</a></li>
                    <li><a href="/skills">Skills</a></li>
                    <li><a href="/aboutus">Über Uns</a></li>
                    <li><a href="/contact">Kontakt</a></li>
                ]]>
            </code-block>

            <p>
                Doch diese Technik ist mehr schlecht als recht, hat sie doch einige Einschränkungen, beispielsweise
                steht der Fragment Identifier nur auf Clientseite zur Verfügung und wird nicht an den Server
                mitgeschickt.
            </p>
        </chapter>

        <chapter id="history-api" title="Die History API">
            <img alt="Die History API" src="js-browser-bom-history-api.png"/>

            <table style="header-row">
                <tr>
                    <td>
                        Eigenschaft/Methode
                    </td>
                    <td>
                        Beschreibung
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            state
                        </code>
                    </td>
                    <td>
                        Enthält den aktuellen Eintrag im Browserverlauf.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            pushState()
                        </code>
                    </td>
                    <td>
                        Fügt der Historie einen Eintrag hinzu. Übergeben werden ein beliebiges JavaScript-Objekt (das
                        sogenannte Zustandsobjekt), der Titel und optional eine URL.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>
                            replaceState()
                        </code>
                    </td>
                    <td>
                        Ersetzt den aktuellen Eintrag in der Historie durch einen neuen Eintrag. Übergeben werden ein
                        Zustandsobjekt, der Titel und optional eine URL.
                    </td>
                </tr>
            </table>

            <note>
                <p>
                    <b>
                        History.js
                    </b>
                </p>

                <p>
                    Die Browser verhalten sich bezüglich der History API leider nicht 100 % gleich, beispielsweise
                    wenn es um den Zeitpunkt geht, zu dem das <code>popstate</code>-Event ausgelöst wird. Eine
                    interessante Alternative ist die Verwendung der Bibliothek <code>history.js</code>
                    <a href="https://github.com/browserstate/history.js/"/>. Die API der Bibliothek ist dabei mehr oder
                    weniger gleich wie die History API, es werden aber Browserunregelmäßigkeiten glattgebügelt. Außerdem
                    nett: Für ältere Browser, die die neuen Methoden der History API überhaupt nicht unterstützen, wird
                    auf Hash-Bang-URLs ausgewichen.
                </p>
            </note>
        </chapter>
    </chapter>

    <chapter id="browser-erkennen-und-browserfeatures-bestimmen" title="Browser erkennen und Browserfeatures bestimmen">
        <p>
            Für allgemeine Informationen des Browsers (wie beispielsweise Browsername, Browserhersteller etc.) steht die
            Eigenschaft <code>navigator</code> des <code>window</code>-Objekts zur verfügung.
        </p>

        <table style="header-row">
            <tr>
                <td>
                    Eigenschaft
                </td>
                <td>
                    Beschreibung
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        appCodeName
                    </code>
                </td>
                <td>
                    Enthält den internen Codenamen des aktuellen Browsers (nicht zuverlässig, da in jedem Browser der
                    Wert Mozilla zurückgegeben wird).
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        appName
                    </code>
                </td>
                <td>
                    Enthält den offiziellen Namen des aktuellen Browsers (nicht zuverlässig, da in jedem Browser der
                    Wert Netscape ausgegeben wird).
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        appVersion
                    </code>
                </td>
                <td>
                    Enthält die Versionsnummer des aktuellen Browsers (nicht zuverlässig).
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        battery
                    </code>
                </td>
                <td>
                    Enthält eine Referenz auf ein Objekt vom Typ <code>BatteryManager</code>, welches den Einstiegspunkt
                    in die Battery Status API bietet.
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        cookieEnabled
                    </code>
                </td>
                <td>
                    Enthält eine Angabe darüber, ob Cookies aktiviert sind oder nicht.
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        geolocation
                    </code>
                </td>
                <td>
                    Enthält eine Referenz auf ein Objekt vom Typ <code>Geolocation</code>, welches den Einstiegspunkt in
                    die Geolocation API bietet.
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        language
                    </code>
                </td>
                <td>
                    Enthält eine Zeichenkette, welche die bevorzugte Sprache des Nutzers angibt. In der Regel ist dies
                    die Sprache, welche auch innerhalb der Oberfläche des jeweiligen Browsers verwendet wird. Falls
                    keine bevorzugte Sprache ermittelt werden konnte, enthält diese Eigenschaft den Wert
                    <code>null</code>.
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        languages
                    </code>
                </td>
                <td>
                    Enthält eine Liste von Zeichenketten, welche die bevorzugten Sprachen des Nutzers angeben, wobei die
                    am meisten bevorzugte Sprache an erster Position steht (und der Sprache entspricht, die auch in der
                    Eigenschaft language enthalten ist).
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        mimeTypes
                    </code>
                </td>
                <td>
                    Enthält eine Liste von Informationen zu MIME-Typen, die vom Browser unterstützt werden.
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        onLine
                    </code>
                </td>
                <td>
                    boolesche Angabe darüber, ob der Browser mit dem Internet verbunden ist oder nicht.
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        platform
                    </code>
                </td>
                <td>
                    Enthält Angaben zum verwendeten Betriebssystem (nicht zuverlässig).
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        plugins
                    </code>
                </td>
                <td>
                    Enthält eine Liste von Informationen zu Plugins, die vom Browser unterstützt werden.
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        product
                    </code>
                </td>
                <td>
                    Enthält den Produktnamen des aktuellen Browsers. Allerdings wird aus Gründen der
                    Abwärtskompatibilität in jedem Browser der Wert Gecko zurückgegeben.
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        productSub
                    </code>
                </td>
                <td>
                    Enthält die Unterbezeichnung des aktuellen Browsers (einen der beiden Werte <code>20030107</code>
                    und <code>20100101</code>).
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        serviceWorker
                    </code>
                </td>
                <td>
                    Enthält eine Referenz auf ein Objekt vom Typ <code>ServiceWorkerContainer</code>, welches den
                    Einstiegspunkt in die Service Worker API bietet.
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        userAgent
                    </code>
                </td>
                <td>
                    Enthält eine Zeichenkette, die den verwendeten Browser identifiziert. Mittlerweile jedoch mit
                    Vorsicht zu genießen (siehe Hinweiskasten).
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        vendor
                    </code>
                </td>
                <td>
                    Enthält Angaben zum Browserhersteller (einen der Werte Apple Computer, Inc. und Google Inc. oder
                    eine leere Zeichenkette).
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        vendorSub
                    </code>
                </td>
                <td>
                    eigentlich für weitere Angaben zum Browserhersteller vorgesehen, enthält aber immer eine leere
                    Zeichenkette.
                </td>
            </tr>
        </table>

        <chapter id="browser-detection" title="Browser Detection">
            <p>
                Das <code>navigator</code>-Objekt wurde vor einiger Zeit noch häufig dazu genutzt, um über die
                Eigenschaft <code>userAgent</code> Rückschlüsse auf den verwendeten Browser zu ziehen, um dadurch zu
                bestimmen, welche Features der entsprechende Browser unterstützt, und abhängig davon bestimmten
                JavaScript-Code auszuführen. Diese Technik nennt man <b>Browser Detection</b> oder auch
                <b>Browser Sniffing</b>.
            </p>

            <p>
                Mittlerweile verwenden die Browser aber keine eindeutigen Werte mehr für diese Eigenschaft, sodass
                man keine Rückschlüsse mehr auf den verwendeten Browser ziehen kann. Beispielsweise liefert die
                Eigenschaft in Chrome den Wert <code> Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5)
                AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.111 Safari/537.36</code>, was alles andere
                als eindeutig ist, weil hier direkt verschiedene Browsernamen auftauchen.
            </p>

            <p>
                Dies ist auch der Grund, warum man heutzutage nicht mehr die Browser-Detection-Technik verwendet, um
                Rückschlüsse darauf zu ziehen, welche Features der Browser unterstützt.
            </p>
        </chapter>

        <chapter id="feature-detection" title="Feature Detection">
            <p>
                Feature Detection, bei der direkt nach dem Feature gesucht wird. Oder anders gesagt: Es ist für einen
                Webentwickler in der Regel gar nicht interessant, welchen konkreten Browser ein Nutzer verwendet,
                sondern viel interessanter, welche Features dieser Browser unterstützt.
            </p>

            <p>
                Beispielsweise kann davon ausgegangen werden, dass ein Browser die neue History API unterstützt, wenn
                das <code>history</code>-Objekt über eine Methode <code>pushState()</code> verfügt. Bei der Feature
                Detection wird also direkt getestet, ob bestimmte JavaScript-Objekte über bestimmte Eigenschaften oder
                Methoden verfügen, die bezeichnend für das entsprechende Feature sind.
            </p>

            <code-block lang="javascript">
                <![CDATA[
                    if(window.history.pushState) {
                      // History API unterstützt
                    } else {
                      // History API nicht unterstützt
                    }
                ]]>
            </code-block>
        </chapter>
    </chapter>

    <chapter id="informationen-des-bildschirms" title="Auf Informationen des Bildschirms zugreifen">
        <p>
            Das der Eigenschaft <code>screen</code> hinterlegte Objekt (vom Typ <code>Screen</code>) enthält
            Informationen bezüglich des Bildschirms.
        </p>

        <img alt="Informationen des Bildschirms" src="js-browser-bom-screen.png"/>

        <table style="header-row">
            <tr>
                <td>
                    Eigenschaft
                </td>
                <td>
                    Beschreibung
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        availTop
                    </code>
                </td>
                <td>
                    Enthält einen Pixelwert, der angibt, wie viel Platz von oben durch feste Bildschirmkomponenten wie
                    Taskleisten etc. eingenommen wird, bzw. enthält genau das Pixel von oben gesehen, ab dem Platz für
                    das Browserfenster zur Verfügung steht.
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        availLeft
                    </code>
                </td>
                <td>
                    Enthält einen Pixelwert, der angibt, wie viel Platz von links durch feste Bildschirmkomponenten wie
                    Taskleisten etc. eingenommen wird, bzw. enthält genau das Pixel von links gesehen, ab dem Platz für
                    das Browserfenster zur Verfügung steht.
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        availHeight
                    </code>
                </td>
                <td>
                    Enthält die maximal verfügbare Bildschirmhöhe in Pixeln minus der Höhe von Komponenten wie immer
                    eingeblendeten Taskleisten etc.
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        availWidth
                    </code>
                </td>
                <td>
                    Enthält die maximal verfügbare Bildschirmbreite in Pixeln minus der Breite von Komponenten wie immer
                    eingeblendeten Taskleisten etc.
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        colorDepth
                    </code>
                </td>
                <td>
                    Enthält die Farbtiefe des Bildschirms.
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        height
                    </code>
                </td>
                <td>
                    Enthält die Höhe des Bildschirms in Pixeln.
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        orientation
                    </code>
                </td>
                <td>
                    Enthält eine Referenz auf ein Objekt vom Typ <code>ScreenOrientation</code>, welches Informationen
                    zur Ausrichtung des Bildschirms bereitstellt und ein Bestandteil der Screen Orientation API
                    <a href="http://www.w3.org/TR/screen-orientation/"/> ist.
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        pixelDepth
                    </code>
                </td>
                <td>
                    Enthält die Pixeltiefe des Bildschirms.
                </td>
            </tr>
            <tr>
                <td>
                    <code>
                        width
                    </code>
                </td>
                <td>
                    Enthält die Breite des Bildschirms in Pixeln.
                </td>
            </tr>
        </table>
    </chapter>

    <chapter id="quellen" title="Quellen">
        <tip>
            <b>(BUCH)</b>
            978-3836256971, "JavaScript", Philip Ackermann, 2019
        </tip>
    </chapter>
</topic>