<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic id="html-embedded"
       title="Eingebettete Inhalte"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd">
    <var name="id_prefix"></var>
    <show-structure depth="2" for="chapter,procedure"/>
    <link-summary rel="%id_prefix%-description"/>

    <!-- TODO -->
    <chapter id="introduction" title="Einleitung">
        <p id="%id_prefix%-description">
            ...
        </p>
    </chapter>

    <chapter id="overview" title="Übersicht der HTML-Elemente">
        <table id="%id_prefix%-overview-table" style="header-row">
            <tr>
                <td>Element</td>
                <td>Beschreibung</td>
            </tr>
            <tr>
                <td>
                    <a href="html-embedded.topic#tag-embed">
                        <code>&lt;embed&gt;</code>
                    </a>,
                    <a href="html-embedded.topic#tag-object">
                        <code>&lt;object&gt;</code>
                    </a>,
                    <a href="html-embedded.topic#tag-iframe">
                        <code>&lt;iframe&gt;</code>
                    </a>
                </td>
                <td>
                    Einbinden von aktiven Elementen wie PDF-Dokumenten, Flash-Animationen, Java-Applets, Word-Dokumenten
                    und vielem anderen mehr.
                </td>
            </tr>
            <tr>
                <td>
                    <a href="html-embedded.topic#tag-facedframe">
                        <code>&lt;facedframe&gt;</code>
                    </a>
                </td>
                <td>
                    ...
                </td>
            </tr>
            <tr>
                <td>
                    <a href="html-embedded.topic#tag-picture">
                        <code>&lt;picture&gt;</code>
                    </a>
                </td>
                <td>
                    Aus mehreren Bildquellen das passende Bild laden
                </td>
            </tr>
            <tr>
                <td>
                    <a href="html-embedded.topic#tag-source">
                        <code>&lt;source&gt;</code>
                    </a>
                </td>
                <td>
                    Angabe von alternativen Medienquellen für das <code>picture</code>-, <code>video</code>- und
                    <code>audio</code>-Element.
                </td>
            </tr>
            <tr>
                <td>
                    <a href="html-embedded.topic#tag-portal">
                        <code>&lt;portal&gt;</code>
                    </a>
                </td>
                <td>
                    ...
                </td>
            </tr>
        </table>
    </chapter>

    <chapter id="tag-description" title="Genauere Beschreibung">
        <chapter id="tag-embed" title="Das embed-Element">
            <p>
                Das <code>embed</code>-Element wird zwar schon lange von allen gängigen Browsern unterstützt, aber
                trotzdem gehörte es erst relativ spät zum Standard. Es kann für alle möglichen aktiven Elemente
                verwendet werden, wofür in der Regel eine Erweiterung (Browser-Plug-in) notwendig ist. Mit
                <code>embed</code> werden Objekte in das HTML-Dokument eingebettet.
            </p>

            <!-- @formatter:off -->
            <code-block lang="html">
                <![CDATA[
                    <embed type="application/pdf" src="leseprobe.pdf" width="640" height="480"
                           title="Eine PDF-Leseprobe für das Buch Grundkurs Webdesign">
                ]]>
            </code-block>

            <note>
                Da das <code>embed</code>-Element ein alleinstehendes Element ohne schließendes Tag ist, kann hier
                kein alternativer Text verwendet werden, der angezeigt wird, wenn der Webbrowser mit dem Inhalt
                nichts anfangen kann, weil z.B. keine Erweiterung dafür vorhanden oder installiert ist.
            </note>

            <tip>
                Mehr zum <code>embed</code>-Element hier:
                <a href="https://developer.mozilla.org/de/docs/Web/HTML/Element/embed">MDN Web Docs</a>
            </tip>
        </chapter>

        <chapter id="tag-object" title="Das object-Element">
            <p>
                Auch mit dem <code>object</code>-Element können aktive Inhalte in das HTML-Dokument eingebunden
                werden, die nicht vom Webbrowser direkt, sondern über Erweiterungen unterstützt werden. Da
                <code>&lt;objet&gt;</code> ein schließendes Tag hat, ist es mit diesem HTML-Element möglich, einen
                alternativen Inhalt als Fallback anzugeben, der angezeigt wird, wenn der Webbrowser mit dem Inhalt
                nichts anfangen kann. Bis auf diese Unterschiede ist <code>object</code> dem <code>embed</code>-Element
                sehr ähnlich.
            </p>

            <!-- @formatter:off -->
            <code-block lang="html">
                <![CDATA[
                    <object width="100%" height="480" type="application/pdf" data="leseprobe.pdf">
                        Das PDF kann nicht wiedergegeben werden. Plug-in fehlt.
                        <br />
                        <a href="leseprobe.pdf" download>Leseprobe herunterladen</a>
                    </object>
                ]]>
            </code-block>

            <tip>
                Mehr zum <code>object</code>-Element hier:
                <a href="https://developer.mozilla.org/de/docs/Web/HTML/Element/object">MDN Web Docs</a>
            </tip>
        </chapter>

        <chapter id="tag-iframe" title="Das iframe-Element">
            <!-- TODO -->

            <tip>
                Mehr zum <code>iframe</code>-Element hier:
                <a href="https://developer.mozilla.org/de/docs/Web/HTML/Element/iframe">MDN Web Docs</a>
            </tip>
        </chapter>

        <chapter id="tag-facedframe" title="Das facedframe-Element">
            <!-- TODO -->

            <tip>
                Mehr zum <code>facedframe</code>-Element hier:
                <a href="https://developer.mozilla.org/de/docs/Web/HTML/Element/facedframe">MDN Web Docs</a>
            </tip>
        </chapter>

        <chapter id="tag-picture" title="Das picture-Element">
            <p>
                Das <code>picture</code>-Element wird verwendet, um eine oder mehrere Bildquellen für ein Bild
                anzugeben. Es ermöglicht dem Browser, basierend auf den angegebenen Bedingungen, das am besten geeignete
                Bild auszuwählen. Mit dem <code>picture</code>-Element können verschiedene Versionen desselben Bildes
                und verschiedene Bildformate für unterschiedliche Bildschirmgrößen und -auflösungen bereitgestellt
                werden.
            </p>

            <!-- @formatter:off -->
            <code-block lang="html">
                <![CDATA[
                    <picture>
                        <source media="(max-width: 600px)" srcset="bilder/birnen-quadrat.webp">
                        <source media="(max-width: 1023px)" srcset="bilder/birnen-rechteck.webp">
                        <source media="(min-width: 1024px)" srcset="bilder/birnen-pano.webp">
                        <!-- Fallback -->
                        <img src="bilder/birnen-pano.webp" alt="Birnen mit Glas">
                    </picture>
                ]]>
            </code-block>
            <!-- @formatter:on -->

            <note>
                Bietet man verschiedene Dateiformate an und möchte ein spezielles Format wie z.B. AVIF bevorzugen, dann
                muss jenes Format als erstes angegeben werden. Der Browser wird dann das erste Format verwenden, das er
                unterstützt.
            </note>

            <note>
                <p>
                    <b>
                        Art Direction
                    </b>
                </p>

                <p>
                    Das Austauschen passender Bilder für verschiedene Bildschirmgrößen und -auflösungen wird auch als
                    <i>Art Direction</i> bezeichnet. Es ist sehr hilfreich, weil es die visuelle Darstellung von Bildern
                    und Grafiken verbessern kann. Mit dem <code>picture</code>-Element kann jeh nach Bildschirmgröße
                    auch ein anderer Ausschnitt des Bildes angezeigt werden. Theoretisch könnte man auch ganz andere
                    Bilder verwenden, statt nur die verschiedenen Ausschnitte anzubieten. Dafür ist das
                    <code>picture</code>-Element aber nicht gedacht, denn korrekterweise muss man alle verwendeten
                    Bilddetails mit einem <code>alt</code>-Attribut am Ende des <code>img</code>-Elements beschreiben.
                </p>
            </note>

            <tip>
                Mehr zum <code>picture</code>-Element hier:
                <a href="https://developer.mozilla.org/de/docs/Web/HTML/Element/picture">MDN Web Docs</a>
            </tip>
        </chapter>

        <chapter id="tag-source" title="Das source-Element">
            <p>
                Das <code>source</code>-Element wird verwendet, um alternative Medienressourcen für die Elemente
                <code>picture</code>, <code>video</code> und <code>audio</code> anzugeben. Es ermöglicht dem Browser,
                basierend auf den angegebenen Bedingungen, die am besten geeignete Ressource auszuwählen.
            </p>

            <!-- @formatter:off -->
            <code-block lang="html">
                <![CDATA[
                    <picture>
                        <source media="(max-width: 600px)"
                                srcset="bilder/birnen-quadrat.webp 1x,
                                    bilder/birnen-quadrat@2x.webp 2x">
                        <source media="(max-width: 1023px)"
                                srcset="bilder/birnen-rechteck.webp 1x,
                                    bilder/birnen-rechteck@2x.webp 2x">
                        <source media="(min-width: 1024px)"
                                srcset="bilder/birnen-pano.webp 1x,
                                    bilder/birnen-pano@2x.webp 2x">
                        <!-- Fallback für alte Browser -->
                        <img src="bilder/birnen-pano.webp" alt="Birnen mit Glas">
                    </picture>
                ]]>
            </code-block>
            <!-- @formatter:on -->

            <deflist>
                <def title="srcset">
                    <p>
                        Das <code>srcset</code>-Attribut ermöglicht es, mehrere Medienquellen für verschiedene
                        Bildschirmauflösungen und -größen anzugeben. Der Browser wählt dann automatisch das am besten
                        geeignete Medienelement aus, basierend auf der aktuellen Bildschirmauflösung und den angegebenen
                        Bedingungen. Dies verbessert die Ladezeiten und die Bildqualität/Videoqualität auf verschiedenen
                        Geräten.
                    </p>

                    <tip>
                        Verwendet wird das <code>srcset</code>-Attribut wie beim <code>img</code>-Element:
                        <a href="html-image-and-multimedia.topic#tag-img"/>
                    </tip>
                </def>
                <def title="sizes">
                    <p>
                        Das <code>sizes</code>-Attribut gibt an, welche Breite der Browser für verschiedene Layouts
                        verwenden soll. Es wird in Kombination mit dem <code>srcset</code>-Attribut verwendet, um dem
                        Browser zu helfen, die am besten geeignete Quelldatei basierend auf der aktuellen
                        Bildschirmgröße und den angegebenen Bedingungen auszuwählen. Dies verbessert die Ladezeiten und
                        die Bildqualität/Videoqualität auf verschiedenen Geräten.
                    </p>

                    <tip>
                        Verwendet wird das <code>sizes</code>-Attribut wie beim <code>img</code>-Element:
                        <a href="html-image-and-multimedia.topic#tag-img"/>
                    </tip>
                </def>
                <def title="media">
                    <p>
                        Hiermit werden Medienabfragen definiert, die bestimmen, ob das <code>source</code>-Element für
                        das <code>picture</code>-Element verwendet wird. Wenn die Medienabfrage zutrifft, wird das
                        Medienelement geladen, andernfalls wird das nächste <code>source</code>-Element überprüft.
                    </p>
                </def>
                <def title="type">
                    <p>
                        Das <code>type</code>-Attribut gibt den MIME-Typ des Medieninhalts an, der von der URL im
                        <code>src</code>-Attribut referenziert wird. Es wird verwendet, um dem Browser mitzuteilen,
                        welche Art von Medieninhalten er erwarten kann, bevor er die URL abruft.
                    </p>
                </def>
            </deflist>

            <tip>
                Mehr zum <code>source</code>-Element hier:
                <a href="https://developer.mozilla.org/de/docs/Web/HTML/Element/source">MDN Web Docs</a>
            </tip>
        </chapter>

        <chapter id="tag-portal" title="Das portal-Element">
            <!-- TODO -->

            <tip>
                Mehr zum <code>portal</code>-Element hier:
                <a href="https://developer.mozilla.org/de/docs/Web/HTML/Element/portal">MDN Web Docs</a>
            </tip>
        </chapter>
    </chapter>

    <chapter id="more" title="Weiteres">
        <chapter id="_lt_iframe_gt_lt_object_gt_oder_lt_embed_gt_"
                 title="&lt;iframe&gt;, &lt;object&gt; oder &lt;embed&gt;">
            Mit <code>iframe</code>, <code>object</code> und <code>embed</code> kann dasselbe realisiert werden. In
            der Praxis sollte eher <code>object</code> als <code>embed</code> verwendet werden, weil <code>object</code>
            ein schließendes Tag hat und somit ein Fallback angegeben werden kann. <code>iframe</code> wird
            hauptsächlich fürs Einbetten von HTML-Dokumenten verwendet. <code>iframe</code> hat noch ein paar nützliche
            Attribute (besonders <code>sandbox</code>), die es mit <code>object</code> und <code>embed</code> nicht
            gibt.
        </chapter>
    </chapter>

    <chapter id="quellen" title="Quellen">
        <tip>
            <b>(BUCH)</b>
            978-3836297288, "HTML und CSS - Das umfassende Handbuch", Jürgen Wolf, 2023
        </tip>
    </chapter>
</topic>