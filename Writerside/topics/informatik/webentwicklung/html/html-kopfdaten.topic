<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic id="html-kopfdaten"
       title="Kopfdaten"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd">
    <var name="id_prefix"></var>
    <show-structure depth="2" for="chapter,procedure"/>
    <link-summary rel="%id_prefix%-description"/>

    <!-- TODO -->
    <chapter id="introduction" title="Einleitung">
        <p id="%id_prefix%-description">
            Im Kopfbereich eines HTML-Dokuments (zwischen <code>&lt;head&gt;</code> und <code>&lt;/head&gt;</code>)
            können verschiedene Elemente hinzugefügt werden, die den Inhalt und die Darstellung der Webseite steuern
            sowie Beziehungen zum Browser und anderen Dokumenten herstellen. Außer dem <code>title</code>-Element werden
            diese Inhalte nicht im Browser angezeigt. Nach einer Übersicht über diese Elemente folgt die Beschreibung
            einzelner HTML-Elemente.
        </p>
    </chapter>

    <chapter id="overview" title="Übersicht der HTML-Elemente">
        <table id="%id_prefix%-overview-table" style="header-row">
            <tr>
                <td>Element</td>
                <td>Beschreibung</td>
            </tr>
            <tr>
                <td>
                    <a href="html.topic#tag-head">
                        <code>&lt;head&gt;</code>
                    </a>
                </td>
                <td>
                    Beinhaltet Metadaten und Links zu externen Ressourcen wie Stylesheets und Skripten.
                </td>
            </tr>
            <tr>
                <td>
                    <a href="html-kopfdaten.topic#tag-title">
                        <code>&lt;title&gt;</code>
                    </a>
                </td>
                <td>
                    Der Titel des Dokuments, der im Browser-Tab angezeigt wird.
                </td>
            </tr>
            <tr>
                <td>
                    <a href="html-kopfdaten.topic#tag-link">
                        <code>&lt;link&gt;</code>
                    </a>
                </td>
                <td>
                    Setzt logische Links des HTML-Dokuments zu anderen Dateien, die eingebunden werden sollen.
                </td>
            </tr>
            <tr>
                <td>
                    <a href="html-kopfdaten.topic#tag-meta">
                        <code>&lt;meta&gt;</code>
                    </a>
                </td>
                <td>
                    Setzt die Metadaten wie z.B. Schlüsselwörter, Beschreibungen oder den Zeichensatz für das
                    HTML-Dokument.
                </td>
            </tr>
            <tr>
                <td>
                    <a href="html-kopfdaten.topic#tag-style">
                        <code>&lt;style&gt;</code>
                    </a>
                </td>
                <td>
                    Setzt die lokalen Stylesheet-Regeln für das HTML-Dokument.
                </td>
            </tr>
            <tr>
                <td>
                    <a href="html-kopfdaten.topic#tag-base">
                        <code>&lt;base&gt;</code>
                    </a>
                </td>
                <td>
                    Setzt Basis-URLs/Ziele für alle relativen URLs in einer Webseite.
                </td>
            </tr>
        </table>
    </chapter>

    <chapter id="tag-description" title="Genauere Beschreibung">
        <chapter id="tag-title" title="Das title-Element">
            <p>
                In jedem HTML-Dokument muss ein Titel angegeben werden, der im Browser-Tab angezeigt wird. Der Titel
                wird zwischen den <code>&lt;title&gt;</code>- und <code>&lt;/title&gt;</code>-Tags eingefügt. Es kann
                nur ein <code>&lt;title&gt;</code>-Element pro Dokument geben.
            </p>

            <warning>
                <p>
                    <b>
                        Invalides HTML
                    </b>
                </p>

                <p>
                    Ein HTML-Dokument ohne <code>&lt;title&gt;</code>-Element ist nicht valide und generiert somit auch
                    von einem Validator eine Fehlermeldung.
                </p>
            </warning>

            <p>
                Der Titel dient nicht nur zur Darstellung im Browser-Tab, sondern auch als Name beim Setzen von
                Lesezeichen und ist bei Suchmaschinen von großer Bedeutung. Der Titel ist oft das Erste, was Besucher
                bei Suchergebnissen sehen und wirkt sich auf das Ranking in der Trefferliste aus. Für die
                <a href="seo.topic">Suchmaschinenoptimierung (SEO)</a> sollte der Titel ein bis zwei Schlüsselwörter
                enthalten und eine Länge von 50 bis 60 Zeichen nicht überschreiten.
            </p>

            <note>
                <p>
                    <b>
                        SERP Snippet Generator
                    </b>
                </p>

                <p>
                    Suchergebnisse können für Testzwecke mit einem sogenannten SERP Snippet Generator (beispielsweise
                    <a href="https://www.seobility.net/en/serp-snippet-generator/"/>) erstellen.
                </p>
            </note>

            <tip>
                Mehr zum <code>title</code>-Element hier:
                <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/title">MDN Web Docs</a>
            </tip>
        </chapter>

        <chapter id="tag-link" title="Das link-Element">
            <p>
                Das <code>link</code>-Element ist ein selbstschließendes Tag und stellt eine Beziehung zwischen dem
                aktuellen Dokument und einer externen Ressource her. In der Praxis wird das <code>link</code>-Element
                häufig verwendet, um eine externe CSS-Datei in das aktuelle Dokument einzubinden. Das
                <code>&lt;link&gt;</code>-Tag kann mehrfach im <code>&lt;head&gt;</code>-Element verwendet werden, um
                mehrere Ressourcen einzubinden.
            </p>

            <!-- @formatter:off -->
            <code-block collapsed-title="Beispiel" collapsible="true" lang="html">
                <![CDATA[
                    <!doctype html>
                    <html lang="de">
                        <head>
                            <title>Logische Verlinkung mit link</title>
                            <link rel="stylesheet" type="text/css" href="style.css">
                            <meta charset="UTF-8">
                        </head>
                        <body>
                            <p>Ein einfacher Absatztext!</p>
                        </body>
                    </html>
                ]]>
            </code-block>
            <!-- @formatter:on -->

            <note>
                Einige Werte des <code>rel</code>-Attributs sind in der Praxis nur bedingt sinnvoll, da nicht festgelegt
                ist, wie oder ob Webbrowser diese logischen Verknüpfungen anzeigen. Für Linktypen wie <code>next</code>,
                <code>prev</code>, <code>first</code>, <code>last</code>, <code>author</code>, <code>help</code>,
                <code>search</code>, <code>sidebar</code> oder <code>license</code> ist es daher ratsamer, selbst
                Schaltflächen oder Texte für Hyperlinks zu erstellen. Mit dem globalen Attribut <code>title</code> kann
                eine Beschriftung festgelegt werden, die angezeigt wird, wenn ein Webbrowser diese Verknüpfungen
                unterstützt. Nicht unterstützte Verknüpfungen werden ignoriert.
            </note>

            <deflist>
                <def title="href">
                    Die URL der verlinkten Ressource.
                </def>
                <def title="hreflang">
                    Definiert die Sprache der zu verknüpfenden Ressource.
                </def>
                <def title="media">
                    Um Anzugeben, für welches Medium/Gerät die Zielressource optimiert ist. Dieses Attribut wird z.B.
                    gerne mit Stylesheets verwendet, um mehrere Styles für verschiedene Medientypen zu definieren.
                </def>
                <def title="rel">
                    <p>
                        Der Beziehungstyp zwischen dem aktuellen Dokument und der verlinkten Ressource. Der Wert des
                        <code>rel</code>-Attributs hängt von der Art der verlinkten Ressource ab. Beispiele:
                    </p>

                    <table style="header-column">
                        <tr>
                            <td>
                                <code>alternate</code>
                            </td>
                            <td>
                                Verweist auf eine alternative Präsentationsform des Dokuments. Dies wird z.B. verwendet,
                                um ein alternatives Stylesheet zu verlinken.
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <code>author</code>
                            </td>
                            <td>
                                Verlinkt zu einer anderen Seite mit Informationen über den Autor des aktuellen
                                Dokuments. Es kann auch eine andere Ressource wie z.B. einen
                                <code>mailto:</code>-Link zu einer E-Mail-Adresse des Autors verwendet werden.
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <code>archives</code>
                            </td>
                            <td>
                                Hiermit kann zu einer vorherigen Version bestimmter Dokumente, wie z.B. bei einem Archiv
                                eines Blogs, verlinkt werden.
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <code>help</code>
                            </td>
                            <td>
                                Verlinkt zu einem Hilfsdokument.
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <code>icon</code>
                            </td>
                            <td>
                                Hiermit kann der Webseite ein Favicon zugwiesen werden. Dieses wird im Browser-Tab
                                angezeigt und in der Lesezeichenleiste, wenn die Seite als Lesezeichen gespeichert wird.
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <code>license</code>
                            </td>
                            <td>
                                Verknüpft die aktuelle Seite mit einer Seite, auf der die Nutzungsrechte für die Inhalte
                                der aktuellen Seite enthalten sind.
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <code>next, prev</code>
                            </td>
                            <td>
                                Diese Angaben werden verwendet, um eine Verknüpfung von der aktuellen Seite zur nächsten
                                (<code>next</code>) bzw. vorhergehenden Seite (<code>prev</code>) herzustellen.
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <code>prefetch</code>
                            </td>
                            <td>
                                Damit wird eine externe Webseite mit der aktuellen Seite verknüpft, die vermutlich vom
                                Benutzer als Nächstes aufgerufen werden könnte. Dadurch könnte der Browser diese Seite
                                bereits in einen Zwischenspeicher laden, obwohl der Benutzer noch die aktuelle Seite
                                betrachtet. Wenn der Benutzer diese Seite dann öffnet, kann sie aus dem Zwischenspeicher
                                schneller geladen werden.
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <code>pingback</code>
                            </td>
                            <td>
                                Hier kann die Webseite eines Pingback-Servers angegeben werden, was gerade bei Blogs
                                sehr nützlich ist, um Pingbacks für das aktuelle Dokument zu behandeln.
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <code>search</code>
                            </td>
                            <td>
                                Verlinkt das aktuelle Dokument mit einem anderen Dokument, in dem die Suche über die
                                ganze Website möglich ist.
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <code>stylesheet</code>
                            </td>
                            <td>
                                Verweist auf ein Stylesheet.
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <code>tag</code>
                            </td>
                            <td>
                                Ein einfaches Tag als verlinkte Ressource, das für das aktuelle Dokument gilt.
                            </td>
                        </tr>
                    </table>
                </def>
                <def title="size">
                    Gibt die Größe(n) für die zu verlinkende Ressource an. Macht nur Sinn, wenn das Attribut
                    <code>rel="icon"</code> ist. Beispiel: <code>size="16x16"</code> (1 Größe);
                    <code>size="16x16 32x32"</code> (2 Größen) oder <code>size="any"</code> (beliebige Größe).
                </def>
                <def title="type">
                    Damit wird der MIME-Typ für das zu verlinkende Dokument angegeben (z.B. <code>text/css</code> für
                    eine CSS-Datei).
                </def>
            </deflist>

            <tip>
                Mehr zum <code>link</code>-Element hier:
                <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link">MDN Web Docs</a>
            </tip>
        </chapter>

        <chapter id="tag-meta" title="Das meta-Element">
            <p>
                Ein <code>&lt;meta&gt;</code>-Element enthält normalerweise mindestens zwei Attribute. Diese Attribute
                können entweder eine Kombination aus <code>name</code> und <code>content</code> oder eine Kombination
                aus <code>http-equiv</code> und <code>content</code> sein. Es gibt auch eine spezielle Variante für die
                Angabe der Zeichencodierung.
            </p>

            <list type="bullet">
                <li>
                    <p>
                        <b>
                            <code>name</code>/<code>content</code>-Kombinationen - die frei definierbaren Metadaten
                        </b>
                    </p>

                    <p>
                        Das <code>meta</code>-Element mit dem <code>name</code>-Attribut kann beliebige Informationen im
                        <code>content</code>-Attribut enthalten. Standardisierte
                        <code>name</code>/<code>content</code>-Kombinationen in HTML sind für Dokumentinformationen
                        gedacht, nicht für persönliche Daten.
                    </p>

                    <!-- @formatter:off -->
                    <code-block lang="html">
                        <![CDATA[
                            <meta name="author" content="Max Mustermann">
                            <meta name="keywords" content="Metadaten, meta, html">
                        ]]>
                    </code-block>
                    <!-- @formatter:on -->
                </li>
                <li>
                    <p>
                        <b>
                            <code>http-equiv</code>/<code>content</code>-Kombinationen – HTTP-Äquivalente
                        </b>
                    </p>

                    <p>
                        <code>http-equiv</code>-Attribute im <code>meta</code>-Tag werden verwendet, um mit dem
                        Webserver zu kommunizieren. Da Webserver jedoch keine HTML-Dokumente parsen, liegt es am
                        Browser, diese Direktiven zu verarbeiten. Ein Beispiel für die Verwendung von
                        <code>http-equiv</code>, um eine Seite alle 5 Sekunden zu aktualisieren, ist unten gezeigt:
                    </p>

                    <!-- @formatter:off -->
                    <code-block lang="html">
                        <![CDATA[
                            <meta http-equiv="refresh" content="5">
                        ]]>
                    </code-block>
                    <!-- @formatter:on -->
                </li>
                <li>
                    <p>
                        <b>
                            Zeichencodierung für das HTML-Dokument festlegen
                        </b>
                    </p>

                    <p>
                        Neben den Attributpaaren <code>name</code>/<code>content</code> und <code>http-equiv</code>/
                        <code>content</code> gibt es eine dritte Möglichkeit, die Zeichencodierung festzulegen:
                    </p>

                    <!-- @formatter:off -->
                    <code-block lang="html">
                        <![CDATA[
                            <meta charset="UTF-8">
                        ]]>
                    </code-block>
                    <!-- @formatter:on -->

                    <p>
                        Dies stellt sicher, dass Sonderzeichen korrekt dargestellt werden. UTF-8 ist weit verbreitet und
                        sollte standardmäßig verwendet werden.
                    </p>
                </li>
            </list>

            <deflist>
                <def title="content">
                    <p>
                        Übergibt den Wert, der mit dem Attribut von <code>http-equiv</code> oder <code>name</code>
                        verbunden ist.
                    </p>
                </def>
                <def title="charset">
                    <p>
                        Legt die Zeichencodierung für das HTML-Dokument fest.
                    </p>
                </def>
                <def title="http-equiv">
                    <p>
                        Wird für den HTTP-Response-Header verwendet. Beispielsweise kann hiermit eine Webseite nach
                        einer gewissen Zeit aktualisiert oder auf eine andere URL umgeleitet werden. Einige mögliche
                        Werte sind:
                    </p>

                    <list type="bullet">
                        <li>
                            <code>content-language</code>
                        </li>
                        <li>
                            <code>content-type</code>
                        </li>
                        <li>
                            <code>default-style</code>
                        </li>
                        <li>
                            <code>refresh</code>
                        </li>
                    </list>
                </def>
                <def title="name">
                    <p>
                        Definiert einen Namen für die Metadaten. Einige Standardwerte sind:
                    </p>

                    <list type="bullet">
                        <li>
                            <code>viewport</code>
                        </li>
                        <li>
                            <code>theme-color</code>
                        </li>
                        <li>
                            <code>robots</code>
                        </li>
                        <li>
                            <code>application-name</code>
                        </li>
                        <li>
                            <code>author</code>
                        </li>
                        <li>
                            <code>description</code>
                        </li>
                        <li>
                            <code>generator</code>
                        </li>
                        <li>
                            <code>keywords</code>
                        </li>
                    </list>
                </def>
            </deflist>

            <tip>
                Mehr zum <code>meta</code>-Element hier:
                <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta">MDN Web Docs</a>
            </tip>
        </chapter>

        <chapter id="tag-style" title="Das style-Element">
            <p>
                Mit dem <code>style</code>-Element kann CSS direkt im HTML-Dokument definiert werden. Zwischen den
                <code>&lt;style&gt;</code>- und <code>&lt;/style&gt;</code>-Tags wird der CSS-Code eingefügt. Jedes
                HTML-Dokument kann mehrere <code>style</code>-Elemente enthalten.
            </p>

            <!-- @formatter:off -->
            <code-block collapsed-title="Beispiel" collapsible="true" lang="html">
                <![CDATA[
                    <!doctype html>
                    <html lang="de">
                        <head>
                            <style type="text/css">
                                p {
                                    width: 300px;
                                    padding: 25px;
                                    border: 1px solid #323232;
                                    background-color: #ddd0c8;
                                    text-align: center;
                                    color: #323232;
                                }
                            </style>
                            <title>Das style-Element im Einsatz</title>
                            <meta charset="UTF-8">
                        </head>
                        <body>
                            <p>Ein einfacher Absatztext!</p>
                        </body>
                    </html>
                ]]>
            </code-block>

            <deflist>
                <def title="media">
                    Um Anzugeben, für welches Medium/Gerät der CSS-Code optimiert ist. Dies kann verwendet werden, um
                    mehrere Styles für verschiedene Medientypen zu definieren.
                </def>
                <def title="type">
                    Der MIME-Typ des Stylesheets. Der Standardwert ist <code>text/css</code> und kann somit
                    mittlerweile auch weggelassen werden.
                </def>
            </deflist>

            <tip>
                Mehr zum <code>style</code>-Element hier:
                <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style">MDN Web Docs</a>
            </tip>
        </chapter>

        <chapter id="tag-base" title="Das base-Element">
            <p>
                Das <code>base</code>-Element definiert eine Basis-URL oder ein Basisziel für alle im HTML-Dokument
                referenzierten Dateien, wie Bilder, Stylesheets, Skripte oder andere HTML-Dokumente. Dadurch können
                relative oder absolute Adressen verwendet werden, als ob sich die Dateien auf demselben Host wie das
                HTML-Dokument befinden.
            </p>

            <!-- @formatter:off -->
            <code-block collapsed-title="Beispiel" collapsible="true" lang="html">
                <![CDATA[
                    <!doctype html>
                    <html lang="de">
                        <head>
                            <title>Basis-URL definieren</title>
                            <base href="https://static.rheinwerk-verlag.de/"
                                  target="_blank">
                            <meta charset="UTF-8">
                        </head>
                        <body>
                            <img src="favicon-152.png" alt="Logo">
                        </body>
                    </html>
                ]]>
            </code-block>
            <!-- @formatter:on -->

            <p>
                Im obigen Beispiel wird die Basis-URL auf <path>https://static.rheinwerk-verlag.de/</path> gesetzt.
                Dadurch wird das Bild <path>favicon-152.png</path> relativ zur Basis-URL geladen, also von
                <path>https://static.rheinwerk-verlag.de/favicon-152.png</path>.
            </p>

            <warning>
                In einem HTML-Dokument kann es nur ein base-Element geben, und es muss zwischen
                <code>&lt;head&gt;</code> und <code>&lt;/head&gt;</code> geschrieben werden. Wenn Sie trotzdem mehrere
                <code>base</code>-Elemente definieren sollten, wird der Webbrowser gewöhnlich nur das erste
                <code>href</code>- und das erste <code>target</code>-Attribut verwenden. Alle anderen würden ignoriert.
                Die Validitätsprüfung von HTML würde allerdings einen Fehler zurückgeben, wenn mehr als ein
                <code>base</code>-Element verwendet wird.
            </warning>

            <deflist>
                <def title="href">
                    Die URL, die als Basis für alle relativen URLs im Dokument verwendet wird.
                </def>
                <def title="target">
                    <p>
                        Legt das Zielfenster fest, in dem das Verweisziel angezeigt werden soll.
                    </p>

                    <table style="header-column">
                        <tr>
                            <td>
                                <code>_self</code>
                            </td>
                            <td>
                                Das Verweisziel wird im gleichen Fenster oder Tab geöffnet.
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <code>_blank</code>
                            </td>
                            <td>
                                Das Verweisziel wird in einem neuen Fenster oder Tab geöffnet.
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <code>_parent</code>
                            </td>
                            <td>
                                Das Verweisziel wird im übergeordneten Frame geöffnet. Wenn kein Frame vorhanden ist,
                                wird das Verweisziel im gleichen Fenster oder Tab geöffnet und verhält sich somit wie
                                <code>_self</code>.
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <code>_top</code>
                            </td>
                            <td>
                                Lädt den Verweis der Datei in dem am höchsten in der Hierarchie stehenden Fenster. Gibt
                                es gar kein höher stehendes Eltern-Fenster, verhält sich diese Option
                                wie <code>_self</code>.
                            </td>
                        </tr>
                    </table>
                </def>
            </deflist>

            <tip>
                Mehr zum <code>base</code>-Element hier:
                <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base">MDN Web Docs</a>
            </tip>
        </chapter>
    </chapter>

    <chapter id="more" title="Weiteres">
        <chapter id="meta-viewport" title="Den Viewport einstellen">
            <p>
                Der Viewport ist der Bereich des Browserfensters, in dem Webinhalte angezeigt werden. Um eine korrekte
                Darstellung auf mobilen Geräten zu gewährleisten und eine automatische Verkleinerung zu verhindern, wird
                das folgende <code>meta</code>-Element verwendet:
            </p>

            <!-- @formatter:off -->
            <code-block lang="html">
                <![CDATA[
                    <meta name="viewport"
                          content="width=device-width, initial-scale=1.0, shrink-to-fit=no">
                ]]>
            </code-block>
            <!-- @formatter:on -->

            <p>
                Dieses Element stellt sicher, dass die Webseite die tatsächliche Breite des Geräts verwendet, mit einer
                normalen Zoomstufe dargestellt wird und auf dem iPad im Split View nicht verkleinert wird.
            </p>

            <list type="bullet">
                <li>
                    <code>width=device-width</code>: Setzt die Breite des Viewports auf die Breite des Geräts, sodass
                    die Webseite die volle Breite des Bildschirms nutzt.
                </li>
                <li>
                    <code>initial-scale=1.0</code>: Setzt den anfänglichen Zoomlevel auf 1:1, sodass die Seite in der
                    normalen Zoomstufe angezeigt wird.
                </li>
                <li>
                    <code>shrink-to-fit=no</code>: Verhindert, dass der Safari-Browser auf dem iPad die Webseite im
                    Split View verkleinert, sodass der Inhalt in der beabsichtigten Größe bleibt.
                </li>
            </list>
        </chapter>

        <chapter id="meta-crawler" title="Nützliche Metadaten für einen Webcrawler angeben">
            <p>
                Metadaten für Webcrawler sind Empfehlungen, die Suchmaschinen nicht zwingend befolgen müssen. Um
                Anweisungen für Webcrawler zu geben, wird das <code>meta</code>-Element mit dem
                <code>name</code>-Attribut <code>robots</code> und dem <code>content</code>-Attribut, das die
                Anweisungen enthält, verwendet. Beispiele:
            </p>

            <list type="bullet">
                <li>
                    <code>&lt;meta name="robots" content="index,follow"&gt;</code>: Erlaubt dem Webcrawler, die Seite
                    zu indizieren und den Links zu folgen.
                </li>
                <li>
                    <code>&lt;meta name="robots" content="noindex"&gt;</code>: Verhindert, dass die Seite indiziert
                    wird.
                </li>
                <li>
                    <code>&lt;meta name="robots" content="nofollow"&gt;</code>: Erlaubt die Indizierung, verhindert aber
                    das Folgen der Links.
                </li>
            </list>
        </chapter>

        <chapter id="meta-seo" title="Hilfreiche Metadaten für Suchmaschinen">
            <p>
                Für Suchmaschinen sind die <code>name</code>-Werte <code>keywords</code> und <code>description</code>
                von Bedeutung. Der Wert <code>keywords</code> hat an Bedeutung verloren, da er oft missbraucht wurde.
                Wenn Schlüsselwörter angegeben werden, müssen sie durch Kommata getrennt werden, z.B.:
            </p>

            <!-- @formatter:off -->
            <code-block lang="html">
                <![CDATA[
                    <meta name="keywords" content="html, meta, keywords">
                ]]>
            </code-block>
            <!-- @formatter:on -->

            <p>
                Wichtiger ist der Beschreibungstext <code>description</code>, der neben dem Titel das Erste ist, was
                Nutzer in Suchmaschinen sehen. Die Beschreibung sollte kurz und präzise sein (150-250 Zeichen).
                Beispiel:
            </p>

            <!-- @formatter:off -->
            <code-block lang="html">
                <![CDATA[
                    <meta name="description"
                          content="Eine Beschreibung sollte möglichst kurz und präzise sein. Hier sollte in 2-3 Sätzen zusammengefasst werden, worum es auf dieser Seite geht. Zu viele Zeichen werden gekürzt.">
                ]]>
            </code-block>
            <!-- @formatter:on -->

            <warning>
                Ohne Beschreibung generiert die Suchmaschine den Text aus dem Seiteninhalt, was unvorhersehbar ist.
                Daher sollte die Beschreibung selbst festgelegt werden.
            </warning>
        </chapter>

        <chapter id="meta-browser" title="Nützliche Metadaten für den Webbrowser">
            <p>
                Das <code>http-equiv</code>-Attribut im <code>&lt;meta&gt;</code>-Tag kann verwendet werden, um eine
                Webseite nach einer bestimmten Zeit zu aktualisieren oder auf eine andere URL weiterzuleiten:
            </p>

            <list type="bullet">
                <li>
                    <p>
                        <b>
                            Aktualisierung der Webseite
                        </b>
                    </p>

                    <!-- @formatter:off -->
                    <code-block lang="html">
                        <![CDATA[
                            <meta http-equiv="refresh" content="30">
                        ]]>
                    </code-block>
                    <!-- @formatter:on -->

                    <p>
                        Aktualisiert die Seite alle 30 Sekunden.
                    </p>
                </li>
                <li>
                    <p>
                        <b>
                            Weiterleitung auf eine andere URL
                        </b>
                    </p>

                    <!-- @formatter:off -->
                    <code-block lang="html">
                        <![CDATA[
                            <meta http-equiv="refresh" content="5; URL=http://domain.de/">
                        ]]>
                    </code-block>
                    <!-- @formatter:on -->

                    <p>
                        Leitet nach 5 Sekunden zu <code>http://domain.de/</code> weiter.
                    </p>
                </li>
            </list>

            <note>
                Automatische Weiterleitungen sollten vermieden werden, da sie von einigen Browsern und Suchmaschinen
                ignoriert werden. Stattdessen sollte ein Hyperlink im HTML-Dokumentkörper verwendet werden. Alternativ
                kann eine Weiterleitung auf dem Server konfiguriert werden (z.B. in <code>.htaccess</code> oder
                <code>web.config</code>).
            </note>
        </chapter>
    </chapter>

    <chapter id="quellen" title="Quellen">
        <tip>
            <b>(BUCH)</b>
            978-3836297288, "HTML und CSS - Das umfassende Handbuch", Jürgen Wolf, 2023
        </tip>
    </chapter>
</topic>