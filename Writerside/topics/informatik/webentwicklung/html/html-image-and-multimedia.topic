<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic id="html-image-and-multimedia"
       title="Grafiken und Multimedia"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd">
    <var name="id_prefix"></var>
    <show-structure depth="2" for="chapter,procedure"/>
    <link-summary rel="%id_prefix%-description"/>

    <chapter id="introduction" title="Einleitung">
        <p id="%id_prefix%-description">
            Die Möglichkeiten, multimediale Inhalte wie Grafiken, Animationen, Videos oder Audios einer Website
            hinzuzufügen, sind in HTML vielseitiger und einfacher geworden.
        </p>
    </chapter>

    <chapter id="overview" title="Übersicht der HTML-Elemente">
        <table id="%id_prefix%-overview-table" style="header-row">
            <tr>
                <td>Element</td>
                <td>Beschreibung</td>
            </tr>
            <tr>
                <td>
                    <a href="html-image-and-multimedia.topic#tag-img">
                        <code>&lt;img&gt;</code>
                    </a>
                </td>
                <td>
                    Eine Grafikdatei in ein HTML-Dokument einbinden.
                </td>
            </tr>
            <tr>
                <td>
                    <a href="html-image-and-multimedia.topic#">
                        <code>&lt;map&gt;</code>
                    </a>,
                    <a href="html-image-and-multimedia.topic#tag-area">
                        <code>&lt;area&gt;</code>
                    </a>
                </td>
                <td>
                    Eine verweissensitive Grafik erstellen.
                </td>
            </tr>
            <tr>
                <td>
                    <a href="html-image-and-multimedia.topic#tag-video">
                        <code>&lt;video&gt;</code>
                    </a>
                </td>
                <td>
                    Videodateien ohne Plug-ins wiedergeben.
                </td>
            </tr>
            <tr>
                <td>
                    <a href="html-image-and-multimedia.topic#tag-track">
                        <code>&lt;track&gt;</code>
                    </a>
                </td>
                <td>
                    Untertitel oder Übersetzungen für Videos bereitstellen.
                </td>
            </tr>
            <tr>
                <td>
                    <a href="html-image-and-multimedia.topic#tag-audio">
                        <code>&lt;audio&gt;</code>
                    </a>
                </td>
                <td>
                    Audiodateien ohne Plug-ins wiedergeben.
                </td>
            </tr>
        </table>
    </chapter>

    <chapter id="tag-description" title="Genauere Beschreibung">
        <chapter id="tag-img" title="Das img-Element">
            <p>
                Mit dem alleinstehenden <code>img</code>-Element (<code>img</code> = <i>image</i>) können Bilder
                einer Webseite hinzugefügt werden. Die Grafik wird an der Stelle eingesetzt, an der das
                <code>img</code>-Element im HTML-Dokument notiert wurde. Die Attribute <code>alt</code> und
                <code>src</code> sind Pflicht.
            </p>

            <p>
                Es macht auch Sinn, die Breite <code>width</code> und Höhe <code>height</code> des Bildes anzugeben,
                damit der Browser den Platz für das Bild reservieren kann, bevor es geladen wird. Das verhindert, dass
                sich die Seite verschiebt, wenn das Bild geladen wird. Muss die Seite den Platz unschön nachträglich
                Korrigieren, kann das zu einem schlechten Nutzererlebnis führen und dies wird auch von Suchmaschinen
                negativ bewertet und ist eine kennzahl bei den Core Web Vitals und bekannt als CLS (Cumulative Layout
                Shift).
            </p>

            <p>
                Auch für das <code>img</code>-Element wird oft das
                <a href="html-textstrukturierung.topic#tag-figure-figcaption">
                    <code>figure</code>- und <code>figcaption</code>-Element
                </a> verwendet um ein oder mehrere Bilder mit einer Bildunterschrift zu versehen.
            </p>

            <tip>
                <p>
                    Mehr zum Thema Bilder:
                </p>

                <list type="bullet">
                    <li>
                        <a href="html-embedded.topic#tag-picture"/>
                    </li>
                    <li>
                        <a href="html-image-and-multimedia.topic#image-scale"/>
                    </li>
                    <li>
                        <a href="html-image-and-multimedia.topic#image-formats"/>
                    </li>
                    <li>
                        <a href="html-image-and-multimedia.topic#image-optimization"/>
                    </li>
                    <li>
                        <a href="html-image-and-multimedia.topic#image-farbraum"/>
                    </li>
                </list>
            </tip>

            <deflist>
                <def title="alt (Pflichtfeld)">
                    <p>
                        Das <code>alt</code>-Attribut wird für eine alternative Beschreibung des Bildes verwendet für
                        den Fall, dass das Bild nicht geladen oder angezeigt werden kann, und hilft außerdem Menschen
                        mit einer Sehbehinderung, weil der darin enthaltene Text von Screenreadern vorgelesen wird.
                    </p>

                    <p>
                        Der Text sollte beschreiben, was auf dem Bild zu sehen ist. Zwar darf dieser alternative Text
                        beinahe beliebig lang sein, aber er sollte aufs Wesentliche beschränkt werden. Eine
                        empfehlenswerte Grenze liegt bei etwa 12-16 Wörtern oder 75 bis 125 Zeichen.
                    </p>

                    <p>
                        Das <code>alt</code>-Attribut ist auch für Suchmaschinen von Bedeutung, da ein Webcrawler nicht
                        »sehen« kann, was sich in einem Bild befindet. Somit sind die Webcrawler auf eine
                        aussagekräftige Beschreibung mit sinnvollen Schlüsselwörtern im <code>alt</code>-Attribut
                        angewiesen. Je mehr Daten der Webcrawler zur Verfügung hat, umso positiver wird sich das beim
                        Ranking der Website auswirken. Daher ist es durchaus empfehlenswert, neben einem sinnvollen
                        <code>alt</code>-Attribut das Bild auch im umgebenden Text ein wenig zu beschreiben.
                    </p>

                    <!-- @formatter:off -->
                    <code-block lang="html">
                        <![CDATA[
                            <p>
                                <img src="bilder/reader-01.png" alt="Eine lesende Person ">
                                <img src="bilder/reader-02.png" alt="Noch eine lesende Person">
                            </p>
                        ]]>
                    </code-block>
                    <!-- @formatter:on -->

                    <note>
                        Wenn in einer Grafik keine relevanten Informationen enthalten sind, und eine Beschreibung mit
                        dem <code>alt</code>-Attribut nicht sinnvoll ist, wird empfohlen, ein leeres <code>alt=""</code>
                        zu verwenden.
                    </note>
                </def>
                <def title="title">
                    <p>
                        Bei Bildern kann auch das globale <code>title</code>-Attribut zur Bildbeschreibung verwendet
                        werden. Der Inhalt des <code>title</code>-Attributs wird als Tooltip angezeigt, wenn der
                        Mauszeiger über das Bild schwebt. Sollte das Bild als Link zu einer anderen Seite verwendet
                        werden, wäre es sinnvoller, mit dem <code>title</code>-Attribut darauf hinzuweisen, was
                        passiert, wenn der Benutzer auf das Bild klickt.
                    </p>

                    <!-- @formatter:off -->
                    <code-block lang="html">
                        <![CDATA[
                            <a href="bilder/reader-02-big.png" target="_blank">
                                <img src="bilder/reader-02.png"
                                     alt="Noch eine lesende Person"
                                     title="Öffnet dieses Bild in einer größeren Version in einem neuen Fenster oder Tab."
                                >
                            </a>
                        ]]>
                    </code-block>
                    <!-- @formatter:on -->
                </def>
                <def title="longdesc">
                    <p>
                        Reicht die Beschreibung im <code>alt</code>-Attribut nicht aus, kann das
                        <code>longdesc</code>-Attribut verwendet werden, um eine längere Beschreibung des Bildes zu
                        liefern. Es gibt folgende möglichkeiten:
                    </p>

                    <list type="bullet">
                        <li>
                            Ein Anker auf ein anderes Element auf der aktuellen Webseite:
                            <code>longdesc="#beschreibung"</code>
                        </li>
                        <li>
                            Eine relative URL auf eine interne Datei auf der Website:
                            <code>longdesc="beschreibung.txt"</code>
                        </li>
                        <li>
                            Eine absolute URL auf eine externe Website:
                            <code>longdesc="https://www.example.com/beschreibung"</code>
                        </li>
                    </list>
                </def>
                <def title="width">
                    <p>
                        Hiermit wird die horizontale Ausdehnung (Breite) des Bildes in Pixel angegeben.
                    </p>
                </def>
                <def title="height">
                    <p>
                        Hiermit wird die vertikale Ausdehnung (Höhe) des Bildes in Pixel angegeben.
                    </p>
                </def>
                <def title="src (Pflichtfeld)">
                    <p>
                        Mit diesem Attribut wird das Verweisziel zur Bilddatei angegeben. Neben dem Dateinamen kann
                        sowohl ein relativer oder absoluter Pfad als auch eine komplette Internetadresse angegeben
                        werden. Die Angabe dieses Attributs ist Pflicht.
                    </p>
                </def>
                <def title="srcset">
                    <p>
                        Gibt eine Liste von Bilddateien an, die in verschiedenen Situationen verwendet werden sollen.
                    </p>
                </def>
                <def title="sizes">
                    <p>
                        Legt Bildgrößen für verschiedene Seitenlayouts fest.
                    </p>
                </def>
                <def title="loading">
                    <p>
                        Damit kann das native
                        <a href="html-image-and-multimedia.topic#image-lazy-loading">Lazy Loading</a> des Webbrowsers
                        verwendet werden. Mögliche werte sind:
                    </p>

                    <list type="bullet">
                        <li>
                            <code>lazy</code>: Bilder werden so lange zurückgehalten, bis das Bild einen bestimmten
                            Abstand zum sichtbaren Bereich hat.
                        </li>
                        <li>
                            <code>eager</code>: Bilder werden sofort geladen, unabhängig von der Position des Viewports.
                        </li>
                        <li>
                            <code>auto</code>: Der Webbrowser entscheidet, ob er die Bilder sofort lädt oder abhängig
                            vom Viewport.
                        </li>
                    </list>
                </def>
            </deflist>

            <tip>
                Mehr zum <code>img</code>-Element hier:
                <a href="https://developer.mozilla.org/de/docs/Web/HTML/Element/img">MDN Web Docs</a>
            </tip>
        </chapter>

        <chapter id="tag-map" title="Das map-Element">
            <!-- TODO -->

            <tip>
                Mehr zum <code>map</code>-Element hier:
                <a href="https://developer.mozilla.org/de/docs/Web/HTML/Element/map">MDN Web Docs</a>
            </tip>
        </chapter>

        <chapter id="tag-area" title="Das area-Element">
            <!-- TODO -->

            <tip>
                Mehr zum <code>area</code>-Element hier:
                <a href="https://developer.mozilla.org/de/docs/Web/HTML/Element/area">MDN Web Docs</a>
            </tip>
        </chapter>

        <chapter id="tag-video" title="Das -Element">
            <!-- TODO -->

            <tip>
                Mehr zum <code>video</code>-Element hier:
                <a href="https://developer.mozilla.org/de/docs/Web/HTML/Element/video">MDN Web Docs</a>
            </tip>
        </chapter>

        <chapter id="tag-track" title="Das track-Element">
            <!-- TODO -->

            <tip>
                Mehr zum <code>track</code>-Element hier:
                <a href="https://developer.mozilla.org/de/docs/Web/HTML/Element/track">MDN Web Docs</a>
            </tip>
        </chapter>

        <chapter id="tag-audio" title="Das audio-Element">
            <!-- TODO -->

            <tip>
                Mehr zum <code>audio</code>-Element hier:
                <a href="https://developer.mozilla.org/de/docs/Web/HTML/Element/audio">MDN Web Docs</a>
            </tip>
        </chapter>
    </chapter>

    <chapter id="more" title="Weiteres">
        <chapter id="image-formats" title="Bildformate">
            <p>

                Die heutigen Webbrowser sind in der Lage, viele verschiedene Bildformate darzustellen. Dennoch sind
                nicht alle Formate gleich gut geeignet.
            </p>

            <list type="bullet">
                <li>
                    <p>
                        <b>
                            Das JPEG-Format
                        </b>
                    </p>

                    <p>
                        Das JPEG-Format gab es schon lange vor dem Internet und ist immer noch sehr beliebt,
                        insbesondere für Fotos oder komplexere Bilder mit vielen Farben und Details.
                    </p>

                    <list type="bullet">
                        <li>
                            (+) viele Komprimierungsmöglichkeiten
                        </li>
                        <li>
                            (-) zu starke Komprimierung führt zu unschönen Artefakten
                        </li>
                        <li>
                            (-) unterstützt keine Transparenz
                        </li>
                    </list>
                </li>
                <li>
                    <p>
                        <b>
                            Das GIF-Format
                        </b>
                    </p>

                    <p>
                        Das GIF-Format ist ein altes Format. Es wurde bzw. wird immer noch gerne für Bilder mit wenigen
                        Farben wie Logos, Symbole oder einfache Illustrationen verwendet. Im Webdesign findet man das
                        GIF-Format bzw. GIF-Animationen immer seltener vor.
                    </p>

                    <list type="bullet">
                        <li>
                            (+) mehrere Grafiken lassen sich zusammenfassen und nacheinander als GIF-Animation
                            abspielen
                        </li>
                        <li>
                            (+) unterstützt Transparenz
                        </li>
                        <li>
                            (-) unterstützt nur 256 Farben
                        </li>
                    </list>
                </li>
                <li>
                    <p>
                        <b>
                            Das PNG-Format
                        </b>
                    </p>

                    <p>
                        Das PNG-Format wurde entwickelt, um das GIF-Format zu ersetzen. Es eignet sich sehr gut für
                        Bilder mit scharfen Kanten, kleinere Bilder, Grafiken oder Formen und wenn ein transparenter
                        Hintergrund erforderlich ist.
                    </p>

                    <list type="bullet">
                        <li>
                            (+) 8- oder 24-Bit-Farbtiefe (= 256 oder 16 Millionen Farben)
                        </li>
                        <li>
                            (+) unterstützt Transparenz mit 64.000 Stufen
                        </li>
                        <li>
                            (-) keine benutzerdefinierten Komprimierungsstufen, deshalb nicht die gleiche geringe
                            Speicherkapazität wie das JPEG-Format
                        </li>
                    </list>
                </li>
                <li>
                    <p>
                        <b>
                            SVG für Vektorgrafiken
                        </b>
                    </p>

                    <p>
                        SVG (Scalable Vector Graphics) ist ein XML-basiertes Format für Vektorgrafiken. Anstelle eines
                        Rasters aus Pixeln verwendet dieses Format eine Reihe von Anweisungen, um eine From zu zeichnen.
                    </p>

                    <list type="bullet">
                        <li>
                            (+) ohne Qualitätsverlust skalieren
                        </li>
                        <li>
                            (+) speicher in der Regel sehr gering
                        </li>
                        <li>
                            (+) mit JavaScript animierbar und mit CSS gestaltbar
                        </li>
                        <li>
                            (-) nicht für komplexe Bilder geeignet
                        </li>
                    </list>
                </li>
                <li>
                    <p>
                        <b>
                            Das WebP-Format
                        </b>
                    </p>

                    <p>
                        WebP ist ein sehr neues Format und wurde von Google speziell für das Web konzipiert. Der
                        Browser-Support für das Format ist heute ziemlich gut.
                    </p>

                    <list type="bullet">
                        <li>
                            (+) trotz starker Komprimierung bessere Qualität als JPEG
                        </li>
                        <li>
                            (+) 25–35 % kleiner als JPEG
                        </li>
                        <li>
                            (-) Apple hat den Support für WebP nur sehr zögerlich hinzugefügt
                        </li>
                    </list>
                </li>
                <li>
                    <p>
                        <b>
                            Das AVIF-Format
                        </b>
                    </p>

                    <p>
                        Mit AVIF steht der Nachfolger von WebP jedoch bereits in den Startlöchern. Das Bildformat
                        ist ähnlich wie HEIC, aber etwas offener.
                    </p>

                    <list type="bullet">
                        <li>
                            (+) höhere Kompressionsrate bei gleicher Qualität als WebP
                        </li>
                        <li>
                            (-) Browserunterstützung: <a href="https://caniuse.com/?search=avif">caniuse.com</a>
                        </li>
                        <li>
                            (-) die Kodierung ist noch nicht wirklich performant
                        </li>
                    </list>
                </li>
            </list>
        </chapter>

        <chapter id="image-optimization" title="Bilder fürs Web optimieren">
            <p>

                Um Bilder in einem bestimmten Format zu speichern, benötigen Sie oft ein Bildbearbeitungsprogramm wie
                Adobe Photoshop, Affinity Photo oder das kostenlose GIMP, um nur einige zu nennen. Jedes dieser
                Programme bietet eine Exportfunktion, um Bilder in ein bestimmtes Format zu exportieren/speichern.
            </p>

            <p>
                Es gibt noch folgende weitere Tools:
            </p>

            <list type="bullet">
                <li>
                    <b>ImageOptim</b> (<a href="https://imageoptim.com"/>): kleines Tool für den Mac (oder als
                    Webservice), das verschiedene Kompressionsalgorithmen auf Bilder anwenden kann
                </li>
                <li>
                    <b>Trimage</b> (<a href="https://trimage.org"/>): verlustfreie Komprimierungssoftware für Windows,
                    Linux und Mac
                </li>
                <li>
                    <b>PNGQuant:</b> (<a href="https://pngquant.org"/>): Komprimierung für Bilder im Format .png –
                    verlustbehaftet, allerdings oft kaum wahrzunehmen
                </li>
                <li>
                    <b>JPEGmini</b> (<a href="https://www.jpegmini.com"/>): verlustfreie Komprimierung für Bilder im
                    Format .jpg
                </li>
                <li>
                    <b>Compressor.io</b> (<a href="https://compressor.io"/>): Webservice zur Optimierung von Bildern
                </li>
                <li>
                    <b>SVG Minify</b> (<a href="https://www.svgminify.com/"/>): SVG-Quelltext aus Programmen wie dem
                    Adobe Illustrator sind nicht immer optimal. Hiermit können Sie das SVG-Format optimieren lassen.
                </li>
            </list>
        </chapter>

        <chapter id="image-farbraum" title="Farbraum">
            <p>
                Der Farbraum bestimmt den gesamten Bereich aller darstellbaren Farben. Bei der Bildbearbeitung hat man
                oft die Wahl zwischen sRGB und AdobeRGB. Für das Web ist sRGB der am häufigsten verwendete Farbraum.
                Gibt es keinen Grund, einen anderen Farbraum zu verwenden, sollte man es mit den Bildern bei sRGB
                belassen. Es wird an anderen Farbräumen für das Web gearbeitet, z.B. am P3-Farbraum, der vom
                Safari-Webbrowser unterstützt wird, aber dieser wird noch nicht häufig verwendet.
            </p>
        </chapter>

        <chapter id="image-scale" title="Bilder skalieren">
            <p>
                Das Skalieren von Bildern mit <code>width</code> und <code>height</code> ist zwar erlaubt, aber wenn
                möglich sollten in der Praxis die Bilder mit einem Bildbearbeitungsprogramm auf die tatsächliche Größe
                angepasst werden. Zum einen wird damit der Datenumfang (Traffic) reduziert, und zum anderen wird
                nicht das Risiko eingegangen, dass die Grafik hässlich und grob zusammengeschrumpft wird. Schließlich
                verlässt man isch bei der Darstellung der Website auf die Webbrowser der Besucher und gibt damit ein
                wenig die Kontrolle der Darstellung der Bilder aus der Hand.
            </p>
        </chapter>

        <chapter id="image-lazy-loading" title="Lazy Loading">
            <p>
                Beim Lazy Loading werden nur die Bilder einer Webseite vom Server geladen, die sich im sichtbaren
                Bereich oder in einem bestimmten Abstand zum sichtbaren Bereich des Browserfensters befinden. Bilder,
                die sich weiter unten auf der Seite befinden, werden erst dann geladen, wenn der Benutzer zu ihnen
                scrollt. So werden die Bilder nur dann geladen, wenn sie benötigt werden. Der Vorteil dieser Technik
                ist:
            </p>

            <list type="bullet">
                <li>
                    Die Anzeige der Webseite erfolgt schneller, weil weniger Daten geladen werden müssen.
                </li>
                <li>
                    Unter Umständen findet weniger Datentransfer statt. Dies hängt allerdings vom Nutzer ab. Nutzer, die
                    ganz nach unten scrollen, werden denselben Datentransfer verursachen. Aber Nutzer, die von der Seite
                    abspringen oder einen anderen Verweis derselben Website in der Navigation ansteuern, verursachen
                    weniger Verkehr. Davon profitiert z.B. auch das limitierte Datenbudget eines mobilen Zugangs, und
                    auch der CO2-Ausstoß wird gegebenenfalls reduziert. Natürlich auch hier nur, wenn der Anwender nicht
                    ganz nach unten scrollt.
                </li>
            </list>

            <note>
                In der Vergangenheit konnte Lazy Loading nur mit JavaScript implementiert werden. Inzwischen kann man
                aber auch das native Lazy Loading mittels <code>loading="lazy"</code> von Webbrowsern nutzen.
            </note>

            <!-- @formatter:off -->
            <code-block lang="html">
                <![CDATA[
                    <img src="./images/reader03.png"
                         loading="lazy"
                         alt="Reader"
                         width="1024"
                         height="1024"
                    />
                ]]>
            </code-block>
            <!-- @formatter:on -->

            <note>
                <p>
                    <b>Lazy Loading im Webbrowser prüfen</b>
                </p>

                <p>
                    Das native Lazy Loading kann im Webbrowser getestet werden. Dazu werden die
                    <path>Entwicklertools</path> geöffnet, folglich auf die Registerkarte <path>Network</path> und
                    dann auf <path>Img</path> geklickt.
                </p>

                <p>
                    Funktioniert das Lazy Loading nicht wie erwartet, kann es sein, dass sich die Bilder bereits im
                    Cache des Browsers befinden und nicht mehr nachgeladen werden.
                </p>
            </note>
        </chapter>
    </chapter>

    <chapter id="quellen" title="Quellen">
        <tip>
            <b>(BUCH)</b>
            978-3836297288, "HTML und CSS - Das umfassende Handbuch", Jürgen Wolf, 2023
        </tip>
    </chapter>
</topic>