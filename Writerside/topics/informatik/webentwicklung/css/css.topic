<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic id="css"
       title="CSS (Cascading Style Sheets)"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd">
    <show-structure depth="2" for="chapter,procedure"/>
    <link-summary rel="description"/>

    <!-- TODO -->
    <chapter id="was-ist-css" title="Was ist CSS?">
        <p id="description">
            <b>CSS (Cascading Style Sheets)</b> ist eine Gestaltungssprache, die verwendet wird, um das Layout und
            Design von HTML-Dokumenten zu definieren. Während HTML die Struktur und den Inhalt einer Webseite festlegt,
            sorgt CSS dafür, dass diese Inhalte visuell ansprechend präsentiert werden.
        </p>

        <p>
            Hauptfunktionen und Vorteile von CSS sind:
        </p>

        <list type="bullet">
            <li>
                <b>Trennung von Inhalt und Layout:</b> HTML strukturiert die Inhalte, während CSS für das Styling und
                die visuelle Darstellung verantwortlich ist. Dies sorgt für eine saubere Trennung, was die Wartung und
                Verwaltung der Webseiten vereinfacht.
            </li>
            <li>
                <b>Flexibilität und Konsistenz:</b> Durch die Nutzung einer zentralen CSS-Datei können Änderungen am
                Design einer Webseite schnell und konsistent umgesetzt werden, ohne den HTML-Code anpassen zu müssen.
            </li>
            <li>
                <b>Gestaltungsvielfalt:</b> CSS ermöglicht eine Vielzahl von Gestaltungsmöglichkeiten, wie z. B. Farben,
                Schriftarten, Abstände, Positionierungen und mehr. Dadurch können Entwickler und Designer kreative und
                individuelle Designs umsetzen.
            </li>
            <li>
                <b>Responsives Design:</b> CSS unterstützt auch das responsive Design, was bedeutet, dass Webseiten auf
                verschiedenen Geräten und Bildschirmgrößen optimal dargestellt werden können.
            </li>
        </list>

        <p>
            Im Wesentlichen ist CSS das Werkzeug, das Webseiten ihr Aussehen und Gefühl verleiht, indem es sicherstellt,
            dass sie nicht nur funktional, sondern auch optisch ansprechend sind.
        </p>
    </chapter>

    <chapter id="basics" title="Grundlagen">
        <chapter id="basics-usage" title="Anwendung">
            <p>
                CSS-Regeln bestehen aus einem Selektor und einer Deklaration:
            </p>

            <list type="bullet">
                <li>
                    <p>
                        <b>Selektor(en)</b>
                    </p>

                    <p>
                        Mit einem Selektor wird festgelegt, auf welche Elemente die folgenden Deklarationen
                        angewendet. Es ist auch möglich, mehrere Selektoren zu kombinieren, um die Deklarationen auf
                        verschiedene Elemente anzuwenden. Dabei werden die einzelnen Selektoren durch ein Komma
                        getrennt.
                    </p>

                    <!-- @formatter:off -->
                    <code-block lang="css">
                        <![CDATA[
                            h1 {
                                font-family: "Arial";
                                color: red;
                                text-align: center;
                            }

                            h2,
                            h3 {
                                font-family: "Courier";
                                color: blue;
                            }
                        ]]>
                    </code-block>
                    <!-- @formatter:on -->
                </li>
                <li>
                    <p>
                        <b>Deklatation(en)</b>
                    </p>

                    <p>
                        Mit Deklarationen wird festgelegt, wie die ausgewählten Elemente formatiert werden sollen. Eine
                        Deklaration besteht aus einem Eigenschafts-Wert-Paar, wobei die Eigenschaft den Aspekt des
                        Elements definiert und der Wert den Wert dieser Eigenschaft angibt. In folgendem Beispiel wird
                        die Schriftfarbe (<code>color</code> → Eigenschaft) eines <code>h1</code>-Elements auf rot
                        (<code>red</code> → Wert) gesetzt:
                    </p>

                    <!-- @formatter:off -->
                    <code-block lang="css">
                        <![CDATA[
                            h1 {
                                color: red;
                            }
                        ]]>
                    </code-block>
                    <!-- @formatter:on -->
                </li>
                <li>
                    <p>
                        <b>Kommentare</b>
                    </p>

                    <p>
                        Kommentare in CSS beginnen mit <code>/*</code> und enden mit <code>*/</code>. Sie können
                        verwendet werden, um den Code zu dokumentieren oder temporäre Änderungen zu kennzeichnen.
                        Sinnvoll sind Kommentare auch, wenn man die Stylesheets in Abschnitte unterteilen möchte, um
                        die Übersichtlichkeit zu erhöhen.
                    </p>

                    <!-- @formatter:off -->
                    <code-block lang="css">
                        <![CDATA[
                            /* Erzeugt einen Kreis */
                            /* Achtung! Funktioniert nicht mit IE8 oder älter */
                            .circle {
                                height: 50px;
                                width: 50px;
                                border-radius: 50px;
                            }}
                        ]]>
                    </code-block>
                    <!-- @formatter:on -->
                </li>
            </list>

            <note>
                <p>
                    <b>
                        Empfehlungen
                    </b>
                </p>

                <p>
                    Es ist Empfehlenswert, für jede CSS-Deklaration eine Extrazeile zu verwenden und diese einzurücken.
                    Die schließende Klammer sollte auch in eine eigene Zeile geschrieben werden. Folgendes ist zwar
                    möglich, aber unübersichtlich:
                </p>

                <!-- @formatter:off -->
                <code-block lang="css">
                    <![CDATA[
                        h2,h3{font-family:"Courier";color:blue;text-align:center;}
                    ]]>
                </code-block>
                <!-- @formatter:on -->
            </note>
        </chapter>

        <chapter id="basics-include" title="In HTML einbinden">
            <p>
                Es gibt drei Möglichkeiten, CSS in HTML-Dokumente einzubinden:
            </p>

            <list type="bullet">
                <li>
                    <p>
                        <b>Inline-Styles</b>
                    </p>

                    <p>
                        CSS-Regeln werden direkt mit dem globalen <code>style</code>-Attribut eines HTML-Elements
                        definiert. Dies ist die schlechteste Möglichkeit eine CSS-Angabe zu machen. Ein Selektor wird
                        logischerweise nicht benötigt, da das HTML-Element, auf das diese CSS-Regel angewendet wird,
                        schon im öffnenden Tag angegeben wird.
                    </p>

                    <!-- @formatter:off -->
                    <code-block lang="html">
                        <![CDATA[
                            <p style="background-color:#272121; color: #f9ba6a;">
                                Ein Blog mit meinen Gedanken ...
                            </p>
                        ]]>
                    </code-block>
                    <!-- @formatter:on -->
                </li>
                <li>
                    <p>
                        <b>Interne Stylesheets</b>
                    </p>

                    <p>
                        CSS-Regeln werden innerhalb des <code>style</code>-Elements im <code>head</code>-Bereich des
                        HTML-Dokuments definiert. Diese CSS-Regeln gelten nur für das aktuelle Dokument. Es ist auch
                        erlaubt mehrere solcher <code>style</code>-Elemente im HTML-Dokumentkopf zu verwenden.
                    </p>

                    <!-- @formatter:off -->
                    <code-block lang="html">
                        <![CDATA[
                            <!doctype html>
                            <html lang="de">
                                <head>
                                    <title>Meine Testseite</title>
                                    <meta charset="UTF-8">
                                    <style>
                                        h1 {
                                            color: #272121;
                                        }
                                        p {
                                            background-color: #272121;
                                            color: #f9ba6a;
                                        }
                                        /* ... */
                                    </style>
                                </head>
                                <body>
                                    <!-- ... -->
                                </body>
                            </html>
                        ]]>
                    </code-block>
                    <!-- @formatter:on -->
                </li>
                <li>
                    <p>
                        <b>Externe Stylesheets</b>
                    </p>

                    <p>
                        CSS-Regeln werden in einer separaten CSS-Datei gespeichert und mit dem <code>link</code>-Element
                        im <code>head</code>-Bereich des HTML-Dokuments verknüpft. Diese Methode gilt als
                        <i>Best Practice</i>. Eine CSS-Datei hat die Dateiendung <path>.css</path>.
                    </p>

                    <!-- @formatter:off -->
                    <code-block lang="html">
                        <![CDATA[
                            <!doctype html>
                            <html lang="de">
                                <head>
                                    <title>Meine Testseite</title>
                                    <meta charset="UTF-8">
                                    <link rel="stylesheet" href="styles.css">
                                </head>
                                <body>
                                    <!-- ... -->
                                </body>
                            </html>
                        ]]>
                    </code-block>
                </li>
            </list>

            <p>
                Da Stilanweisungen auf unterschiedliche Art und Weise eingebunden und kombiniert werden können, muss
                es hierzu eine Regel geben, die entscheidet, welche Eigenschaft bei konkurrierenden CSS-Regeln den
                Vorzug erhält. Das Problem wird in CSS gelöst, indem die Kaskade für die Regeln und Eigenschaften eine
                Gewichtung (ein Punktesystem) berechnet, die das auf ein Element angewendete Format bestimmt.
                Grundlegend gilt: Die CSS-Anweisung, die dem HTML-Element am nächsten kommt, hat die höchste Priorität.
                Mehr dazu hier: <a href="css-inheritance-cascading.topic"/>
            </p>

            <p>
                Warum gelten Externe Stylesheets als Best Practice? Einige der Vorteile sind:
            </p>

            <list type="bullet">
                <li>
                    Man hat ein einheitliches Layout auch bei größeren Projekten. Alle Formateigenschaften, die in
                    der zentralen CSS-Datei definiert wurden, gelten für alle HTML-Dokumente, in denen die CSS-Datei
                    eingebunden ist.
                </li>
                <li>
                    Der Aufwand bei der Wartung oder bei Änderungen am Design wird beachtlich reduziert, weil sich diese
                    Arbeit auf die einzelne CSS-Datei beschränkt und die Änderungen der zentralen Datei sofort für alle
                    HTML-Dokumente zur Verfügung stehen.
                </li>
                <li>
                    Die HTML-Dokumente werden kleiner in der Speichergröße, weil sie nur noch aus HTML bestehen. Auch
                    die Ladezeit wird hiermit reduziert, weil die zentrale Stylesheetdatei nur einmal heruntergeladen
                    werden muss und dann im Webbrowser zwischengespeichert wird.
                </li>
            </list>

            <note>
                Neben der HTML-Syntax zum Einbinden einer externen CSS-Datei in ein HTML-Dokument mit dem
                <code>link</code>-Element gibt es in CSS mit der <code>@import</code>-Regel eine weitere Möglichkeit.
                Diese wird in der Praxis aber nur selten verwendet. Mehr dazu hier:
                <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/@import"/>
            </note>
            
            <chapter id="basics-include-media" title="Medienspezifische Stylesheets">
                <p>
                    Im <code>link</code>-Element kann das Attribut <code>media</code> verwendet werden. Damit kann
                    festgelegt werden, für welche Medien das Stylesheet gültig ist. Die möglichen Werte sind:
                </p>

                <list type="bullet">
                    <li>
                        <code>all</code> Standardwert. Das Stylesheet gilt für alle Medien.
                    </li>
                    <li>
                        <code>print:</code> Das Stylesheet gilt nur für Druckausgaben.
                    </li>
                    <li>
                        <code>screen</code> Das Stylesheet gilt für Bildschirme.
                    </li>
                    <li>
                        <code>speech</code> Das Stylesheet gilt für Sprachausgaben.
                    </li>
                </list>

                <p>
                    Neben den genannten Werten können auch Medienattribute wie <code>min-width</code>,
                    <code>max-width</code>, <code>orientation</code> oder <code>resolution</code> verwendet werden.
                    Hierbei handelt es sich um sogenannte Media Queries, die es ermöglichen, Stylesheets an bestimmte
                    Bedingungen anzupassen. Beispiele:
                </p>

                <!-- @formatter:off -->
                <code-block lang="html">
                    <![CDATA[
                        <link rel="stylesheet"
                              media="print"
                              href="print.css">
                        <link rel="stylesheet"
                              media="screen and (min-width: 1080px)"
                              href="style1080.css">
                    ]]>
                </code-block>
                <!-- @formatter:on -->
            </chapter>
        </chapter>

        <chapter id="basics-inheritance-cascading" title="Vererbung und Kaskade">
            <!-- TODO -->
        </chapter>
    </chapter>

    <chapter id="values" title="Werte">
        <p>
            In CSS können verschiedene Arten von Werten verwendet werden, um die Eigenschaften von Elementen zu
            definieren. Diese Werte können numerisch, textuell oder farblich sein.
        </p>

        <chapter id="values-measure-units" title="Maßeinheiten">
            <p>
                Maßeinheiten in CSS können entweder absolut oder relativ sein. Absolute Maßeinheiten sind fest und
                unabhängig von anderen Faktoren, während relative Maßeinheiten sich auf andere Eigenschaften des
                Elements oder des Dokuments beziehen.
            </p>

            <p>
                Numerische Werte in CSS können Ganzzahlen oder Fließkommazahlen sein. Das Komma bei der Fließkommazahl
                wird in CSS durch einen Punkt dargestellt. Es gibt zudem Zahlen in CSS, die ohne eine Maßeinheit
                verwendet werden. Auch negative Werte mit einem Minuszeichen können benutzt werden, sofern dies
                sinnvoll erscheint <code>z-index: -2;</code>. Bei Längenangaben wie Höhe und Breite oder Abständen
                können keine negativen Werte verwendet werden. Bei der Zahl <code>0</code> muss die Maßeinheit nicht
                angegeben werden.
            </p>

            <p>
                Hier sind einige der häufig verwendeten Maßeinheiten in CSS:
            </p>

            <table style="header-row">
                <tr>
                    <td>Maßeinheit</td>
                    <td>CSS-Name</td>
                    <td>Angabe</td>
                    <td>Beschreibung</td>
                </tr>
                <tr>
                    <td>
                        Pixel
                    </td>
                    <td>
                        <code>px</code>
                    </td>
                    <td>
                        absolut/relativ
                    </td>
                    <td>
                        <p>
                            Die Anzeige von Pixeln ist abhängig von der Pixeldichte des Ausgabegeräts. Bei einer hohen
                            Bildschirmauflösung werden die Pixel kleiner, weshalb die Anzeige kleiner erscheint. Ebenso
                            ist es mit einer niedrigen Bildschirmauflösung, bei der die Pixel und damit die Anzeige
                            größer erscheinen. Ein Pixel ist somit auf Anzeigegeräten eine relative und bezogen auf die
                            Anzeige bzw. den Inhalt eine absolute Maßeinheit.
                        </p>
                    </td>
                </tr>
                <tr>
                    <td>
                        Punkt
                    </td>
                    <td>
                        <code>pt</code>
                    </td>
                    <td>
                        absolut
                    </td>
                    <td>
                        <p>
                            Dies ist eine typografische Maßeinheit, und 1 Punkt entspricht 1/72 Zoll (1 Zoll =
                            2,54 cm), z.B.:
                        </p>

                        <!-- @formatter:off -->
                        <code-block lang="css">
                            <![CDATA[
                                font-size: 14pt;
                            ]]>
                        </code-block>
                        <!-- @formatter:on -->
                    </td>
                </tr>
                <tr>
                    <td>
                        Pica
                    </td>
                    <td>
                        <code>pc</code>
                    </td>
                    <td>
                        absolut
                    </td>
                    <td>
                        <p>
                            Pica ist ebenfalls eine in der Typografie verbreitete Maßeinheit. Ein Pica ist 1/6 Zoll und
                            entspricht daher 12 Punkt, z.B.:
                        </p>

                        <!-- @formatter:off -->
                        <code-block lang="css">
                            <![CDATA[
                                font-size: 1pc; /*= 12pt */
                            ]]>
                        </code-block>
                        <!-- @formatter:on -->
                    </td>
                </tr>
                <tr>
                    <td>
                        Zentimeter
                    </td>
                    <td>
                        <code>cm</code>
                    </td>
                    <td>
                        absolut
                    </td>
                    <td>
                        <p>
                            Ein Zentimeter ist der hundertste Teil eines Meters und entspricht 10 mm, z.B.:
                        </p>

                        <!-- @formatter:off -->
                        <code-block lang="css">
                            <![CDATA[
                                margin-left: 1.3cm;
                            ]]>
                        </code-block>
                        <!-- @formatter:on -->
                    </td>
                </tr>
                <tr>
                    <td>
                        Millimeter
                    </td>
                    <td>
                        <code>mm</code>
                    </td>
                    <td>
                        absolut
                    </td>
                    <td>
                        <p>
                            Ein Millimeter ist ein Tausendstel eines Meters oder der zehnte Teil eines Zentimeters,
                            z.B.:
                        </p>

                        <!-- @formatter:off -->
                        <code-block lang="css">
                            <![CDATA[
                                padding: 2mm;
                            ]]>
                        </code-block>
                        <!-- @formatter:on -->
                    </td>
                </tr>
                <tr>
                    <td>
                        Zoll
                    </td>
                    <td>
                        <code>in</code>
                    </td>
                    <td>
                        absolut
                    </td>
                    <td>
                        <p>
                            Das Längenmaß steht für Inch (Zoll), und 1 Inch entspricht 2,54 cm, z.B.:
                        </p>

                        <!-- @formatter:off -->
                        <code-block lang="css">
                            <![CDATA[
                                margin-top: 1in;
                            ]]>
                        </code-block>
                        <!-- @formatter:on -->
                    </td>
                </tr>
                <tr>
                    <td>
                        Geviertbreite
                    </td>
                    <td>
                        <code>em</code>
                    </td>
                    <td>
                        relativ
                    </td>
                    <td>
                        <p>
                            Ein <code>em</code> steht für die Schriftgröße des Elements. Wird em für die Schriftgröße
                            selbst (<code>font-size</code>) verwendet, dann bezieht sich dieser Wert auf die
                            Schriftgröße des Eltern-Elements, z.B.:
                        </p>

                        <!-- @formatter:off -->
                        <code-block lang="css">
                            <![CDATA[
                                font-size: 1.3em;
                            ]]>
                        </code-block>
                        <!-- @formatter:on -->
                    </td>
                </tr>
                <tr>
                    <td>
                        Zeichenbreite
                    </td>
                    <td>
                        <code>ch</code>
                    </td>
                    <td>
                        relativ
                    </td>
                    <td>
                        <p>
                            <code>ch</code> ist eine relative Einheit, die auf der Breite des Zeichens "0" (null) im
                            aktuellen Schriftstil basiert. Wenn Sie bspw. die Breite eines Containers auf 40ch
                            festlegen, wird der Container 40 Zeichenbreiten im aktuellen Schriftstil breit sein. Dies
                            kann besonders nützlich sein, wenn Sie sicherstellen wollen, dass der Inhalt eines
                            Containers auf verschiedenen Geräten und Bildschirmgrößen konsistent bleibt.
                        </p>
                    </td>
                </tr>
                <tr>
                    <td>
                        Zeilenhöhe
                    </td>
                    <td>
                        <code>lh</code>
                    </td>
                    <td>
                        relativ
                    </td>
                    <td>
                        <p>
                            <code>lh</code> steht für <code>line-height</code> und ist eine relative Einheit, die auf
                            der aktuellen Schriftgröße basiert. Sie wird verwendet, um den vertikalen Abstand zwischen
                            den Zeilen eines Textblocks zu definieren. Grundsätzlich wird diese relative Einheit die
                            Zeilenhöhe des aktuellen Elements berechnen, auf das sie angewendet wird. Dazu wird die
                            normale Länge der ersten verfügbaren Schriftart in eine absolute Länge umgewandelt.
                        </p>
                    </td>
                </tr>
                <tr>
                    <td>
                        x-Höhe
                    </td>
                    <td>
                        <code>ex</code>
                    </td>
                    <td>
                        relativ
                    </td>
                    <td>
                        <p>
                            Ein <code>ex</code> steht für die Höhe des Kleinbuchstabens <code>x</code> der verwendeten
                            Schrift in diesem Element. Auch hier gilt, wenn <code>ex</code> für die Schriftgröße
                            <code>font-size</code> verwendet wird, dann bezieht sich diese Höhe auf den Wert des
                            Kleinbuchstabens <code>x</code> im Eltern-Element.
                        </p>
                    </td>
                </tr>
                <tr>
                    <td>
                        Prozent
                    </td>
                    <td>
                        <code>%</code>
                    </td>
                    <td>
                        relativ
                    </td>
                    <td>
                        <p>
                            Die Prozentangaben lassen sich recht vielseitig einsetzen. Dabei hängt es von der
                            CSS-Eigenschaft ab, ob sich dieser Wert auf die elementeigene Größe, auf die des
                            Eltern-Elements oder auf einen allgemeinen Kontext bezieht.
                        </p>
                    </td>
                </tr>
                <tr>
                    <td>
                        Wurzel-Em
                    </td>
                    <td>
                        <code>rem</code>
                    </td>
                    <td>
                        relativ
                    </td>
                    <td>
                        <p>
                            Das <code>rem</code> (= <i>root em</i>) verhält sich zunächst genauso wie em, nur dass sich
                            der <code>rem</code>-Wert am Wurzel-Element orientiert und nicht an der Schriftgröße des
                            jeweiligen Eltern-Elements. In HTML ist das Wurzel-Element das <code>body</code>- bzw.
                            <code>html</code>-Element, z.B.:
                        </p>

                        <!-- @formatter:off -->
                        <code-block lang="css">
                            <![CDATA[
                                font-size: 1.2rem;
                            ]]>
                        </code-block>
                        <!-- @formatter:on -->
                    </td>
                </tr>
                <tr>
                    <td>
                        Viewport-Breite
                    </td>
                    <td>
                        <code>vw</code>
                    </td>
                    <td>
                        relativ
                    </td>
                    <td>
                        <p>
                            <code>1vw</code> entspricht <code>1 %</code> oder dem hundertsten Teil der Breite des
                            Anzeigebereichs (= Viewport). Somit entspricht <code>100vw</code> der kompletten Breite des
                            Anzeigebereichs. Mit dieser Maßeinheit können Sie die Schriftgröße an den Anzeigebereich des
                            Geräts oder die Größe des Browserfensters anpassen.
                        </p>
                    </td>
                </tr>
                <tr>
                    <td>
                        Viewport-Höhe
                    </td>
                    <td>
                        <code>vh</code>
                    </td>
                    <td>
                        relativ
                    </td>
                    <td>
                        <p>
                            <code>1vh</code> entspricht <code>1 %</code> oder dem hundertsten Teil der Höhe des
                            Anzeigebereichs (= Viewport). Daher entspricht <code>100vh</code> der gesamten Höhe des
                            Anzeigebereichs. Mit dieser Maßeinheit können Sie die Schriftgröße an den Anzeigebereich des
                            Geräts oder die Größe des Browserfensters anpassen.
                        </p>
                    </td>
                </tr>
            </table>
        </chapter>

        <chapter id="values-strings-keywords" title="Zeichenketten und Schlüsselwörter">
            <p>
                In CSS wird strikt zwischen Schlüsselwörtern und Zeichenketten unterschieden. Zeichenketten werden in
                CSS zwischen einfache oder doppelte Anführungszeichen gesetzt:
            </p>

            <!-- @formatter:off -->
            <code-block lang="css">
                <![CDATA[
                    content: " Meter";  /* Zeichenkette */
                    content: '$ ';      /* Zeichenkette */
                ]]>
            </code-block>
            <!-- @formatter:on -->

            <p>
                Die Schlüsselwörter in CSS hingegen werden nicht gesondert gekennzeichnet:
            </p>

            <!-- @formatter:off -->
            <code-block lang="css">
                <![CDATA[
                    color: black;
                    width: auto;
                    display: inline-block;
                ]]>
            </code-block>
            <!-- @formatter:on -->
        </chapter>

        <chapter id="values-colors" title="Farben">
            <p>
                CSS stellt mehrere Möglichkeiten zur Verfügung, um Farben zu definieren. Keine der Farbangaben haben
                irgendwelche Vor- oder Nachteile bei der Darstellung oder Ausführung von Webseiten.
            </p>

            <chapter id="values-colors-named" title="Benannte Farben">
                <p>
                    CSS hat mittlerweile 148 Farbnamen, die definiert sind. Hier sind einige beispiele:
                </p>

                <table style="header-row">
                    <tr>
                        <td>CSS-Name</td>
                        <td>Hexadezimal</td>
                        <td>RGB</td>
                        <td>Farbe</td>
                    </tr>
                    <tr>
                        <td>
                            <code>
                                black
                            </code>
                        </td>
                        <td>
                            <code>
                                #000000
                            </code>
                        </td>
                        <td>
                            <code>
                                rgb(0,0,0)
                            </code>
                        </td>
                        <td>
                            Schwarz
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <code>
                                gray
                            </code>
                        </td>
                        <td>
                            <code>
                                #808080
                            </code>
                        </td>
                        <td>
                            <code>
                                rgb(128,128,128)
                            </code>
                        </td>
                        <td>
                            Grau
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <code>
                                silver
                            </code>
                        </td>
                        <td>
                            <code>
                                #C0C0C0
                            </code>
                        </td>
                        <td>
                            <code>
                                rgb(192,192,192)
                            </code>
                        </td>
                        <td>
                            Silber
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <code>
                                white
                            </code>
                        </td>
                        <td>
                            <code>
                                #FFFFFF
                            </code>
                        </td>
                        <td>
                            <code>
                                rgb(255,255,255)
                            </code>
                        </td>
                        <td>
                            Weiß
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <code>
                                purple
                            </code>
                        </td>
                        <td>
                            <code>
                                #800080
                            </code>
                        </td>
                        <td>
                            <code>
                                rgb(128,0,128)
                            </code>
                        </td>
                        <td>
                            Violett
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <code>
                                fuchsia
                            </code>
                        </td>
                        <td>
                            <code>
                                #FF00FF
                            </code>
                        </td>
                        <td>
                            <code>
                                rgb(255,0,255)
                            </code>
                        </td>
                        <td>
                            Fuchsia
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <code>
                                maroon
                            </code>
                        </td>
                        <td>
                            <code>
                                #800000
                            </code>
                        </td>
                        <td>
                            <code>
                                rgb(128,0,0)
                            </code>
                        </td>
                        <td>
                            Kastanienbraun
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <code>
                                red
                            </code>
                        </td>
                        <td>
                            <code>
                                #FF0000
                            </code>
                        </td>
                        <td>
                            <code>
                                rgb(255,0,0)
                            </code>
                        </td>
                        <td>
                            Rot
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <code>
                                olive
                            </code>
                        </td>
                        <td>
                            <code>
                                #808000
                            </code>
                        </td>
                        <td>
                            <code>
                                rgb(128,128,0)
                            </code>
                        </td>
                        <td>
                            Olivgrün
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <code>
                                yellow
                            </code>
                        </td>
                        <td>
                            <code>
                                #FFFF00
                            </code>
                        </td>
                        <td>
                            <code>
                                rgb(255,255,0)
                            </code>
                        </td>
                        <td>
                            Gelb
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <code>
                                green
                            </code>
                        </td>
                        <td>
                            <code>
                                #008000
                            </code>
                        </td>
                        <td>
                            <code>
                                rgb(0,128,0)
                            </code>
                        </td>
                        <td>
                            Grün
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <code>
                                lime
                            </code>
                        </td>
                        <td>
                            <code>
                                #00FF00
                            </code>
                        </td>
                        <td>
                            <code>
                                rgb(0,255,0)
                            </code>
                        </td>
                        <td>
                            Limonengelb
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <code>
                                navy
                            </code>
                        </td>
                        <td>
                            <code>
                                #000080
                            </code>
                        </td>
                        <td>
                            <code>
                                rgb(0,0,128)
                            </code>
                        </td>
                        <td>
                            Navyblau
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <code>
                                blue
                            </code>
                        </td>
                        <td>
                            <code>
                                #0000FF
                            </code>
                        </td>
                        <td>
                            <code>
                                rgb(0,0,255)
                            </code>
                        </td>
                        <td>
                            Blau
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <code>
                                teal
                            </code>
                        </td>
                        <td>
                            <code>
                                #008080
                            </code>
                        </td>
                        <td>
                            <code>
                                rgb(0,128,128)
                            </code>
                        </td>
                        <td>
                            Blaugrün
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <code>
                                aqua
                            </code>
                        </td>
                        <td>
                            <code>
                                #00FFFF
                            </code>
                        </td>
                        <td>
                            <code>
                                rgb(0,255,255)
                            </code>
                        </td>
                        <td>
                            Aquamarinblau
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <code>
                                orange
                            </code>
                        </td>
                        <td>
                            <code>
                                #FFA500
                            </code>
                        </td>
                        <td>
                            <code>
                                rgb(255,165,0)
                            </code>
                        </td>
                        <td>
                            Orange
                        </td>
                    </tr>
                </table>
            </chapter>

            <chapter id="values-colors-hex" title="Hexadezimal">
                <p>
                    Die hexadezimale Schreibweise ist die am häufigsten verwendete Methode, um Farben in CSS zu
                    definieren. Die Farbe wird durch eine Kombination von sechs Hexadezimalzahlen dargestellt, die in
                    drei Gruppen von je zwei Zahlen unterteilt sind. Jede Gruppe repräsentiert einen Farbkanal: Rot,
                    Grün und Blau (RGB: <code>#RRGGBB</code>). Jede Zahl kann einen Wert zwischen <code>0</code> und
                    <code>255</code> annehmen, wobei <code>0</code> für die niedrigste und <code>255</code> für die
                    höchste Intensität steht. Mit einer solchen RGB-Mischung lassen sich rein theoretisch
                    <code>255 * 255 * 255</code> (über 16,7 Mio.) Farben darstellen.
                </p>

                <!-- @formatter:off -->
                <code-block lang="css">
                    <![CDATA[
                        h1 {
                            color: #FF0000;            /* Rot  */
                            background-color: #00FF00; /* Grün */
                            border-color: #0000FF;     /* Blau */
                        }
                    ]]>
                </code-block>
                <!-- @formatter:on -->

                <p>
                    In CSS kann die hexadezimale Schreibweise auch in Kurzform verwendet werden. Dabei wird jede
                    Farbkomponente auf eine Ziffer reduziert, indem die Ziffern verdoppelt werden. Zum Beispiel wird
                    <code>#FF0000</code> zu <code>#F00</code> und <code>#00FF00</code> zu <code>#0F0</code>. Dies ist
                    natürlich nur möglich, wenn die Farbkomponenten identisch sind.
                </p>
            </chapter>

            <chapter id="values-colors-rgb" title="RGB-Mischung">
                <p>
                    Die RGB-Mischung ist eine weitere Möglichkeit, Farben in CSS zu definieren. Die Farbe wird durch
                    drei Werte dargestellt, die die Intensität der Farbkanäle Rot, Grün und Blau angeben. Jeder Wert
                    kann zwischen <code>0</code> und <code>255</code> liegen. Für die RGB-Mischung wird die Funktion
                    <code>rgb()</code> verwendet, die die drei Werte in Klammern enthält.
                </p>

                <!-- @formatter:off -->
                <code-block lang="css">
                    <![CDATA[
                        h1 {
                            color: rgb(255,0,0);            /* Rot  */
                            background-color: rgb(0,255,0); /* Grün */
                            border-color: rgb(0,0,255);     /* Blau */
                        }
                    ]]>
                </code-block>
                <!-- @formatter:on -->
            </chapter>

            <chapter id="values-colors-rgba" title="RGB-Mischung mit Transparenz">
                <p>
                    Mit der Funktion <code>rgba()</code> können Farben in CSS definiert werden, die zusätzlich eine
                    Transparenzkomponente enthalten. Die Transparenz wird durch einen Wert zwischen <code>0</code> und
                    <code>1</code> definiert, wobei <code>0</code> für vollständig transparent und <code>1</code> für
                    vollständig undurchsichtig steht.
                </p>

                <!-- @formatter:off -->
                <code-block lang="css">
                    <![CDATA[
                        h1 {
                            color: rgba(255,0,0,0.5);            /* Rot mit 50% Transparenz  */
                            background-color: rgba(0,255,0,0.5); /* Grün mit 50% Transparenz */
                            border-color: rgba(0,0,255,0.5);     /* Blau mit 50% Transparenz */
                        }
                    ]]>
                </code-block>
                <!-- @formatter:on -->
            </chapter>

            <chapter id="values-colors-hsl" title="HSL-Mischung">
                <p>
                    Ab CSS Level 3 gibt es eine weitere Möglichkeit, Farben in CSS zu definieren: die HSL-Mischung. HSL
                    steht für <i>Hue</i> (Farbton), <i>Saturation</i> (Sättigung) und <i>Lightness</i> (Helligkeit).
                </p>

                <p>
                    Viele Webdesigner finden es intuitiver oder einfacher zu merken, den Farbton mit einem ganzzahligen
                    Wert von 0 bis 360 anzugeben. Hierfür müssen Sie sich einen Farbkreis von 0 bis 359 Grad vorstellen,
                    wobei der Wert 0 bzw. 360 für Rot, 120 für Grün und 240 für Blau steht.
                </p>

                <p>
                    Die Werte von Sättigung und Helligkeit werden in Prozent angegeben. Je stärker der Wert der
                    Sättigung von 100 % auf 0 % reduziert wird, desto mehr wird der Farbton zu einem Grau. Die
                    normale Helligkeit hingegen wird mit dem Wert 50 % angezeigt. Eine Helligkeit von 100 % ist Weiß und
                    eine Helligkeit von 0 % Schwarz.
                </p>

                <!-- @formatter:off -->
                <code-block lang="css">
                    <![CDATA[
                        h1 {
                            color: hsl(0,100%,50%);              /* Rot  */
                            background-color: hsl(120,100%,50%); /* Grün */
                            border-color: hsl(240,100%,50%);     /* Blau */
                        }
                    ]]>
                </code-block>
                <!-- @formatter:on -->
            </chapter>

            <chapter id="values-colors-hsla" title="HSL-Mischung mit Transparenz">
                <p>
                    Mit der Funktion <code>hsla()</code> können Farben in CSS definiert werden, die zusätzlich eine
                    Transparenzkomponente enthalten. Die Transparenz wird durch einen Wert zwischen <code>0</code> und
                    <code>1</code> definiert, wobei <code>0</code> für vollständig transparent und <code>1</code> für
                    vollständig undurchsichtig steht.
                </p>

                <!-- @formatter:off -->
                <code-block lang="css">
                    <![CDATA[
                        h1 {
                            color: hsla(0,100%,50%,0.5);
                            background-color: hsla(120,100%,50%,0.5);
                            border-color: hsla(240,100%,50%,0.5);
                        }
                    ]]>
                </code-block>
                <!-- @formatter:on -->
            </chapter>
        </chapter>

        <chapter id="values-angle-time" title="Winkelmaße und Zeit">
            <p>
                Neben den bereits genannten Maßeinheiten gibt es in CSS noch weitere, die für spezielle Anforderungen
                gedacht sind. Dazu gehören die Winkelmaße und die Zeitangaben.
            </p>

            <table style="header-row">
                <tr>
                    <td>Maßeinheit</td>
                    <td>CSS-Name</td>
                    <td>Beschreibung</td>
                </tr>
                <tr>
                    <td>
                        Grad
                    </td>
                    <td>
                        <code>
                            deg
                        </code>
                    </td>
                    <td>
                        <p>
                            Winkel in Grad (englisch: <i>degree</i>); ein kompletter Kreis entspricht 360 Grad, z.B.:
                        </p>

                        <!-- @formatter:off -->
                        <code-block lang="css">
                            <![CDATA[
                                transform: rotate(90deg);
                            ]]>
                        </code-block>
                        <!-- @formatter:on -->
                    </td>
                </tr>
                <tr>
                    <td>
                        Gon
                    </td>
                    <td>
                        <code>
                            grad
                        </code>
                    </td>
                    <td>
                        <p>
                            Winkel in Gon (englisch: <i>grad</i>), ein kompletter Kreis entspricht 400 Gon. 100 Gon
                            entsprechen einer <code>90°</code>-Drehung, z.B.:
                        </p>

                        <!-- @formatter:off -->
                        <code-block lang="css">
                            <![CDATA[
                                transform: rotate(100grad);
                            ]]>
                        </code-block>
                        <!-- @formatter:on -->
                    </td>
                </tr>
                <tr>
                    <td>
                        Radiant
                    </td>
                    <td>
                        <code>
                            rad
                        </code>
                    </td>
                    <td>
                        <p>
                            Winkel in Bogenmaß (englisch: <i>radian</i>); ein kompletter Kreis entspricht hier
                            <code>2 Pi = 6,2831853</code>, z.B.:
                        </p>

                        <!-- @formatter:off -->
                        <code-block lang="css">
                            <![CDATA[
                                transform: rotate(5.5rad);
                            ]]>
                        </code-block>
                        <!-- @formatter:on -->
                    </td>
                </tr>
                <tr>
                    <td>
                        Vollwinkel
                    </td>
                    <td>
                        <code>
                            turn
                        </code>
                    </td>
                    <td>
                        <p>
                            Ein Vollwinkel ist eine Kreisumrundung (<code>0.25turn</code> entspricht einer
                            <code>90°</code>-Drehung; <code>1turn</code> = <code>360°</code>). Zum Zeitpunkt der
                            Drucklegung dieses Buches war nur Firefox in der Lage, mit dieser Einheit zu arbeiten. Zum
                            Beispiel:
                        </p>

                        <!-- @formatter:off -->
                        <code-block lang="css">
                            <![CDATA[
                                transform: rotate(0.25turn);
                            ]]>
                        </code-block>
                        <!-- @formatter:on -->
                    </td>
                </tr>
                <tr>
                    <td>
                        Sekunde
                    </td>
                    <td>
                        <code>
                            s
                        </code>
                    </td>
                    <td>
                        <!-- @formatter:off -->
                        <code-block lang="css">
                            <![CDATA[
                                transition-delay: 2s;
                            ]]>
                        </code-block>
                        <!-- @formatter:on -->
                    </td>
                </tr>
                <tr>
                    <td>
                        Millisekunde
                    </td>
                    <td>
                        <code>
                            ms
                        </code>
                    </td>
                    <td>
                        <!-- @formatter:off -->
                        <code-block lang="css">
                            <![CDATA[
                                transition-delay: 2ms;
                            ]]>
                        </code-block>
                        <!-- @formatter:on -->
                    </td>
                </tr>
            </table>
        </chapter>

        <chapter id="values-abbreviation" title="Kurzschreibweise">
            <p>
                Mit Kurzschreibweisen in CSS können Sie einige CSS-Eigenschaften zusammenfassen und in einem »Rutsch«
                notieren. Folgendes bedeutet dasselbe:
            </p>

            <!-- @formatter:off -->
            <compare>
                <code-block lang="css">
                    .my_article {
                        margin-top: 25px;     /* Oberer Abstand  */
                        margin-right: 25px;   /* Rechter Abstand */
                        margin-bottom: 25px;  /* Unterer Abstand */
                        margin-left: 25px;    /* Linker Abstand  */
                    }
                </code-block>
                <code-block lang="css">
                    .my_article {
                        margin: 25px;
                    }
                </code-block>
            </compare>
            <!-- @formatter:on -->

            <p>
                Ohne näher auf die einzelnen Funktionen einzugehen, enthalten folgende Zeilen alle Kurzschreibweisen
                von mehreren CSS-Eigenschaften:
            </p>

            <!-- @formatter:off -->
            <code-block lang="css">
                <![CDATA[
                    padding: 20px 30px 10px 20px;
                    border: 1px solid yellow;
                    background: orange url('background.jpg') no-repeat left top;
                    font: bold 16px Arial, Helvetica;
                    list-style: square inside url(bullet.png);
                    outline: blue dotted thick;
                ]]>
            </code-block>
            <!-- @formatter:on -->
        </chapter>
    </chapter>

    <chapter id="browser" title="CSS im Webbrowser analysieren">
        <p>
            Die Entwicklerwerkzeuge eines Browsers sind ein mächtiges Werkzeug, zum Analysieren und Debuggen von
            Webseiten, welches jeder Browser mitbringt. Neben dem HTML kann hier auch dad CSS analysiert werden. Das ist
            besonders hilfreich, wenn man die Auswirkungen von CSS-Regeln auf ein Element überprüfen möchte, oder
            wenn man erfahren will, wie andere Webseiten ein bestimmtes Element gestaltet haben. Zu Testzwecken kann in
            den Entwicklerwerkzeugen auch direkt CSS-Code eingegeben werden, um die Auswirkungen auf die Webseite zu
            sehen. Auch können hier CSS-Regeln direkt bearbeitet, aktiviert oder deaktiviert werden. Die Änderungen sind
            nur visueller Natur. Die Dateien bleiben unberührt.
        </p>

        <p>
            Bei fast allen Webbrowsern werden die Entwicklerwerkzeuge über die Tastenkombination
            <code>CTRL + SHIFT + I</code> oder <code>F12</code> oder auf dem Mac <code>CMD + OPTION + I</code> oder
            <code>CMD + OPTION + C</code> oder <code>F12</code> geöffnet.
        </p>

        <tip>
            Mehr zu den Entwicklerwerkzeugen im Browser hier: <a href="web-dev-tools.topic"/>
        </tip>
    </chapter>

    <chapter id="frameworks" title="CSS Frameworks">
        <p>
            Ein <a href="css-frameworks.topic">CSS-Framework</a> ist eine Sammlung vorgefertigter Stylesheets, die die
            Arbeit von UI-Entwicklern erleichtern. Anstatt jedes Projekt von Grund auf neu mit CSS zu beginnen, bieten
            CSS-Frameworks Werkzeuge, um schnell Benutzeroberflächen zu erstellen, die wiederholt und angepasst werden
            können.
        </p>

        <list type="bullet">
            <li>
                <a href="css-bootstrap.topic"><b>Bootstrap:</b></a> Weit verbreitet und bietet umfangreiche
                Komponenten und vordefinierte Stile. Es zielt darauf ab, schnell funktionale und responsive Designs zu
                erstellen.
            </li>
            <li>
                <a href="css-tailwindcss.topic"><b>Tailwind:</b></a> Bietet mehr Flexibilität und Individualität, indem
                es utility-first Klassen bereitstellt. Entwickler haben mehr Kontrolle über das finale Design.
            </li>
        </list>

        <p>
            Beide Frameworks haben ihre Stärken: Bootstrap für schnelles und standardisiertes Design, Tailwind für
            maßgeschneiderte und flexible Lösungen. Ideal, um den Entwicklungsprozess zu beschleunigen und konsistente
            Ergebnisse zu erzielen.
        </p>

        <tip>
            Mehr dazu hier: <a href="css-frameworks.topic"/>
        </tip>
    </chapter>

    <chapter id="preprocessor" title="CSS Preprozessoren">
        <!-- TODO -->
    </chapter>

    <chapter id="quellen" title="Quellen">
        <tip>
            <b>(BUCH)</b>
            978-3836297288, "HTML und CSS - Das umfassende Handbuch", Jürgen Wolf, 2023
        </tip>
    </chapter>
</topic>