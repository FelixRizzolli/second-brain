<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic id="css"
       title="CSS (Cascading Style Sheets)"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd">
    <show-structure depth="2" for="chapter,procedure"/>
    <link-summary rel="description"/>

    <!-- TODO -->
    <chapter id="was-ist-css" title="Was ist CSS?">
        <p id="description">
            <b>CSS (Cascading Style Sheets)</b> ist eine Gestaltungssprache, die verwendet wird, um das Layout und
            Design von HTML-Dokumenten zu definieren. Während HTML die Struktur und den Inhalt einer Webseite festlegt,
            sorgt CSS dafür, dass diese Inhalte visuell ansprechend präsentiert werden.
        </p>

        <p>
            Hauptfunktionen und Vorteile von CSS sind:
        </p>

        <list type="bullet">
            <li>
                <b>Trennung von Inhalt und Layout:</b> HTML strukturiert die Inhalte, während CSS für das Styling und
                die visuelle Darstellung verantwortlich ist. Dies sorgt für eine saubere Trennung, was die Wartung und
                Verwaltung der Webseiten vereinfacht.
            </li>
            <li>
                <b>Flexibilität und Konsistenz:</b> Durch die Nutzung einer zentralen CSS-Datei können Änderungen am
                Design einer Webseite schnell und konsistent umgesetzt werden, ohne den HTML-Code anpassen zu müssen.
            </li>
            <li>
                <b>Gestaltungsvielfalt:</b> CSS ermöglicht eine Vielzahl von Gestaltungsmöglichkeiten, wie z. B. Farben,
                Schriftarten, Abstände, Positionierungen und mehr. Dadurch können Entwickler und Designer kreative und
                individuelle Designs umsetzen.
            </li>
            <li>
                <b>Responsives Design:</b> CSS unterstützt auch das responsive Design, was bedeutet, dass Webseiten auf
                verschiedenen Geräten und Bildschirmgrößen optimal dargestellt werden können.
            </li>
        </list>

        <p>
            Im Wesentlichen ist CSS das Werkzeug, das Webseiten ihr Aussehen und Gefühl verleiht, indem es sicherstellt,
            dass sie nicht nur funktional, sondern auch optisch ansprechend sind.
        </p>
    </chapter>

    <chapter id="basics" title="Grundlagen">
        <chapter id="basics-usage" title="Anwendung">
            <p>
                CSS-Regeln bestehen aus einem Selektor und einer Deklaration:
            </p>

            <list type="bullet">
                <li>
                    <p>
                        <b>Selektor(en)</b>
                    </p>

                    <p>
                        Mit einem Selektor wird festgelegt, auf welche Elemente die folgenden Deklarationen
                        angewendet. Es ist auch möglich, mehrere Selektoren zu kombinieren, um die Deklarationen auf
                        verschiedene Elemente anzuwenden. Dabei werden die einzelnen Selektoren durch ein Komma
                        getrennt.
                    </p>

                    <!-- @formatter:off -->
                    <code-block lang="css">
                        <![CDATA[
                            h1 {
                                font-family: "Arial";
                                color: red;
                                text-align: center;
                            }

                            h2,
                            h3 {
                                font-family: "Courier";
                                color: blue;
                            }
                        ]]>
                    </code-block>
                    <!-- @formatter:on -->
                </li>
                <li>
                    <p>
                        <b>Deklatation(en)</b>
                    </p>

                    <p>
                        Mit Deklarationen wird festgelegt, wie die ausgewählten Elemente formatiert werden sollen. Eine
                        Deklaration besteht aus einem Eigenschafts-Wert-Paar, wobei die Eigenschaft den Aspekt des
                        Elements definiert und der Wert den Wert dieser Eigenschaft angibt. In folgendem Beispiel wird
                        die Schriftfarbe (<code>color</code> → Eigenschaft) eines <code>h1</code>-Elements auf rot
                        (<code>red</code> → Wert) gesetzt:
                    </p>

                    <!-- @formatter:off -->
                    <code-block lang="css">
                        <![CDATA[
                            h1 {
                                color: red;
                            }
                        ]]>
                    </code-block>
                    <!-- @formatter:on -->
                </li>
                <li>
                    <p>
                        <b>Kommentare</b>
                    </p>

                    <p>
                        Kommentare in CSS beginnen mit <code>/*</code> und enden mit <code>*/</code>. Sie können
                        verwendet werden, um den Code zu dokumentieren oder temporäre Änderungen zu kennzeichnen.
                        Sinnvoll sind Kommentare auch, wenn man die Stylesheets in Abschnitte unterteilen möchte, um
                        die Übersichtlichkeit zu erhöhen.
                    </p>

                    <!-- @formatter:off -->
                    <code-block lang="css">
                        <![CDATA[
                            /* Erzeugt einen Kreis */
                            /* Achtung! Funktioniert nicht mit IE8 oder älter */
                            .circle {
                                height: 50px;
                                width: 50px;
                                border-radius: 50px;
                            }}
                        ]]>
                    </code-block>
                    <!-- @formatter:on -->
                </li>
            </list>

            <note>
                <p>
                    <b>
                        Empfehlungen
                    </b>
                </p>

                <p>
                    Es ist Empfehlenswert, für jede CSS-Deklaration eine Extrazeile zu verwenden und diese einzurücken.
                    Die schließende Klammer sollte auch in eine eigene Zeile geschrieben werden. Folgendes ist zwar
                    möglich, aber unübersichtlich:
                </p>

                <!-- @formatter:off -->
                <code-block lang="css">
                    <![CDATA[
                        h2,h3{font-family:"Courier";color:blue;text-align:center;}
                    ]]>
                </code-block>
                <!-- @formatter:on -->
            </note>
        </chapter>

        <chapter id="basics-include" title="In HTML einbinden">

        </chapter>

        <chapter id="basics-inheritance-cascading" title="Vererbung und Kaskade">

        </chapter>
    </chapter>

    <chapter id="values" title="Werte">
        <chapter id="values-measure-units" title="Maßeinheiten">

        </chapter>

        <chapter id="values-colors" title="Farben">

        </chapter>

        <chapter id="values-angle" title="Winkelmaße">

        </chapter>

        <chapter id="values-abbreviation" title="Kurzschreibweise">

        </chapter>
    </chapter>

    <chapter id="browser" title="CSS im Webbrowser analysieren">

    </chapter>

    <chapter id="frameworks" title="CSS Frameworks">
        <p>
            Ein <a href="css-frameworks.topic">CSS-Framework</a> ist eine Sammlung vorgefertigter Stylesheets, die die
            Arbeit von UI-Entwicklern erleichtern. Anstatt jedes Projekt von Grund auf neu mit CSS zu beginnen, bieten
            CSS-Frameworks Werkzeuge, um schnell Benutzeroberflächen zu erstellen, die wiederholt und angepasst werden
            können.
        </p>

        <list type="bullet">
            <li>
                <a href="css-bootstrap.topic"><b>Bootstrap:</b></a> Weit verbreitet und bietet umfangreiche
                Komponenten und vordefinierte Stile. Es zielt darauf ab, schnell funktionale und responsive Designs zu
                erstellen.
            </li>
            <li>
                <a href="css-tailwindcss.topic"><b>Tailwind:</b></a> Bietet mehr Flexibilität und Individualität, indem
                es utility-first Klassen bereitstellt. Entwickler haben mehr Kontrolle über das finale Design.
            </li>
        </list>

        <p>
            Beide Frameworks haben ihre Stärken: Bootstrap für schnelles und standardisiertes Design, Tailwind für
            maßgeschneiderte und flexible Lösungen. Ideal, um den Entwicklungsprozess zu beschleunigen und konsistente
            Ergebnisse zu erzielen.
        </p>

        <tip>
            Mehr dazu hier: <a href="css-frameworks.topic"/>
        </tip>
    </chapter>

    <chapter id="preprocessor" title="CSS Preprozessoren">
        <!-- TODO -->
    </chapter>

    <chapter id="quellen" title="Quellen">
        <tip>
            <b>(BUCH)</b>
            978-3836297288, "HTML und CSS - Das umfassende Handbuch", Jürgen Wolf, 2023
        </tip>
    </chapter>
</topic>