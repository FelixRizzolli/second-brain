<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic id="rdbms-datenbankmodellierung-normalisierung"
       title="Die Normalisierung"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd">
    <show-structure depth="2" for="chapter,procedure"/>

    <chapter id="grundlagen" title="Grundlagen">
        <p>
            Die Normalisierung ist eine Methode um die Qualität eines Datenbankmodells zu optimieren. Dazu durchläuft
            das Datenbankmodell die sogenannten Normalformen, deren Ziel es ist Redundanzen zu vermeiden.
        </p>

        <chapter id="grundlagen-redundanz" title="Redundanz">
            <p>
                Eine Redundanz ist dann gegeben, wenn die exakt gleiche Information mehrfach vorhanden und somit
                überflüssig ist. Durch Redundanz wird viel unnötiger Speicherplatz und Rechenleistung beansprucht, um
                die Daten zu bearbeiten. Das noch viel größere Problem bilden die sogenannten Einfüge-, Änderungs- und
                Löschanomalien, die dabei entstehen und die konsistente Verwaltung der Daten sehr erschweren oder sogar
                unmöglich machen. Mehr dazu im Beispiel.
            </p>

            <chapter collapsible="true" id="grundlagen-redundanz-beispiel" title="Beispiel für Redundanz">
                <table>
                    <tr>
                        <td>id</td>
                        <td>berufsbezeichnung</td>
                        <td>lehrfach</td>
                    </tr>
                    <tr>
                        <td>1</td>
                        <td>Elektroniker</td>
                        <td>Deutsch</td>
                    </tr>
                    <tr>
                        <td>2</td>
                        <td>Elektroniker</td>
                        <td>Mathematik</td>
                    </tr>
                    <tr>
                        <td>3</td>
                        <td>Elektroniker</td>
                        <td>Integrierte Schaltungstechnik</td>
                    </tr>
                    <tr>
                        <td>4</td>
                        <td>Industriekaufmann</td>
                        <td>Deutsch</td>
                    </tr>
                    <tr>
                        <td>5</td>
                        <td>Industriekaufmann</td>
                        <td>Kommunikation</td>
                    </tr>
                    <tr>
                        <td>6</td>
                        <td>Industriekaufmann</td>
                        <td>Englisch</td>
                    </tr>
                    <tr>
                        <td>7</td>
                        <td>Betriebswirt</td>
                        <td>Deutsch</td>
                    </tr>
                    <tr>
                        <td>8</td>
                        <td>Betriebswirt</td>
                        <td>Kommunikation</td>
                    </tr>
                    <tr>
                        <td>9</td>
                        <td>Betriebswirt</td>
                        <td>Buchhaltung</td>
                    </tr>
                </table>

                <p>
                    Zweck der Tabelle ist, eine Zuordnung von Ausbildungsberufen und Lehrfächern datentechnisch
                    abzubilden.
                    Das Problem: sie ist voll von redundanten Informationen. Die Werte der Spalte
                    <emphasis>berufsbezeichnung</emphasis>
                    sind jeweils in drei Zeilen enthalten. Die Spalte
                    <emphasis>lehrfach</emphasis>
                    enthält ebenfalls einige redundant vorkommende Werte. Zudem:
                </p>

                <list>
                    <li>
                        Soll hier eine Berufsbezeichnung geändert werden, so muss dies auf allen Datensätzen geschehen,
                        in
                        der diese vorkommt.
                    </li>
                    <li>
                        Soll beispielsweise das Berufsbild Elektroniker gelöscht werden, so werden auch sämtliche
                        Lehrfächer, die dem Berufsbild zugeordnet sind gelöscht.
                    </li>
                    <li>
                        Und noch weitere Probleme könnten auftreten ...
                    </li>
                </list>
            </chapter>
        </chapter>

        <chapter id="grundlagen-normalisierung" title="Normalisierung">
            <p>
                Unter Normalisierung versteht man die schrittweise Entfernung von Redundanzen in einem Datenmodell. Es
                werden dazu mehrfach vorkommende Daten in einer oder mehreren Tabellen bearbeitet. Bei den drei
                Normalformen handelt es sich um drei Bedingungen, die aufeinanderfolgend erfüllt sein müssen, um
                Redundanzen zu vermeiden.
            </p>
        </chapter>
    </chapter>

    <chapter id="erste-normalform" title="Die 1. Normalform">
        <p>
            Eine Tabelle ist in der 1. Normalform, wenn die Attribute einer Entität atomar sind und keine mehrfach
            vorkommenden Werte enthalten. Attribute sind atomar, wenn sie nicht mehr teilbar sind. Ein Attribut Person
            ist z.B. in die Attribute Name, Vorname und Geburtsdatum teilbar. Eine weitere Voraussetzung ist die
            Einwertigkeit der Attribute. Einwertigkeit bedeutet, dass ein Attribut jeweils nur ein Wert zulässig ist.
        </p>

        <chapter id="erste-normalform-nichtatomar" title="Beispiel einer nicht atomaren Tabelle">
            <table>
                <tr>
                    <td>ausid</td>
                    <td>auszubildender</td>
                    <td>adresse</td>
                </tr>
                <tr>
                    <td>1</td>
                    <td>Müller Ralf</td>
                    <td>Mondstraße 8, 50827, Köln</td>
                </tr>
                <tr>
                    <td>2</td>
                    <td>Klein Sabine</td>
                    <td>Sternstraße 10, 50127, Bonn</td>
                </tr>
                <tr>
                    <td>3</td>
                    <td>Lang Peter</td>
                    <td>Sonnenstraße 1, 50127, Bonn</td>
                </tr>
                <tr>
                    <td>4</td>
                    <td>August Frank</td>
                    <td>Jupiterstraße 7, 50827, Köln</td>
                </tr>
                <tr>
                    <td>5</td>
                    <td>Müller Ralf</td>
                    <td>Marsstraße 87, 50827, Köln</td>
                </tr>
                <tr>
                    <td>6</td>
                    <td>Klein Sabine</td>
                    <td>Uranusstraße 36, 50127, Bonn</td>
                </tr>
            </table>
        </chapter>

        <chapter id="erste-normalform-atomar" title="Beispiel einer atomaren Tabelle">
            <table>
                <tr>
                    <td>ausid</td>
                    <td>name</td>
                    <td>vorname</td>
                    <td>strasse</td>
                    <td>nr.</td>
                    <td>plz</td>
                    <td>ort</td>
                </tr>
                <tr>
                    <td>1</td>
                    <td>Müller</td>
                    <td>Ralf</td>
                    <td>Mondstraße</td>
                    <td>8</td>
                    <td>50827</td>
                    <td>Köln</td>
                </tr>
                <tr>
                    <td>2</td>
                    <td>Klein</td>
                    <td>Sabine</td>
                    <td>Sternstraße</td>
                    <td>10</td>
                    <td>50127</td>
                    <td>Bonn</td>
                </tr>
                <tr>
                    <td>3</td>
                    <td>Lang</td>
                    <td>Peter</td>
                    <td>Sonnenstraße</td>
                    <td>1</td>
                    <td>50127</td>
                    <td>Bonn</td>
                </tr>
                <tr>
                    <td>4</td>
                    <td>August</td>
                    <td>Frank</td>
                    <td>Jupiterstraße</td>
                    <td>7</td>
                    <td>50827</td>
                    <td>Köln</td>
                </tr>
                <tr>
                    <td>5</td>
                    <td>Müller</td>
                    <td>Ralf</td>
                    <td>Marsstraße</td>
                    <td>87</td>
                    <td>50827</td>
                    <td>Köln</td>
                </tr>
                <tr>
                    <td>6</td>
                    <td>Klein</td>
                    <td>Sabine</td>
                    <td>Uranusstraße</td>
                    <td>36</td>
                    <td>50827</td>
                    <td>Köln</td>
                </tr>
            </table>
        </chapter>
    </chapter>

    <chapter id="zweite-normalform" title="Die 2. Normalform">
        <p>
            Die 2. Normalform ist dann erfüllt, wenn alle Nicht-Schlüsselattribute von einem ganzheitlichen Schlüssel
            und nicht von einem Teil eines Schlüssels abhängig sind und außerdem die 1. Normalform erfüllt ist. Ein
            ganzheitlicher Schlüssel kann aus einem oder mehreren Attributen bestehen. Alle nicht Schlüsselattribute
            müssen eindeutig von diesem ganzheitlichen Schlüssel abhängig sein. Existieren hingegen Attribute, die nur
            von einem Teil des Schlüssels (ein Schlüssel, der aus mehreren Attributen besteht) abhängig sind, so ist die
            2. Normalform nicht erfüllt.
        </p>
        <p>
            Die ganzheitliche Abhängigkeit von Attributen zu einem ganzheitlichen Schlüssel wird auch als voll
            funktionale Abhängigkeit bezeichnet. Die mathematische Definition lautet: <code>f(x)=y</code>, wobei
            <code>f(x)</code> den Wert auf der <code>y</code>-Achse beschreibt. Jeder <code>y</code>-Wert ist also
            abhängig von einem <code>x</code>-Wert. Es verhält sich also genauso wie die Nicht-Schlüsselattribute, die
            abhängig von einem gesamtheitlichen Schlüsselattribut sind.
        </p>

        <chapter id="zweite-normalform-beispiel" title="Beispiel in der 2. Normalform">
            <table>
                <tr>
                    <td>ausid</td>
                    <td>name</td>
                    <td>vorname</td>
                </tr>
                <tr>
                    <td>1</td>
                    <td>Müller</td>
                    <td>Ralf</td>
                </tr>
                <tr>
                    <td>2</td>
                    <td>Klein</td>
                    <td>Sabine</td>
                </tr>
                <tr>
                    <td>3</td>
                    <td>Lang</td>
                    <td>Peter</td>
                </tr>
                <tr>
                    <td>4</td>
                    <td>August</td>
                    <td>Frank</td>
                </tr>
            </table>
            <table>
                <tr>
                    <td>adressid</td>
                    <td>ausid</td>
                    <td>strasse</td>
                    <td>nr.</td>
                    <td>plz</td>
                    <td>ort</td>
                </tr>
                <tr>
                    <td>1</td>
                    <td>1</td>
                    <td>Mondstraße</td>
                    <td>8</td>
                    <td>50827</td>
                    <td>Köln</td>
                </tr>
                <tr>
                    <td>2</td>
                    <td>2</td>
                    <td>Sternstraße</td>
                    <td>10</td>
                    <td>50127</td>
                    <td>Bonn</td>
                </tr>
                <tr>
                    <td>3</td>
                    <td>3</td>
                    <td>Sonnenstraße</td>
                    <td>1</td>
                    <td>50127</td>
                    <td>Bonn</td>
                </tr>
                <tr>
                    <td>4</td>
                    <td>4</td>
                    <td>Jupiterstraße</td>
                    <td>7</td>
                    <td>50827</td>
                    <td>Köln</td>
                </tr>
                <tr>
                    <td>5</td>
                    <td>1</td>
                    <td>Marsstraße</td>
                    <td>87</td>
                    <td>50827</td>
                    <td>Köln</td>
                </tr>
                <tr>
                    <td>6</td>
                    <td>2</td>
                    <td>Uranusstraße</td>
                    <td>36</td>
                    <td>50827</td>
                    <td>Köln</td>
                </tr>
            </table>
        </chapter>
    </chapter>

    <chapter id="dritte-normalform" title="Die 3. Normalform">
        <p>
            Die 3. Normalform ist erfüllt, wenn die ersten beiden Normalformen erfüllt sind und alle Attribute
            ausschließlich vom Gesamtschlüssel (der aus einem oder mehreren Attributen bestehen kann) abhängig sind.
            Damit ist gemeint, dass ein Attribut sich nicht in einer transitiven Abhängigkeit zu einem
            Nicht-Schlüsselattribut befinden darf. Eine transitive Abhängigkeit ist also gegeben, wenn ein Attribut auch
            von einem Nicht-Schlüsselattribut abhängig ist, das wiederum vom Gesamtschlüssel abhängig ist.
        </p>

        <chapter id="dritte-normalform-beispiel" title="Die 3. Normalform">
            <table>
                <tr>
                    <td>ausid</td>
                    <td>name</td>
                    <td>vorname</td>
                </tr>
                <tr>
                    <td>1</td>
                    <td>Müller</td>
                    <td>Ralf</td>
                </tr>
                <tr>
                    <td>2</td>
                    <td>Klein</td>
                    <td>Sabine</td>
                </tr>
                <tr>
                    <td>3</td>
                    <td>Lang</td>
                    <td>Peter</td>
                </tr>
                <tr>
                    <td>4</td>
                    <td>August</td>
                    <td>Frank</td>
                </tr>
            </table>
            <table>
                <tr>
                    <td>adressid</td>
                    <td>ausid</td>
                    <td>strasse</td>
                    <td>nr.</td>
                    <td>plz</td>
                </tr>
                <tr>
                    <td>1</td>
                    <td>1</td>
                    <td>Mondstraße</td>
                    <td>8</td>
                    <td>50827</td>
                </tr>
                <tr>
                    <td>2</td>
                    <td>2</td>
                    <td>Sternstraße</td>
                    <td>10</td>
                    <td>50127</td>
                </tr>
                <tr>
                    <td>3</td>
                    <td>3</td>
                    <td>Sonnenstraße</td>
                    <td>1</td>
                    <td>50127</td>
                </tr>
                <tr>
                    <td>4</td>
                    <td>4</td>
                    <td>Jupiterstraße</td>
                    <td>7</td>
                    <td>50827</td>
                </tr>
                <tr>
                    <td>5</td>
                    <td>1</td>
                    <td>Marsstraße</td>
                    <td>87</td>
                    <td>50827</td>
                </tr>
                <tr>
                    <td>6</td>
                    <td>2</td>
                    <td>Uranusstraße</td>
                    <td>36</td>
                    <td>50827</td>
                </tr>
            </table>
            <table>
                <tr>
                    <td>plz</td>
                    <td>ort</td>
                </tr>
                <tr>
                    <td>50127</td>
                    <td>Bonn</td>
                </tr>
                <tr>
                    <td>50827</td>
                    <td>Köln</td>
                </tr>
            </table>
        </chapter>
    </chapter>

    <chapter id="denormalisierung" title="Die Denormalisierung">
        <p>
            Das Auflösen von Normalformen wird als Denormalisierung verstanden. Eine Denormalisierung sollte nur nach
            einer intensiven Prüfung der fachlichen Anforderungen durchgeführt werden. Entitäten, die sich in der 1.
            oder der 2. Normalform befinden, sollten auf keinen Fall einer Denormalisierung unterzogen werden. Für die
            3. Normalform kann hingegen einer Denormalisierung sinnvoll sein. Dies hängt von den konkreten Anforderungen
            ab.
        </p>
        <p>
            Eine Motivation, ein Datenmodell zu denormalisieren, besteht darin, die Leistungsfähigkeit von Abfragen zu
            erhöhen.
        </p>

        <chapter id="denormalisierung-erste-normalform" title="Denormalisierung in der 1. Normalform">
            <p>
                Die 1. Normalform fordert, dass eine Entität atomar aufgebaut ist. Attribute einer Entität dürfen also
                nicht mehr teilbar sein. Auch wird in der ersten Normalform gefordert, dass keine Mehrwertigkeit
                besteht. Nachteile einer Tabelle, die diesen Anforderungen nicht genügen, sind immens. Die Wichtigste
                ist, dass Einfüge-, Änderungs- und Löschanomalien auftreten, die direkt aus der Nichteinhaltung der
                ersten Normalform erwachsen.
            </p>
        </chapter>

        <chapter id="denormalisierung-zweite-normalform" title="Denormalisierung in der 2. Normalform">
            <p>
                Die 2. Normalform fordert, dass ein Attribut ausschließlich von einem Gesamtschlüssel und nicht bloß von
                einem Teil eines Gesamtschlüssels abhängig ist. Die Auswirkungen der Rückführung der 2. Normalform sind
                in unserem Ausgangsbeispiel, dass sämtliche Informationen, die zum Auszubildenden gespeichert werden,
                mehrfach vorhanden sind - sie sind also redundant vorhanden. Daher treten auch hier Anomalien auf, wenn
                wir Einfüge-, Änderungs- und Löschoperationen durchführen. So müssen Sie beispielsweise eine komplette
                Zeile löschen, wenn Sie eine Adresse eines Auszubildenden mit mehreren Wohnorten entfernen möchten.
                Diese Löschoperation umfasst dann auch den Auszubildenden selbst. Und was passiert, wenn einem
                Auszubildenden nur ein Wohnort zugeordnet ist? in dem Fall kann die Adresse überhaupt nicht gelöscht
                werden ohne den Auszubildenden, dem die Adresse zugeordnet ist, zu entfernen. Es ist daher also auch
                nicht ratsam, die 2. Normalform zu denormalisieren.
            </p>
        </chapter>

        <chapter id="denormalisierung-dritte-normalform" title="Denormalisierung in der 3. Normalform">
            <p>
                Die 3. Normalform fordert, dass kein Attribut transitiv von einem Schlüssel abhängig sein darf, uns
                stellt so ebenfalls sicher, dass Redundanzen vermieden werden. Die Sicherstellung der 3. Normalform ist
                nicht unbedingt erforderlich. Die transitive Abhängigkeit eines Attributs von einem
                Nicht-Schlüsselattribut kann durchaus hingenommen werden, weil es die Komplexität eines Datenmodells
                mindert. Hierbei wird also eine Schlüsselbeziehung zwischen zwei Tabellen gespart. Die Tabellen, deren
                transitive Abhängigkeit nicht aufgelöst wurde, hat dann natürlich den Vorteil, dass zumindest in diesem
                Fall keine Zeilen verbunden abgefragt werden müssen und somit die Abfrage schneller durchgeführt werden
                kann. Auch hier kann es sinnvoll sein, eine Spalte einer Tabelle in der transitiven Abhängigkeit zu
                belassen. Wenn es aus fachlicher Sicht erforderlich ist, ein redundanzfreies Datenmodell zu schaffen,
                sollte die 3. Normalform umgesetzt werden. Hier kommt es also ganz auf die konkrete Aufgabenstellung an.
            </p>
        </chapter>
    </chapter>

    <chapter id="quellen" title="Quellen">
        <tip>
            <b>(BUCH)</b>
            978-3-836245630, Einstieg in SQL, Michael Laube, Rheinwerk Verlag GmbH, Bonn, 2018
        </tip>
    </chapter>
</topic>