<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       title="Das ER-Modell" id="rdbms-datenbankmodellierung-er">
    <show-structure for="chapter,procedure" depth="2"/>

    <chapter title="Einleitung" id="einleitung">
        <p>
            Um dieses Thema besser zu erklären, benötigt es zuerst ein Beispiel: Beim Beispiel handelt es sich um eine
            Ausbildungsdatenbank. Diese soll Ausbildungsfächer, Auszubildende, Ausbilder und einiges mehr verwalten.
            Diese real existierenden Daten sollen nun datentechnisch abgebildet werden.
        </p>

        <chapter title="Der Anforderungskatalog" id="einleitung-anforderungskatalog">
            <p>
                Ein Anforderungskatalog stellt die Grundlage für ein Datenmodell dar. Es muss zuerst klar sein, welche
                Sachverhalte datentechnisch abgebildet werden sollen, bevor ein Datenmodell erstellt werden kann. Ein
                Anforderungskatalog resultiert wiederum aus einer Anforderungsanalyse.
            </p>
            <p>
                Die Ausbildungsdatenbank soll unterschiedliche Informationen verwalten. Hierzu zählen:
            </p>

            <list>
                <li>Ausbildungsberufe</li>
                <li>Auszubildende</li>
                <li>Adresse des Auszubildenden</li>
                <li>Ausbilder</li>
                <li>Ausbildungsfächer</li>
                <li>Praxisseminare</li>
                <li>Vermittlung theoretischer Ausbildungsinhalte</li>
            </list>
        </chapter>
    </chapter>

    <chapter title="Grundlagen" id="grundlagen">
        <p>
            Das ER-Modell (Entity-Relationship-Modell) wurde von Peter Chan Mitte der siebziger Jahre vorgestellt und
            dient bis heute noch als praktisches Modell um Informationsstrukturen modellhaft abzubilden. Das Wort
            <b>Entity</b> (deutsch: Entität) heißt so viel wie Objekt oder Ding, das real existiert. <b>Relationship</b>
            lässt sich als Beziehung übersetzen. Mit einem ER-Modell können Objekte mit deren Eigenschaften und die
            Beziehungen der Objekte untereinander modellhaft abgebildet werden.
        </p>
        <p>
            Ein Modell ist immer das Ergebnis eines Entwurfs und bildet ab, was in der Realität umgesetzt werden soll.
            Ein Entwurf wiederum entwickelt sich aus einer Phase, in der wir die Dinge oder Objekte, die es
            datentechnisch zu verwalten gilt, identifizieren und analysieren.
        </p>
    </chapter>

    <chapter title="Entitäten" id="grundlagen-entitaeten">
        <p>
            Entitäten (Objekte) werden in einem ER-Modell als Rechteck notiert. Im Rechteck wird die Bezeichnung oder
            der Name des abzubildenden Objekts angegeben. Für die Ausbildungsdatenbank werden somit Objekte wie
            auszubildender, ausbildungsberuf usw. als Entitäten in einem Rechteck gekennzeichnet.
        </p>

        <img src="datenbanken_rdbms_er_entity.jpg" alt="ER - ENTITY"/>
    </chapter>

    <chapter title="Attribute" id="grundlagen-attribute">
        <p>
            Eine Entität wie auszubildender besitzt auch Informationen bzw. Eigenschaften, die zur Verwaltung des
            Auszubildenden erforderlich sind, dazu gehört beispielsweise der Name, der Vorname, das Geburtsdatum usw.
            Diese Eigenschaften werden in einem ER-Modell als Attribute bezeichnet. Attribute werden unterhalb der
            Entitätsbezeichnung in Ellipsen dargestellt. Von der Entitätsbezeichnung ausgehend, zeigen Pfeile auf die
            jeweils zu einer Entität gehörenden Attribute.
        </p>

        <img src="datenbanken_rdbms_er_attribute.jpg" alt="ER - ATTRIBUTE"/>
        
        <table>
            <tr>
                <td>name</td>
                <td>vorname</td>
                <td>geburtsdatum</td>
            </tr>
            <tr>
                <td>Müller</td>
                <td>Ralf</td>
                <td>01.04.2001</td>
            </tr>
            <tr>
                <td>Klein</td>
                <td>Sabine</td>
                <td>10.05.2002</td>
            </tr>
            <tr>
                <td>Lang</td>
                <td>Peter</td>
                <td>11.03.2001</td>
            </tr>
            <tr>
                <td>Müller</td>
                <td>Ralf</td>
                <td>01.04.2001</td>
            </tr>
            <tr>
                <td>Klein</td>
                <td>Sabine</td>
                <td>20.05.2003</td>
            </tr>
        </table>

        <chapter title="Schlüsselattribute" id="grundlagen-attribute-key">
            <p>
                Das Schlüsselattribut ist jede Spalte, in der die Datenfelder gespeichert werden, welche einen Datensatz
                eindeutig identifizierbar machen. Dieses Attribut wird beim Bezeichner am Anfang mit einer Raute
                <code>#</code> gekennzeichnet.
            </p>
            <p>
                Lässt sich kein Attribut finden, welches einen Datensatz eindeutig identifizierbar macht, so wird ein
                hierfür meist eine <code>ID</code> in Form einer eindeutigen Nummer verwendet. Ein derartiges
                Schlüsselattribut wird auch als künstlicher Schlüssel oder Surrogatschlüssel bezeichnet.
            </p>
            
            <img src="datenbanken_rdbms_er_attribute_key.jpg" alt="ER - ATTRIBUT KEY"/>
            
            <table>
                <tr>
                    <td>ausid</td>
                    <td>name</td>
                    <td>vorname</td>
                    <td>geburtsdatum</td>
                </tr>
                <tr>
                    <td>1</td>
                    <td>Müller</td>
                    <td>Ralf</td>
                    <td>01.04.2001</td>
                </tr>
                <tr>
                    <td>2</td>
                    <td>Klein</td>
                    <td>Sabine</td>
                    <td>10.05.2002</td>
                </tr>
                <tr>
                    <td>3</td>
                    <td>Lang</td>
                    <td>Peter</td>
                    <td>11.03.2001</td>
                </tr>
                <tr>
                    <td>4</td>
                    <td>Müller</td>
                    <td>Ralf</td>
                    <td>01.04.2001</td>
                </tr>
                <tr>
                    <td>5</td>
                    <td>Klein</td>
                    <td>Sabine</td>
                    <td>20.05.2003</td>
                </tr>
            </table>

            <p>
                Somit sind auch die beiden auszubildenden Müller Ralf welche zufällig am selben Tag Geburtstag haben
                eindeutig identifizierbar.
            </p>
        </chapter>

        <chapter title="Wertebereiche für Attribute" id="grundlagen-attribute-wertebereiche">
            <p>
                Ein Wertebereich entspricht sämtlichen Werten, die einem Attribut zugeordnet werden können. Ein
                Wertebereich wird auch als Domain bezeichnet. Es gibt unterschiedliche Wertebereiche, die jeweils einem
                Attribut einer Entität zugeordnet werden können. Hierzu gehören:
            </p>
            
            <list>
                <li>
                    Zeichenketten einer definierten Länge
                </li>
                <li>
                    Ganze Zahlen, die mit einer Begrenzung der kleinsten und größten Zahl ausgestattet sind
                </li>
                <li>
                    Dezimalzahlen, die ebenfalls mit einer Begrenzung der kleinsten und größten Zahl ausgestattet sind
                </li>
                <li>
                    Datumsangaben, die von einem verwendeten Kalender abhängig sind
                </li>
            </list>
            
            <table>
                <tr>
                    <td>Attribut</td>
                    <td>mögliche Werte</td>
                    <td>Datentyp</td>
                </tr>
                <tr>
                    <td>ausid</td>
                    <td>0 bis 10</td>
                    <td><code>TINYINT(10)</code></td>
                </tr>
                <tr>
                    <td>name</td>
                    <td>0 bis 120 Zeichen</td>
                    <td><code>CHAR(120)</code></td>
                </tr>
                <tr>
                    <td>vorname</td>
                    <td>0 bis 120 Zeichen</td>
                    <td><code>CHAR(120)</code></td>
                </tr>
                <tr>
                    <td>geburtsdatum</td>
                    <td>01.01.1900 bis 31.12.2050</td>
                    <td><code>DATE</code></td>
                </tr>
            </table>
        </chapter>

        <chapter title="Pflichtattribute oder optionale Attribute" id="grundlagen-attribute-pflicht-optional">
            <p>
                In der Modellierung unterscheiden sich optionale Attribute von Attributen, die verbindlich anzugeben
                sind. Pflichtattribute sind ebenfalls im ER-Modell zu kennzeichnen, um sie unterscheidbar zu machen.
                Hierbei kann beispielsweise für Pflichtattribute ein <code>(P)</code> und für optionale Attribute ein
                <code>(O)</code> in Klammern notiert werden.
            </p>

            <img src="datenbanken_rdbms_er_attribute_pflicht.jpg" alt="ER - ATTRIBUTE PFLICHT/OPTIONAL" />
        </chapter>
    </chapter>

    <chapter title="Beziehungen" id="beziehungen">
        <p>
            Entitäten können in Beziehung zu anderen Entitäten stehen. Wenn eine Beziehung identifiziert wurde, wird
            diese Beziehung zwischen den Entitäten im Diagramm mit einer einfachen Verbindungslinie beschrieben.
        </p>
        <p>
            Eine Beziehung wiederum ist mit einem Zahlenverhältnis versehen. Einem Mitarbeiter wird zum Beispiel ein
            Arbeitsvertrag zugeordnet. Einem Mitarbeiter können mehrere Adressen zugeordnet werden. Außerdem ist es zum
            Beispiel möglich, einem oder mehreren Mitarbeitern einen oder mehrere Fortbildungskurse zuzuordnen. Hier
            wird von folgenden Beziehungstypen gesprochen:
        </p>

        <list>
            <li>
                <b><code>1:1</code>-Beziehung</b> – sie wird im ER-Modell jeweils am Anfang und am Ende einer
                Beziehungslinie durch vertikale Striche dargestellt. Mit dieser Notation wird gekennzeichnet, dass die
                jeweilige Entität exakt der jeweiligen anderen zugeordnet ist.
            </li>
            <li>
                <b><code>1:n</code>-Beziehung</b> – hierfür wird ein vertikaler Strich auf der Seite der <code>1</code>
                verwendet und die sogenannte Krähenfußnotation auf der Seite für <code>n</code> um eine
                <code>n</code>-Fache-Beziehung zu einer Entität darzustellen.
            </li>
            <li>
                <b><code>n:m</code>-Beziehung</b> – für das <code>n:m</code>-Verhältnis werden beiden Seiten der
                Beziehungslinie mit der Krähenfußnotation gekennzeichnet.
            </li>
        </list>
        
        <p>
            Die Beziehungstypen <code>1:1</code>, <code>1:n</code>, und <code>m:n</code> werden als Kardinalität
            bezeichnet. Für die Ermittlung von Kardinalitäten einer Beziehung wird folgende Frage zweimal angewandt: Wie
            viele Entitäten eines Typs kann einer Entität eines anderen Typs zugeordnet werden?
        </p>
        <p>
            Nun sehen folgende Entitäten zur Verfügung deren Beziehungen ermittelt werden sollen: auszubildender,
            ausbildungsvertrag, adresse, ausbildungsberuf und lehrfach.
        </p>
        
        <img src="datenbanken_rdbms_er_beziehungen_ohne.png" alt="ER - Modell ohne Beziehungen"/>
        
        <p>
            Die Beziehung dieser Entitäten sieht wie folgt aus:
        </p>
        
        <img src="datenbanken_rdbms_er_beziehungen_mit.png" alt="ER - Modell mit Beziehungen"/>

        <chapter title="Starke und schwache Entitäten " id="beziehungen-staerke">
            <p>
                Es gibt Entitäten, die eine Beziehung eingehen und dabei abhängig von der Existenz einer anderen Entität
                sind. Die Beziehung zwischen einer schwachen und einer starken Entität hat sowohl Auswirkungen auf die
                starke wie auf die schwache Entität. Folgende Fälle lassen sich beschreiben:
            </p>

            <list style="decimal">
                <li>
                    In einer Tabelle, die eine starke Entität repräsentiert, existiert eine Zeile autonom. Einfüge-,
                    Aktualisierung- und Löschoperationen können hier völlig autonom betrachtet werden. Es gibt keine
                    Beziehungen zu anderen Tabellen, die beachtet werden müssen.
                </li>
                <li>
                    <p>
                        In einer Tabelle, die eine schwache Entität repräsentiert, existieren Zeilen, die eine
                        Beziehung zu Zeilen herstellen, die eine starke Entität repräsentiert. Diese Beziehung hat
                        unmittelbar Auswirkungen auf Einfüge-, Aktualisierungs- und Löschoperationen.
                    </p>

                    <list style="alpha-lower">
                        <li>
                            Eine Zeile einer Tabelle, die eine starke Entität repräsentiert, kann nicht gelöscht werden,
                            solange eine Beziehung aus einer Zeile einer Tabelle gegeben ist, die eine schwache Entität
                            repräsentiert. Besteht hingegen keine solche Beziehung, so kann die Zeile der Tabelle, die
                            einer starken Entität entspricht, einfach gelöscht werden.
                        </li>
                        <li>
                            Eine Zeile aus einer Tabelle, die einer schwachen Entität entspricht, darf nur auf gültige
                            Primärschlüsselwerte in den Zeilen der Tabelle verwiesen werden, die eine starke Entität
                            darstellen. Wenn eine neue Zeile eingefügt wird, ist dies unbedingt zu beachten. Die einzige
                            zulässige Ausnahme ist der Fall, dass eine Zeile aus einer Tabelle, die einer schwachen
                            Entität entspricht, keine Beziehung zu einer Zeile einer Tabelle eingeht, die einer starken
                            Entität entspricht. Dies ist etwa der Fall, wenn in einer Fremdschlüsselspalte
                            <code>NULL</code>-Werte existieren.
                        </li>
                        <li>
                            <p>
                                Zeilen einer Tabelle, die einer schwachen Entität entspricht, können gelöscht werden,
                                auch wenn eine Beziehung zu den Teilen einer starken Entität existiert.
                            </p>
                            <warning>
                                Die schwache Entität mit den Fremdschlüsselwerten ist der Besitzer der Beziehung. Mit
                                dem Löschen einer Zeile wird die Beziehung aufgehoben, die der starken Entität
                                entspricht.
                            </warning>
                        </li>
                        <li>
                            Es dürfen keine Primärschlüsselwerte aus Zeilen einer Tabelle, die einer starken Entität
                            entspricht, geändert werden, wenn mithilfe eines Fremdschlüssels eine Beziehung aus einer
                            Tabelle, die einer schwachen Entität entspricht, existiert. Die Ausnahme in diesem Fall sind
                            kaskadierte Lösch- und Änderungsoperationen, aber dazu an einem späteren Zeitpunkt mehr.
                        </li>
                    </list>
                </li>
            </list>

            <chapter title="Starke Entität: auszubildender" id="beziehungen-staerke-stark">
                <table>
                    <tr>
                        <td>ausid</td>
                        <td>name</td>
                        <td>vorname</td>
                        <td>geburtsdatum</td>
                    </tr>
                    <tr>
                        <td>1</td>
                        <td>Müller</td>
                        <td>Ralf</td>
                        <td>01.04.2001</td>
                    </tr>
                    <tr>
                        <td>2</td>
                        <td>Klein</td>
                        <td>Sabine</td>
                        <td>10.05.2002</td>
                    </tr>
                    <tr>
                        <td>3</td>
                        <td>Lang</td>
                        <td>Peter</td>
                        <td>11.03.2001</td>
                    </tr>
                    <tr>
                        <td>4</td>
                        <td>Müller</td>
                        <td>Ralf</td>
                        <td>01.04.2001</td>
                    </tr>
                    <tr>
                        <td>5</td>
                        <td>Klein</td>
                        <td>Sabine</td>
                        <td>20.05.2003</td>
                    </tr>
                </table>
            </chapter>

            <chapter title="Schwache Entität: adresse" id="beziehungen-staerke-schwach">
            </chapter>
        </chapter>
    </chapter>

    <chapter title="Quellen" id="quellen">
        <tip>
            <b>(BUCH)</b>
            978-3-836245630, Einstieg in SQL, Michael Laube, Rheinwerk Verlag GmbH, Bonn, 2018
        </tip>
    </chapter>
</topic>