<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       title="Rechenoperationen" id="sql-weiteres-rechenoperationen">
    <show-structure for="chapter,procedure" depth="2"/>

    <chapter title="Grundrechenarten" id="grundrechenarten">
        <p>
            SQL bietet die Operatoren <code>+</code>, <code>-</code>, <code>*</code>, <code>/</code> und <code>%</code>
            an, um Rechenoperationen durchzuführen. Berechnungen können an vielen Stellen durchgeführt werden,
            beispielsweise: in der Spaltenauswahlliste, in einer <code>ORDER BY</code>-Klausel, in einer
            <code>WHERE</code>-Klausel und anderen Orten einer <code>SELECT</code>-Anweisung. Für diese Operatoren
            gelten die allgemein bekannten mathematischen Vorrangregeln. Wie in der Mathematik kann auch hier der
            Vorrang der Rechenoperationen durch Klammersetzung verändert werden.
        </p>

        <table>
            <tr>
                <td>Operator</td>
                <td>Funktion</td>
                <td>Beispiel</td>
            </tr>
            <tr>
                <td><code>+</code></td>
                <td>Addition</td>
                <td><code>4 + 4 = 8</code></td>
            </tr>
            <tr>
                <td><code>-</code></td>
                <td>Subtraktion</td>
                <td><code>5 - 1 = 4</code></td>
            </tr>
            <tr>
                <td><code>*</code></td>
                <td>Multiplikation</td>
                <td><code>2 * 3 = 6</code></td>
            </tr>
            <tr>
                <td><code>/</code></td>
                <td>Division</td>
                <td><code>6 / 3 = 2</code></td>
            </tr>
            <tr>
                <td><code>%</code></td>
                <td>Restwert einer Division (Modulo)</td>
                <td><code>5 % 2 = 1</code></td>
            </tr>
        </table>

        <code-block lang="sql">
            SELECT  name
                 ,  vorname
                 ,  bonus
                 ,  monatslohn
                 ,  bonus + monatslohn AS summe
              FROM mitarbeiter
            ;
        </code-block>

        <code-block lang="sql">
            SELECT  name
                 ,  vorname
                 ,  bonus
                 ,  monatslohn
                 ,  bonus + monatslohn + 1000 AS summe
              FROM mitarbeiter
            ;
        </code-block>

        <code-block lang="sql">
            SELECT  name
                 ,  vorname
                 ,  bonus
                 ,  monatslohn
                 ,  bonus - monatslohn AS differenz
              FROM mitarbeiter
            ;
        </code-block>

        <code-block lang="sql">
            SELECT  name
                 ,  vorname
                 ,  stundenpromonat
                 ,  stundenlohn
                 ,  stundenpromonat*stundenlohn AS gehalt
              FROM mitarbeiter
            ;
        </code-block>

        <code-block lang="sql">
            SELECT name
                 ,  vorname
                 ,  monatslohn
                 ,  stundenpromonat,
                 ,   monatslohn / stundenpromonat AS stundenlohn
              FROM mitarbeiter
            ;
        </code-block>

        <code-block lang="sql">
            SELECT 5 % 2 AS rest;
        </code-block>
    </chapter>

    <chapter title="Ausdrücke" id="ausdruecke">
        <p>
            In SQL werden sog. Ausdrücke verwendet. Hierbei kann es sich um werte, Konstanten, Variablen, Operationen,
            Berechnungen und Vergleiche handeln, de ausgewertet werden. Ausdrücken ist gemein, dass sie ausgewertet
            werden und zu einem Ergebnis führen. Ausdrücke können überall da verwendet werden, wo Werte erwartet werden.
            Sie werden von der Datenbank ausgewertet (fachsprachlich: evaluiert) und liefern einen Wert zurück. Daher
            können Ausdrücke in zahlreichen SQL-Anweisungen wie z.B. <code>INSERT</code> und <code>UPDATE</code>
            eingesetzt werden.
        </p>
    </chapter>

    <chapter title="Nach dem Ergebnis einer Berechnung filtern" id="filtern">
        <code-block lang="sql">
            SELECT  name
                 ,  vorname
                 ,  stundenlohn * stundenpromonat AS monatslohnberechnet
                 ,  monatslohn
              FROM mitarbeiter
             WHERE stundenlohn * stundenpromonat &lt; monatslohn
            ;
        </code-block>

        <p>
            Mittels dieser Abfrage werden alle Datensätze geliefert, deren berechneter Wert kleiner ist als der
            Monatslohn, der in der jeweiligen Spalte der Tabelle hinterlegt ist.
        </p>
    </chapter>

    <chapter title="Nach dem Ergebnis einer Berechnung sortieren lassen" id="sortieren">
        <code-block lang="sql">
            SELECT  name
                 ,  vorname
                 ,  bonus
                 ,  monatslohn
                 ,  bonus - monatslohn AS sonderbonus
              FROM mitarbeiter
             ORDER
                BY (bonus - monatslohn /* sonderbonus */) DESC
            ;
        </code-block>
    </chapter>

    <chapter title="Quellen" id="quellen">
        <tip>
            <b>(BUCH)</b>
            978-3-836245630, Einstieg in SQL, Michael Laube, Rheinwerk Verlag GmbH, Bonn, 2018
        </tip>
    </chapter>
</topic>