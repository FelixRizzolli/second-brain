<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic id="sql-dql-join"
       title="Verbundene Tabellenabfragen mittels JOIN"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd">
    <show-structure depth="2" for="chapter,procedure"/>

    <chapter id="grundlegendes" title="Grundlegendes">
        <p>
            Mit folgenden <code>JOIN</code>-Typen können Tabellen verbunden abgefragt werden:
        </p>

        <list>
            <li>
                <code>INNER JOIN</code>: verbindet ausschließlich Zeilen mit gültigen Schlüsselwerten.
            </li>
            <li>
                <code>LEFT OUTER JOIN</code>: verbindet Zeilen mit gültigen Schlüsselwerten und gibt Zeilen der linken
                Tabelle aus, die nicht verbunden abgefragt werden können.
            </li>
            <li>
                <code>RIGHT OUTER JOIN</code>: verbindet Zeilen mit gültigen Schlüsselwerten und gibt Zeilen der rechten
                Tabelle aus, die nicht verbunden abgefragt werden können.
            </li>
            <li>
                <code>FULL OUTER JOIN</code>: verbindet Zeilen mit gültigen Schlüsselwerten und gibt die Zeilen der
                linken und rechten Tabelle aus, die nicht über Schlüsselwerte verbunden werden können.
            </li>
            <li>
                <code>CROSS JOIN</code>: verbindet jede Zeile einer Tabelle mit jeder Zeile einer anderen Tabelle und
                umgekehrt.
            </li>
            <li>
                <code>SELF JOIN</code>: verbindet eine Zeile einer Tabelle mit Zeilen der gleichen Tabelle.
            </li>
        </list>

        <p>
            Die Verbindung zwischen den Zeilen wird bis auf den <code>CROSS JOIN</code> mit einer Bedingung stets über
            Primärschlüsselwerte und darauf referenzierende Fremdschlüsselwerte hergestellt.
        </p>
        <p>
            Die hier aufgeführten <code>JOIN</code>-Typen (bis auf <code>CROSS JOIN</code>) können nicht nur über
            Schlüsselbeziehungen realisiert werden. Solange die Datentypen der Spalten, die an einem <code>JOIN</code>
            beteiligt sind, identisch sind, kann mit einer Bedingung in einer <code>ON</code>-Klausel eine Verbindung
            hergestellt werden.
        </p>
    </chapter>

    <chapter id="beispiele" title="Beispiele">
        <chapter id="beispiele-adresse" title="adresse-Tabelle">
            <table>
                <tr>
                    <td>aid</td>
                    <td>strasse</td>
                    <td>nr.</td>
                    <td>plz</td>
                    <td>ort</td>
                    <td>fk_ausid</td>
                </tr>
                <tr>
                    <td>1</td>
                    <td>Mondstraße</td>
                    <td>8</td>
                    <td>50827</td>
                    <td>Köln</td>
                    <td>1</td>
                </tr>
                <tr>
                    <td>2</td>
                    <td>Sternstraße</td>
                    <td>10</td>
                    <td>50127</td>
                    <td>Bonn</td>
                    <td>3</td>
                </tr>
                <tr>
                    <td>3</td>
                    <td>Sonnenstraße</td>
                    <td>1</td>
                    <td>50129</td>
                    <td>Bonn</td>
                    <td>5</td>
                </tr>
                <tr>
                    <td>4</td>
                    <td>Jupiterstraße</td>
                    <td>11</td>
                    <td>50827</td>
                    <td>Köln</td>
                    <td></td>
                </tr>
                <tr>
                    <td>5</td>
                    <td>Uranusstraße</td>
                    <td>9</td>
                    <td>50127</td>
                    <td>Bonn</td>
                    <td></td>
                </tr>
                <tr>
                    <td>6</td>
                    <td>Uranusstraße</td>
                    <td>9</td>
                    <td>50129</td>
                    <td>Bonn</td>
                    <td></td>
                </tr>
            </table>
        </chapter>

        <chapter id="beispiele-auszubildender" title="auszubildender-Tabelle">
            <table>
                <tr>
                    <td>ausid</td>
                    <td>name</td>
                    <td>vorname</td>
                    <td>geburtsdatum</td>
                </tr>
                <tr>
                    <td>1</td>
                    <td>Müller</td>
                    <td>Ralf</td>
                    <td>01.04.2001</td>
                </tr>
                <tr>
                    <td>2</td>
                    <td>Klein</td>
                    <td>Sabine</td>
                    <td>10.05.2002</td>
                </tr>
                <tr>
                    <td>3</td>
                    <td>Lang</td>
                    <td>Peter</td>
                    <td>11.03.2001</td>
                </tr>
                <tr>
                    <td>4</td>
                    <td>Berg</td>
                    <td>Frank</td>
                    <td>20.07.2002</td>
                </tr>
                <tr>
                    <td>5</td>
                    <td>Erde</td>
                    <td>Sabine</td>
                    <td>23.01.2001</td>
                </tr>
                <tr>
                    <td>6</td>
                    <td>Grün</td>
                    <td>Justus</td>
                    <td>15.04.2001</td>
                </tr>
            </table>
        </chapter>

        <chapter id="beispiele-mitarbeiterausbildungsbetrieb" title="mitarbeiterausbildungsbetrieb-Tabelle">
            <table>
                <tr>
                    <td>mitarbeiterid</td>
                    <td>name</td>
                    <td>vorname</td>
                    <td>fk_mitarbeiterid</td>
                </tr>
                <tr>
                    <td>1</td>
                    <td>Müller</td>
                    <td>Alfred</td>
                    <td>NULL</td>
                </tr>
                <tr>
                    <td>2</td>
                    <td>Ungern</td>
                    <td>Peter</td>
                    <td>1</td>
                </tr>
                <tr>
                    <td>3</td>
                    <td>Erdenschein</td>
                    <td>Claudia</td>
                    <td>1</td>
                </tr>
                <tr>
                    <td>4</td>
                    <td>Sternenschein</td>
                    <td>Ute</td>
                    <td>1</td>
                </tr>
                <tr>
                    <td>5</td>
                    <td>Augustus</td>
                    <td>Frank</td>
                    <td>1</td>
                </tr>
                <tr>
                    <td>6</td>
                    <td>Erdenfels</td>
                    <td>Christine</td>
                    <td>NULL</td>
                </tr>
                <tr>
                    <td>7</td>
                    <td>Hoffnung</td>
                    <td>Ralf</td>
                    <td>6</td>
                </tr>
                <tr>
                    <td>8</td>
                    <td>Freud</td>
                    <td>Erika</td>
                    <td>6</td>
                </tr>
                <tr>
                    <td>9</td>
                    <td>Bergfels</td>
                    <td>Diether</td>
                    <td>6</td>
                </tr>
                <tr>
                    <td>10</td>
                    <td>Lemon</td>
                    <td>Reinhold</td>
                    <td>6</td>
                </tr>
            </table>
        </chapter>
    </chapter>

    <chapter id="join" title="JOIN / INNER JOIN">
        <img alt="INNER JOIN" src="datenbanken-sql-innerjoin.gif"/>

        <p>
            In manchen Datenbanken wird <code>INNER JOIN</code> statt <code>JOIN</code> verwendet.
        </p>

        <chapter id="join-beschreibung" title="Beschreibung">
            <p>
                Ein <code>INNER JOIN</code> verbindet Zeilen von Tabelle, indem auf Gleichheit von Primärschlüssel- und
                Fremdschlüssel geprüft wird. Die Zeilen von Tabellen werden nur dann verbunden, wenn eine
                Schlüsselbeziehung zwischen einer Eltern- und einer Kindtabelle existiert. Wenn Zeilen in den Tabellen
                vorhanden sind, die über keine Beziehung verfügen, werden sie nicht berücksichtigt.
            </p>
            <p>
                Hinter der <code>INNER JOIN</code>-Klausel wird die Tabelle, die verbunden abgefragt werden soll
                angegeben. Die Bedingung, die auf die Gleichheit von Schlüsselwerten prüft (Primärschlüssel- und
                Fremdschlüsselwerte), werden mit der <code>ON</code>-Klausel festgelegt. Das Schlüsselwort
                <code>INNER</code> der <code>INNER JOIN</code>-Klausel ist optional.
            </p>

            <chapter id="join-beschreibung-verbinden" title="Mehrere Tabellen verbinden">
                <p>
                    Es können natürlich auch mehrere Tabellen verbunden werden. Dabei muss immer lediglich hinter der
                    letzten <code>ON</code>-Klausel eine weitere <code>INNER JOIN</code>-Klausel mit der dazugehörigen
                    <code>ON</code>-Klausel angefügt werden.
                </p>
            </chapter>
        </chapter>

        <chapter id="join-beispiel" title="Beispiel">
            <code-block lang="sql">
                SELECT name
                , vorname
                , plz
                , ort
                FROM auszubildender
                JOIN adresse
                ON ausid = fk_ausid
                ;
            </code-block>

            <chapter id="join-beispiel-ergebnistabelle" title="Ergebnistabelle">
                <table>
                    <tr>
                        <td>name</td>
                        <td>vorname</td>
                        <td>plz</td>
                        <td>ort</td>
                    </tr>
                    <tr>
                        <td>Müller</td>
                        <td>Ralf</td>
                        <td>50827</td>
                        <td>Köln</td>
                    </tr>
                    <tr>
                        <td>Lang</td>
                        <td>Peter</td>
                        <td>50127</td>
                        <td>Bonn</td>
                    </tr>
                    <tr>
                        <td>Erde</td>
                        <td>Sabine</td>
                        <td>50129</td>
                        <td>Bonn</td>
                    </tr>
                </table>
            </chapter>
        </chapter>
    </chapter>

    <chapter id="leftjoin" title="LEFT JOIN / LEFT OUTER JOIN">
        <img alt="LEFT JOIN" src="datenbanken-sql-leftjoin.gif"/>

        <p>
            In manchen Datenbanken wird <code>LEFT OUTER JOIN</code> statt <code>LEFT JOIN</code> verwendet.
        </p>

        <chapter id="leftjoin-beschreibung" title="Beschreibung">
            <p>
                Ein <code>LEFT OUTER JOIN</code> verknüpft Zeilen von Tabellen über eine Fremdschlüsselbeziehung.
                Zunächst einmal verbindet ein <code>LEFT OUTER JOIN</code> alle Zeilen von zwei Tabellen über eine
                Schlüsselbeziehung. Immer dann, wenn ein Fremdschlüssel aus einer Kindtabelle auf einen Primärschlüssel
                aus einer Elterntabelle referenziert, werden Zeilen entsprechend verbunden. Wie beim
                <code>INNER JOIN</code>.
            </p>
            <p>
                Ein <code>LEFT OUTER JOIN</code> gibt zusätzlich die Zeilen der links der
                <code>LEFT OUTER JOIN</code>-Klausel notierten Tabelle aus, die nicht über Schlüsselwerte mit der
                Tabelle, die rechts von der <code>LEFT OUTER JOIN</code>-Klausel notiert ist, verbunden werden können.
            </p>
        </chapter>

        <chapter id="leftjoin-beispiel" title="Beispiel">
            <code-block lang="sql">
                SELECT name
                , vorname
                , plz
                , ort
                FROM auszubildener
                LEFT OUTER
                JOIN adresse
                ON ausid = fk_ausid
                ;
            </code-block>

            <chapter id="leftjoin-beispiel-ergebnistabelle" title="Ergebnistabelle">
                <table>
                    <tr>
                        <td>name</td>
                        <td>vorname</td>
                        <td>plz</td>
                        <td>ort</td>
                    </tr>
                    <tr>
                        <td>Müller</td>
                        <td>Ralf</td>
                        <td>50827</td>
                        <td>Köln</td>
                    </tr>
                    <tr>
                        <td>Klein</td>
                        <td>Sabine</td>
                        <td>NULL</td>
                        <td>NULL</td>
                    </tr>
                    <tr>
                        <td>Lang</td>
                        <td>Peter</td>
                        <td>50127</td>
                        <td>Bonn</td>
                    </tr>
                    <tr>
                        <td>Berg</td>
                        <td>Frank</td>
                        <td>NULL</td>
                        <td>NULL</td>
                    </tr>
                    <tr>
                        <td>Erde</td>
                        <td>Sabine</td>
                        <td>50129</td>
                        <td>Bonn</td>
                    </tr>
                    <tr>
                        <td>Grün</td>
                        <td>Justus</td>
                        <td>NULL</td>
                        <td>NULL</td>
                    </tr>
                </table>
            </chapter>
        </chapter>
    </chapter>

    <chapter id="rightjoin" title="RIGHT JOIN / RIGHT OUTER JOIN">
        <img alt="RIGHT JOIN" src="datenbanken-sql-rightjoin.gif"/>

        <p>
            In manchen Datenbanken wird <code>RIGHT OUTER JOIN</code> statt <code>RIGHT JOIN</code> verwendet.
        </p>

        <chapter id="rightjoin-beschreibung" title="Beschreibung">
            <p>
                Ein <code>RIGHT OUTER JOIN</code> verknüpft Zeilen von Tabellen über eine Fremdschlüsselbeziehung.
                Zunächst einmal verbindet ein <code>RIGHT OUTER JOIN</code> alle Zeilen von zwei Tabellen über eine
                Schlüsselbeziehung. Immer dann, wenn ein Fremdschlüssel aus einer Kindtabelle auf einen Primärschlüssel
                aus einer Elterntabelle referenziert, werden Zeilen entsprechend verbunden. Wie beim
                <code>INNER JOIN</code>.
            </p>
            <p>
                Ein <code>RIGHT OUTER JOIN</code> gibt zusätzlich die Zeilen der rechts der
                <code>RIGHT OUTER JOIN</code>-Klausel notierten Tabelle aus, die nicht über Schlüsselwerte mit der
                Tabelle, die links von der <code>RIGHT OUTER JOIN</code>-Klausel notiert ist, verbunden werden können.
            </p>
        </chapter>

        <chapter id="rightjoin-beispiel" title="Beispiel">
            <code-block lang="sql">
                SELECT name
                , vorname
                , plz
                , ort
                FROM auszubildener
                RIGHT OUTER
                JOIN adresse
                ON ausid=fk_ausid
                ;
            </code-block>

            <chapter id="rightjoin-beispiel-ergebnistabelle" title="Ergebnistabelle">
                <table>
                    <tr>
                        <td>name</td>
                        <td>vorname</td>
                        <td>plz</td>
                        <td>ort</td>
                    </tr>
                    <tr>
                        <td>Müller</td>
                        <td>Ralf</td>
                        <td>50827</td>
                        <td>Köln</td>
                    </tr>
                    <tr>
                        <td>Lang</td>
                        <td>Peter</td>
                        <td>50127</td>
                        <td>Bonn</td>
                    </tr>
                    <tr>
                        <td>Erde</td>
                        <td>Sabine</td>
                        <td>50129</td>
                        <td>Bonn</td>
                    </tr>
                    <tr>
                        <td>NULL</td>
                        <td>NULL</td>
                        <td>50827</td>
                        <td>Köln</td>
                    </tr>
                    <tr>
                        <td>NULL</td>
                        <td>NULL</td>
                        <td>50127</td>
                        <td>Bonn</td>
                    </tr>
                    <tr>
                        <td>NULL</td>
                        <td>NULL</td>
                        <td>50129</td>
                        <td>Bonn</td>
                    </tr>
                </table>
            </chapter>
        </chapter>
    </chapter>

    <chapter id="fulljoin" title="FULL JOIN / FULL OUTER JOIN">
        <img alt="FULL JOIN" src="datenbanken-sql-fulljoin.gif"/>

        <p>
            In manchen Datenbanken wird <code>FULL OUTER JOIN</code> statt <code>FULL JOIN</code> verwendet.
        </p>

        <chapter id="fulljoin-beschreibung" title="Beschreibung">
            <p>
                Ein <code>FULL OUTER JOIN</code> verbindet die Zeilen aus zwei Tabellen, die übereinstimmende
                Schlüsselwerte verfügen. Mit einem <code>FULL OUTER JOIN</code> werden auch die Zeilen ermittelt, die
                über keine übereinstimmende Schlüsselwerte der Tabellen verbunden werden können. Ein
                <code>FULL OUTER JOIN</code> ist also eine Mischung aus <code>INNER JOIN</code>,
                <code>RIGHT OUTER JOIN</code> und <code>LEFT OUTER JOIN</code>.
            </p>
            <p>
                Die MySQL-Datenbank unterstützt keinen <code>FULL OUTER JOIN</code> gemäß dem SQL-Standard.
            </p>
        </chapter>

        <chapter id="fulljoin-beispiel" title="Beispiel">
            <code-block lang="sql">
                SELECT name
                , vorname
                , plz
                , ort
                FROM auszubildener
                FULL OUTER
                JOIN adresse
                ON ausid = fk_ausid
                ;
            </code-block>

            <chapter id="fulljoin-beispiel-ergebnistabelle" title="Ergebnistabelle">
                <table>
                    <tr>
                        <td>name</td>
                        <td>vorname</td>
                        <td>plz</td>
                        <td>ort</td>
                    </tr>
                    <tr>
                        <td>Müller</td>
                        <td>Ralf</td>
                        <td>50827</td>
                        <td>Köln</td>
                    </tr>
                    <tr>
                        <td>Klein</td>
                        <td>Sabine</td>
                        <td>NULL</td>
                        <td>NULL</td>
                    </tr>
                    <tr>
                        <td>Lang</td>
                        <td>Peter</td>
                        <td>50127</td>
                        <td>Bonn</td>
                    </tr>
                    <tr>
                        <td>Berg</td>
                        <td>Frank</td>
                        <td>NULL</td>
                        <td>NULL</td>
                    </tr>
                    <tr>
                        <td>Erde</td>
                        <td>Sabine</td>
                        <td>50129</td>
                        <td>Bonn</td>
                    </tr>
                    <tr>
                        <td>Grün</td>
                        <td>Justus</td>
                        <td>NULL</td>
                        <td>NULL</td>
                    </tr>
                    <tr>
                        <td>NULL</td>
                        <td>NULL</td>
                        <td>50827</td>
                        <td>Köln</td>
                    </tr>
                    <tr>
                        <td>NULL</td>
                        <td>NULL</td>
                        <td>50127</td>
                        <td>Bonn</td>
                    </tr>
                    <tr>
                        <td>NULL</td>
                        <td>NULL</td>
                        <td>50129</td>
                        <td>Bonn</td>
                    </tr>
                </table>
            </chapter>
        </chapter>
    </chapter>

    <chapter id="crossjoin" title="CROSS JOIN">
        <img alt="CROSS JOIN" src="datenbanken-sql-crossjoin.png"/>

        <chapter id="crossjoin-beschreibung" title="Beschreibung">
            <p>
                Ein <code>CROSS JOIN</code> verbindet völlig unabhängig von Schlüsselbeziehungen zwischen Eltern- und
                Kindtabellen die Zeilen einer anderen Tabelle. Betrachtet man eine Zeile der linken Tabelle, so wird
                diese Zeile mit jeder Zeile der rechten Tabelle verbunden.
            </p>
            <p>
                Mathematisch betrachtet handelt es sich hierbei um ein kartesisches Produkt. <code>CROSS JOIN</code>s
                können verwendet werden, um Testdaten zu generieren oder um alle Zeilen von zwei Tabellen miteinander
                verbunden auszugeben. Wird eine Tabelle von 20.000 Zeilen mit einer Tabelle von 100 Zeilen verbunden so
                wird eine Ergebnistabelle mit 2.000.000 Zeilen generiert.
            </p>
            <p>
                Da bei einem <code>CROSS JOIN</code> lediglich alle Zeilen einer Tabelle mit allen Zeilen einer anderen
                Tabelle verbunden werden, wird die <code>ON</code>-Klausel nicht benötigt.
            </p>
        </chapter>

        <chapter id="crossjoin-beispiel" title="Beispiel">
            <code-block lang="sql">
                SELECT name
                , vorname
                , plz
                , ort
                , strasse
                FROM auszubildender
                CROSS
                JOIN adresse
                ;
            </code-block>
        </chapter>
    </chapter>

    <chapter id="selfjoin" title="SELF JOIN">
        <chapter id="selfjoin-beschreibung" title="Beschreibung">
            <p>
                Mit einem <code>SELF JOIN</code> können hierarchische Strukturen einer Tabelle abgebildet werden, die
                über die entsprechenden Voraussetzungen verfügt. Um hierarchische Strukturen einer Tabelle abzubilden,
                werden die Zeilen einer Tabelle mit den Zeilen ebendieser einen Tabelle verbunden. Um dies zu
                realisieren wird eine Fremdschlüsselbeziehung verwendet. Der Unterschied ist der, dass der
                Fremdschlüssel nicht auf einen Primärschlüssel in einer anderen Tabelle verweist, sondern auf den
                Primärschlüssel der in der gleichen Tabelle definiert wurde wie der Fremdschlüssel.
            </p>
            <p>
                Ein <code>SELF JOIN</code> wird mit einem normalen <code>INNER JOIN</code>,
                <code>LEFT OUTER JOIN</code>, ... realisiert wobei sowohl die linke Tabelle dieselbe wie die Rechte
                des jeweiligen <code>JOIN</code>s ist.
            </p>
        </chapter>

        <chapter id="selfjoin-beispiel" title="Beispiel">
            <code-block lang="sql">
                SELECT ma1.mitarbeiterid AS vorgesetzterid
                , ma1.name AS vorgesetztername
                , ma2.name AS mitarbeitername
                , ma2.mitarbeiterid AS mitarbeiterid
                FROM mitarbeiterausbildungsbetrieb AS ma1
                INNER
                JOIN mitarbeiterausbildungsbetrieb AS ma2
                ON ma1.mitarbeiterid = ma2.fk_mitarbeiterid
                ;
            </code-block>

            <chapter id="selfjoin-beispiel-ergebnistabelle" title="Ergebnistabelle">
                <table>
                    <tr>
                        <td>vorgesetzterid</td>
                        <td>vorgesetztername</td>
                        <td>mitarbeitername</td>
                        <td>mitarbeiterid</td>
                    </tr>
                    <tr>
                        <td>1</td>
                        <td>Müller</td>
                        <td>Ungern</td>
                        <td>2</td>
                    </tr>
                    <tr>
                        <td>1</td>
                        <td>Müller</td>
                        <td>Erdenschein</td>
                        <td>3</td>
                    </tr>
                    <tr>
                        <td>1</td>
                        <td>Müller</td>
                        <td>Sternenschein</td>
                        <td>4</td>
                    </tr>
                    <tr>
                        <td>1</td>
                        <td>Müller</td>
                        <td>Augustus</td>
                        <td>5</td>
                    </tr>
                    <tr>
                        <td>6</td>
                        <td>Erdenfels</td>
                        <td>Hoffnung</td>
                        <td>7</td>
                    </tr>
                    <tr>
                        <td>6</td>
                        <td>Erdenfels</td>
                        <td>Freud</td>
                        <td>8</td>
                    </tr>
                    <tr>
                        <td>6</td>
                        <td>Erdenfels</td>
                        <td>Bergfels</td>
                        <td>9</td>
                    </tr>
                    <tr>
                        <td>6</td>
                        <td>Erdenfels</td>
                        <td>Lemon</td>
                        <td>10</td>
                    </tr>
                </table>
            </chapter>
        </chapter>
    </chapter>

    <chapter id="quellen" title="Quellen">
        <tip>
            <b>(BUCH)</b>
            978-3-836245630, Einstieg in SQL, Michael Laube, Rheinwerk Verlag GmbH, Bonn, 2018
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/sql/sql_join.asp" ignore-vars="true">
                https://www.w3schools.com/sql/sql_join.asp
            </a>, 2020-12-09 11:05
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.sqlservertutorial.net/sql-server-basics/sql-server-cross-join/" ignore-vars="true">
                https://www.sqlservertutorial.net/sql-server-basics/sql-server-cross-join/
            </a>, 2020-12-09 15:10
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/sql/sql_join_inner.asp" ignore-vars="true">
                https://www.w3schools.com/sql/sql_join_inner.asp
            </a>, 2022-11-13 16:00
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/sql/sql_join_left.asp" ignore-vars="true">
                https://www.w3schools.com/sql/sql_join_left.asp
            </a>, 2022-11-13 16:10
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/sql/sql_join_right.asp" ignore-vars="true">
                https://www.w3schools.com/sql/sql_join_right.asp
            </a>, 2022-11-13 16:20
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/sql/sql_join_full.asp" ignore-vars="true">
                https://www.w3schools.com/sql/sql_join_full.asp
            </a>, 2022-11-13 16:30
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/sql/sql_join_self.asp" ignore-vars="true">
                https://www.w3schools.com/sql/sql_join_self.asp
            </a>, 2022-11-13 16:40
        </tip>
    </chapter>
</topic>