<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic id="sql-ddl-tabellenoperationen"
       title="Tabellenoperationen (CREATE, DROP, ALTER)"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd">
    <show-structure depth="2" for="chapter,procedure"/>

    <chapter id="create" title="CREATE TABLE: Tabellen erstellen">
        <p>
            Mit der <code>CREATE TABLE</code>-Anweisung werden Tabellen einer Datenbank erstellt. Dabei müssen auch die
            einzelnen Spalten, welche die Tabelle enthalten soll, notiert werden. Bei den einzelnen Spalten kann es sich
            um unterschiedliche Informationsarten handeln: ganze Zahlen, rationale Zahlen, Text oder Datumsangaben.
            Hierfür werden <a href="sql-ddl-datentypen.topic">Datentypen</a> für die jeweiligen Spalten definiert.
        </p>
        <p>
            Die SQL-Anweisung um eine Tabelle zu erstellen beginnt mit den Schlüsselwörtern <code>CREATE TABLE</code>.
            Hinter diesen wird die Tabellenbezeichnung notiert, worauf zwei einfache Klammern folgen. In den Klammern
            kommt der Spaltenname mit dazugehörigem Datentyp bei mehreren Angaben werden die Spalten kommasepariert
            angegeben. Beispiel Tabelle für Dienstwagen:
        </p>

        <code-block lang="sql">
            CREATE TABLE dienstwagen(
            dienstwagenid TINYINT PRIMARY KEY,
            kennzeichen CHAR(9),
            erstzulassung DATE,
            kostenstelle TINYINT,
            hersteller VARCHAR(200),
            modell VARCHAR(200),
            mitarbeiter VARCHAR(300)
            );
        </code-block>

        <chapter id="create-schluesselwoerter" title="Reservierte Schlüsselwörter">
            <p>
                Jede Datenbank legt fest, welche Wörter nicht als Bezeichner für Datenbankobjekte verwendet werden
                dürfen. In der Regel handelt es sich dabei um Wörter, die dem SQL-Sprachsatz entstammen. Somit ist es
                wirklich keine gute Idee eine Tabelle oder Spalte
                <emphasis>select</emphasis>
                oder
                <emphasis>create</emphasis>
                zu nennen. Die Liste der reservierten Schlüsselwörter ist in der
                Dokumentation der jeweiligen Datenbank zu finden.
            </p>
        </chapter>

        <chapter id="create-constraints" title="CONSTRAINTS">
            <p>
                Einer Spalte können Einschränkungen zugeordnet werden, welche für die <code>INSERT</code> und die
                <code>UPDATE</code>-Anweisung gelten – werden diese nicht eingehalten, so wird die Anweisung nicht
                ausgeführt und eine Fehlermeldung erscheint. Solche Einschränkungen nennt man <code>CONSTRAINTS</code>.
                Dazu gehören: der Primärschlüssel, die <code>NOT NULL</code>-Einschränkung, die
                <code>UNIQUE</code>-Einschränkung, der <code>DEFAULT</code>-Wert und die <code>CHECK</code>-Bedingung.
            </p>
            <p>
                Mehr zu Constraints hier:
            </p>

            <list>
                <li><a href="sql-ddl-constraints-spalten.topic"><code>CONSTRAINTS</code> auf Spaltenebene</a></li>
                <li><a href="sql-ddl-constraints-tabellen.topic"><code>CONSTRAINTS</code> auf Tabellenebene</a></li>
            </list>
        </chapter>
    </chapter>

    <chapter id="drop" title="DROP TABLE: Tabellen löschen">
        <p>
            Mit der SQL-Anweisung <code>DROP TABLE</code> lässt sich eine Tabelle löschen. Die Anweisung ist einfach:
            Sie beginnt mit den Schlüsselwörtern <code>DROP TABLE</code> und darauf folgt der Tabellenbezeichner der zu
            löschenden Tabelle.
        </p>

        <code-block lang="sql">
            DROP TABLE dienstwagen;
        </code-block>
    </chapter>

    <chapter id="alter" title="ALTER TABLE: Tabellen ändern">
        <p>
            Das <code>ALTER TABLE</code>-Statement wird verwendet, um Spalten in einer bestehenden Tabelle hinzuzufügen,
            zu löschen oder zu ändern. Es wird auch verwendet, um verschiedene Beschränkungen
            (= <code>CONSTRAINTS</code>) zu einer bestehenden Tabelle hinzuzufügen oder zu löschen.
        </p>

        <code-block lang="sql">
            ALTER TABLE table_name ADD column_name datatype;
        </code-block>
        <code-block lang="sql">
            ALTER TABLE table_name DROP COLUMN column_name;
        </code-block>
        <code-block lang="sql">
            ALTER TABLE table_name ALTER COLUMN column_name datatype;
        </code-block>
    </chapter>

    <chapter id="quellen" title="Quellen">
        <tip>
            <b>(BUCH)</b>
            978-3-836245630, Einstieg in SQL, Michael Laube, Rheinwerk Verlag GmbH, Bonn, 2018
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/sql/sql_create_table.asp" ignore-vars="true">
                https://www.w3schools.com/sql/sql_create_table.asp
            </a>, 2022-11-10 17:00
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/sql/sql_drop_table.asp" ignore-vars="true">
                https://www.w3schools.com/sql/sql_drop_table.asp
            </a>, 2022-11-10 17:00
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/sql/sql_alter.asp" ignore-vars="true">
                https://www.w3schools.com/sql/sql_alter.asp
            </a>, 2022-11-10 17:00
        </tip>
    </chapter>
</topic>