<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       title="CONSTRAINTS auf Spaltenebene" id="sql-ddl-constraints-spalten">
    <show-structure for="chapter,procedure" depth="2"/>

    <chapter title="Grundlegendes" id="grundlegendes">
        <p>
            Einer Spalte können Einschränkungen zugeordnet werden, welche für die <code>INSERT</code> und die
            <code>UPDATE</code>-Anweisung gelten – werden diese nicht eingehalten, so wird die Anweisung nicht
            ausgeführt und eine Fehlermeldung erscheint. Solche Einschränkungen nennt man <code>CONSTRAINTS</code>. Dazu
            gehören: der Primärschlüssel, die <code>NOT NULL</code>-Einschränkung, die
            <code>UNIQUE</code>-Einschränkung, der <code>DEFAULT</code>-Wert und die <code>CHECK</code>-Bedingung.
        </p>
    </chapter>

    <chapter title="AUTO_INCREMENT: Automatisch hochzählende numerische Spalten" id="auto-increment">
        <p>
            Während der Tabellenerstellung kann mit einer <code>CREATE TABLE</code>-Anweisung festgelegt werden, ob
            automatisch ein ganzzahlig hochzählender Primärschlüssel eingefügt werden soll. Somit muss man auch nicht
            mehr den Primärschlüssel bei der <code>INSERT</code>-Anweisung angeben, da er ja von selbst hochzählt. Um
            dies zu erreichen, wendet die Datenbank den folgenden Ausdruck an, um inkrementell die Primärschlüssel
            hochzuzählen: <code>X = X + 1</code>.
        </p>
        <p>
            Die automatische Schlüsselwertgenerierung wird von Datenbank zu Datenbank unterschiedlich umgesetzt. In den
            Tabellenerstellungsanweisungen werden beispielsweise folgende Schlüsselwärter angewendet:
        </p>

        <list>
            <li>
                <code>AUTO_INCREMENT</code> für MySQL-Datenbank
            </li>
            <li>
                <code>SERIAL</code> für eine PostgreSQL-Datenbank
            </li>
            <li>
                <code>IDENTITY(startwert, inkrementwert)</code> für eine MS-SQL-Server-Datenbank. In den klammern
                werden durch Komma getrennt der Startwert und die Schrittweite notiert, die durch die automatische
                Schlüsselvergabe verwendet werden sollen.
            </li>
        </list>

        <p>
            Die Auto-Inkrement-Funktionalität steht für Primärschlüssel vom Datentyp wie z.B. <code>CHAR</code>,
            <code>VARCHAR</code> oder <code>DATE</code> nicht zur Verfügung.
        </p>
        <p>
            Ein Beispiel für eine MySQL-Tabelle mit einem Primärschlüssel und Auto-Inkrement-Funktion:
        </p>

        <code-block lang="sql">
            CREATE
             TABLE designwagen
                 ( designwagenid  TINYINT  AUTO_INCREMENT PRIMARY KEY
                 , kennzeichen    CHAR(9)
                 , erstzulassung  DATE
                 )
            ;

            INSERT INTO dienstwagen (kennzeichen, erstzulassung) VALUES ('XX-XX-XX1', '2014-04-01');
        </code-block>
    </chapter>

    <chapter title="NOT NULL: Spalten als Pflichtfelder definieren" id="not-null">
        <p>
            Überall da, wo Spaltenwerte unbedingt erforderlich sind, kann bereits während der Tabellenerstellung mit
            einer <code>NOT NULL</code>-Einschränkung sichergestellt werden, dass für das jeweilige Datenfeld immer
            Werte eingetragen werden. Das gilt für Einfüge-Operationen mit <code>INSERT</code> wie für
            Aktualisierungsoperationen mit einer <code>UPDATE</code>-Anweisung. Beispiel:
        </p>

        <code-block lang="sql">
            CREATE
             TABLE dienstwagen
                 ( dienstwagenid     TINYINT        PRIMARY KEY
                 , kennzeichen       CHAR(9)        NOT NULL
                 , erstzulassung     DATE           NOT NULL
                 , mitarbeiter       VARCHAR(300)
                 )
            ;
        </code-block>
    </chapter>

    <chapter title="UNIQUE: Spalten mit einer Eindeutigkeitseinschränkung versehen" id="unique">
        <p>
            Mit der <code>UNIQUE</code>-Einschränkung stellt man sicher, dass ähnlich wie bei einem Primärschlüssel, das
            Datenfeld nur einmal in der Spalte vorkommt. Die Eindeutigkeitseinschränkung <code>UNIQUE</code> wird immer
            hinter einer <code>NULL</code> oder <code>NOT NULL</code>-Einschränkung notiert.
        </p>
        <p>
            Auch hier gibt es keine Unterschiede zwischen den einzelnen Datenbanken. In einer MS-SQL-Server-Datenbank
            kann der <code>NULL</code>-Wert nur einmal für eine Spalte, welche mit dem Schlüsselwort <code>UNIQUE</code>
            versehen wurde, verwendet werden. Die PostgreSQL- und MySQL-Datenbanken lassen hingegen den
            <code>NULL</code>-Wert für eine mit <code>UNIQUE</code> versehene Spalte mehrfach zu.
        </p>

        <code-block lang="sql">
            CREATE
             TABLE dienstwagen
                 ( dienstwagenid   TINYINT        PRIMARY KEY
                 , kennzeichen     CHAR(9)        NOT NULL
                 , erstzulassung   DATE           NOT NULL
                 , mitarbeiter     VARCHAR(300)   UNIQUE
                 )
            ;
        </code-block>

        <note>
            Um eine <code>UNIQUE</code>-Einschränkung über mehrere Spalten anzuwenden, muss sie auf Tabellenebene
            definiert werden:
            <a href="sql-ddl-constraints-tabellen.topic">
                <code>CONSTRAINTS</code> auf Tabellenebene
            </a>
        </note>
    </chapter>

    <chapter title="DEFAULT: Standardwerte für Spalten festlegen" id="default">
        <p>
            Mit dem Schlüsselwort <code>DEFAULT</code> kann für eine Spalte ein Standardwert definiert werden. Dieser
            Wert wird somit immer verwendet, falls bei einer <code>INSERT</code>-Anweisung der jeweiligen Spalte kein
            Wert zugewiesen wird. Der Standartwert mittels <code>DEFAULT</code> sollte möglichst vor der
            <code>UNIQUE</code>-Einschränkung und nach der <code>NULL</code>/<code>NOT NULL</code>-Einschränkung notiert
            werden.
        </p>

        <code-block lang="sql">
            CREATE
             TABLE dienstwagen
                 ( dienstwagenid    TINYINT        PRIMARY KEY
                 , kennzeichen      CHAR(9)        NOT NULL
                 , erstzulassung    DATE           NOT NULL
                 , kostenstelle     SMALLINT       NOT NULL     DEFAULT 0
                 , mitarbeiter      VARCHAR(300)   UNIQUE
                 )
            ;
        </code-block>
    </chapter>

    <chapter title="CHECK: Bedingungen für Spalten festlegen" id="check">
        <p>
            Mit der <code>CHECK</code>-Einschränkung kann einer Spalte eine Plausibilitätsprüfung zugeordnet werden,
            welche für <code>INSERT</code>- und <code>UPDATE</code>-Anweisung gilt. Die Datenbank überprüft somit, für
            jede Spalte mit Plausibilitätsprüfung, bei einer <code>INSERT</code>- und <code>UPDATE</code>-Anweisung, ob
            die Werte der angegebenen Bedingungen entsprechen. Trifft dies nicht zu, so wird eine Fehlermeldung
            ausgegeben und der neue Datensatz nicht eingetragen.
        </p>
        <p>
            Die PostgreSQL- und MS-SQL-Server-Datenbank unterstützen eine solche <code>CHECK</code>-Einschränkung, wie
            es der Standard vorsieht. Für MySQL steht diese hingegen bis zur Version 8.0.16 nicht zur Verfügung.
        </p>

        <code-block lang="sql">
            CREATE
             TABLE dienstwagen
                 ( dienstwagenid    SMALLINT      PRIMARY KEY
                 , kennzeichen      CHAR(9)       NOT NULL
                 , erstzulassung    DATE          NOT NULL
                 , modell           VARCHAR(200)  CHECK( motor = ‘Diesel‘
                                                      OR motor = ‘Benzin‘
                                                      OR motor = ‘Super‘ )
                 , mitarbeiter      VARCHAR(300)  UNIQUE
            )
            ;
        </code-block>

        <p>
            Bei der <code>CHECK</code>-Einschränkung werden in einfachen Klammern die Bedingungen festgelegt. Diese
            können mit logischen Verknüpfungsoperatoren wie <code>AND</code> und <code>OR</code> verknüpft werden.
        </p>
        <note>
            Um eine <code>CHECK</code>-Einschränkung über mehrere Spalten anzuwenden, muss sie auf Tabellenebene
            definiert werden:
            <a href="sql-ddl-constraints-tabellen.topic">
                <code>CONSTRAINTS</code> auf Tabellenebene
            </a>
        </note>
    </chapter>

    <chapter title="PRIMARY KEY: Primärschlüssel für eine Spalte festlegen" id="primary-key">
        <p>
            Die <code>PRIMARY KEY</code>-Einschränkung identifiziert jeden Datensatz in einer Tabelle eindeutig. Ein
            Primärschlüssel ist eine Kombination aus der <code>UNIQUE</code>- und der
            <code>NOT NULL</code>-Einschränkung. Eine Tabelle kann nur <b>EINEN</b> Primärschlüssel haben; und in der
            Tabelle kann dieser Primärschlüssel aus einzelnen oder mehreren Spalten (Feldern) bestehen.
        </p>

        <code-block lang="sql">
            CREATE
             TABLE dienstwagen
                 ( dienstwagenid    TINYINT        PRIMARY KEY
                 , kennzeichen      CHAR(9)        NOT NULL
                 , erstzulassung    DATE           NOT NULL
                 , kostenstelle     SMALLINT       NOT NULL     DEFAULT 0
                 , mitarbeiter      VARCHAR(300)   UNIQUE
                 )
            ;
        </code-block>

        <note>
            Um eine <code>PRIMARY KEY</code>-Einschränkung über mehrere Spalten anzuwenden, muss sie auf Tabellenebene
            definiert werden:
            <a href="sql-ddl-constraints-tabellen.topic">
                <code>CONSTRAINTS</code> auf Tabellenebene
            </a>
        </note>
    </chapter>

    <chapter title="Quellen" id="quellen">
        <tip>
            <b>(BUCH)</b>
            978-3-836245630, Einstieg in SQL, Michael Laube, Rheinwerk Verlag GmbH, Bonn, 2018
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/sql/sql_constraints.asp" ignore-vars="true">
                https://www.w3schools.com/sql/sql_constraints.asp
            </a>, 2022-11-13 18:00
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/sql/sql_unique.asp" ignore-vars="true">
                https://www.w3schools.com/sql/sql_unique.asp
            </a>, 2022-11-13 18:00
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/sql/sql_primarykey.asp" ignore-vars="true">
                https://www.w3schools.com/sql/sql_primarykey.asp
            </a>, 2022-11-13 18:00
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/sql/sql_check.asp" ignore-vars="true">
                https://www.w3schools.com/sql/sql_check.asp
            </a>, 2022-11-13 18:00
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/sql/sql_autoincrement.asp" ignore-vars="true">
                https://www.w3schools.com/sql/sql_autoincrement.asp
            </a>, 2022-11-13 18:00
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/sql/sql_notnull.asp" ignore-vars="true">
                https://www.w3schools.com/sql/sql_notnull.asp
            </a>, 2022-11-13 18:00
        </tip>
        <tip>
            <b>(WEBSEITE)</b>
            <a href="https://www.w3schools.com/sql/sql_default.asp" ignore-vars="true">
                https://www.w3schools.com/sql/sql_default.asp
            </a>, 2022-11-13 18:00
        </tip>
    </chapter>
</topic>